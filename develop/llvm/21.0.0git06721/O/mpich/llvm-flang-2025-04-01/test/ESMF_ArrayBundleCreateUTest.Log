2025-05-07 23:13:27
20250508 012551.337 INFO             PET0 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET0 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250508 012551.337 INFO             PET0 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250508 012551.337 INFO             PET0 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250508 012551.337 INFO             PET0 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250508 012551.337 INFO             PET0 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET0 Running with ESMF Version   : v8.9.0b08-5-g079ca68fdc
20250508 012551.337 INFO             PET0 ESMF library build date/time: "May  7 2025" "23:10:19"
20250508 012551.337 INFO             PET0 ESMF library build location : /discover/nobackup/projects/gmao/SIteam/ESMF_Testing/llvm_21.0.0git06721_mpich_O_develop/esmf
20250508 012551.337 INFO             PET0 ESMF_COMM                   : mpich
20250508 012551.337 INFO             PET0 ESMF_MOAB                   : enabled
20250508 012551.337 INFO             PET0 ESMF_LAPACK                 : enabled
20250508 012551.337 INFO             PET0 ESMF_NETCDF                 : disabled
20250508 012551.337 INFO             PET0 ESMF_PNETCDF                : disabled
20250508 012551.337 INFO             PET0 ESMF_PIO                    : disabled
20250508 012551.337 INFO             PET0 ESMF_YAMLCPP                : enabled
20250508 012551.338 INFO             PET0  Beginning Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 81
20250508 012551.338 INFO             PET0  NUMBER_OF_PROCESSORS 4
20250508 012551.338 INFO             PET0  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 90
20250508 012551.338 INFO             PET0  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 98
20250508 012551.338 INFO             PET0  PASS  Create test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 106
20250508 012551.338 INFO             PET0  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 114
20250508 012551.338 INFO             PET0  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 122
20250508 012551.338 INFO             PET0  PASS  Destroy test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 130
20250508 012551.338 INFO             PET0  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 138
20250508 012551.338 INFO             PET0  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 146
20250508 012551.338 INFO             PET0  PASS  empty ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 154
20250508 012551.338 INFO             PET0  PASS  ArrayBundlePrint #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 161
20250508 012551.339 INFO             PET0 log-#1: --- ArrayBundle::log() start -----------------------------
20250508 012551.339 INFO             PET0 log-#1: ArrayBundle object is valid! <name: MyEmptyArrayBundle> <itemCount: 0>
20250508 012551.339 INFO             PET0 log-#1: --- ArrayBundle::log() end -------------------------------
20250508 012551.339 INFO             PET0  PASS  ArrayBundleLog #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 168
20250508 012551.339 INFO             PET0  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 175
20250508 012551.339 INFO             PET0  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 191
20250508 012551.339 INFO             PET0  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 199
20250508 012551.339 INFO             PET0  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 207
20250508 012551.340 INFO             PET0  PASS  ArrayBundle equality before assignment Test, ./ESMF_ArrayBundleCreateUTest.F90, line 215
20250508 012551.340 INFO             PET0  PASS  ArrayBundle assignment and equality Test, ./ESMF_ArrayBundleCreateUTest.F90, line 225
20250508 012551.340 INFO             PET0  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 232
20250508 012551.340 INFO             PET0  PASS  ArrayBundle equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 240
20250508 012551.340 INFO             PET0  PASS  ArrayBundle non-equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 248
20250508 012551.340 INFO             PET0  PASS  Double ArrayBundleDestroy through alias Test, ./ESMF_ArrayBundleCreateUTest.F90, line 255
20250508 012551.340 INFO             PET0  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 263
20250508 012551.340 INFO             PET0  PASS  ArrayBundlePrint #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 270
20250508 012551.340 INFO             PET0 log-#2: --- ArrayBundle::log() start -----------------------------
20250508 012551.340 INFO             PET0 log-#2: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 2>
20250508 012551.340 INFO             PET0 log-#2: +-<item: 0> <itemName: MyArray>
20250508 012551.340 INFO             PET0 log-#2: +-<item: 1> <itemName: MyArray2>
20250508 012551.340 INFO             PET0 log-#2: --- ArrayBundle::log() end -------------------------------
20250508 012551.340 INFO             PET0  PASS  ArrayBundleLog #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 277
20250508 012551.340 INFO             PET0  PASS  ArrayBundleGet with arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 285
20250508 012551.340 INFO             PET0  PASS  ArrayBundleGet with arrayNameList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 295
20250508 012551.340 ERROR            PET0 ESMCI_Container.h:110 ESMCI::Container::add() Invalid argument  - key already exists: MyArray
20250508 012551.340 ERROR            PET0 ESMCI_ArrayBundle_F.C:82 c_esmc_arraybundleadd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET0 ESMF_ArrayBundle.F90:552 ESMF_ArrayBundleAdd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET0  PASS  ArrayBundleAdd with existing Array Test, ./ESMF_ArrayBundleCreateUTest.F90, line 306
20250508 012551.340 INFO             PET0  PASS  ArrayBundleAdd with existing Array but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 314
20250508 012551.340 INFO             PET0  PASS  ArrayBundleAdd with zero size arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 322
20250508 012551.340 ERROR            PET0 ESMCI_Container.h:178 ESMCI::Container::get() Invalid argument  - key does not exist: MyArray3
20250508 012551.340 ERROR            PET0 ESMCI_ArrayBundle_F.C:270 c_esmc_arraybundlegetitem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET0 ESMF_ArrayBundle.F90:1105 ESMF_ArrayBundleGetItem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET0  PASS  ArrayBundleGet with arrayName not exist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 331
20250508 012551.340 INFO             PET0  PASS  ArrayBundleGet with arrayName not exist isPresent Test, ./ESMF_ArrayBundleCreateUTest.F90, line 339
20250508 012551.340 INFO             PET0  PASS  Validate isPresent flag, ./ESMF_ArrayBundleCreateUTest.F90, line 344
20250508 012551.340 INFO             PET0  PASS  ArrayBundleAdd with arrayList size 1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 356
20250508 012551.341 INFO             PET0  PASS  ArrayBundleGet with arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 365
20250508 012551.341 INFO             PET0  PASS  ArrayBundleRemove with arrayNameList size 1 exising Test, ./ESMF_ArrayBundleCreateUTest.F90, line 375
20250508 012551.341 ERROR            PET0 ESMCI_Container.h:325 ESMCI::Container::remove() Invalid argument  - key does not exist: MyArray
20250508 012551.341 ERROR            PET0 ESMCI_ArrayBundle_F.C:589 c_esmc_arraybundleremove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET0 ESMF_ArrayBundle.F90:2715 ESMF_ArrayBundleRemove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET0  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 382
20250508 012551.341 INFO             PET0  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 390
20250508 012551.341 INFO             PET0  PASS  ArrayBundleAdd with arrayList size 3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 408
20250508 012551.341 INFO             PET0  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 416
20250508 012551.341 INFO             PET0  PASS  ArrayBundleReplace with arrayList 1exist+2notexist relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 424
20250508 012551.341 ERROR            PET0 ESMCI_Container.h:376 ESMCI::Container::replace() Invalid argument  - key does not exist: MyArray4
20250508 012551.341 ERROR            PET0 ESMCI_ArrayBundle_F.C:636 c_esmc_arraybundlereplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET0 ESMF_ArrayBundle.F90:2824 ESMF_ArrayBundleReplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET0  PASS  ArrayBundleReplace with arrayList 1exist+2notexist strict Test, ./ESMF_ArrayBundleCreateUTest.F90, line 431
20250508 012551.341 INFO             PET0  PASS  ArrayBundleAddReplace with arrayList 1exist+2notexist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 438
20250508 012551.341 INFO             PET0  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 446
20250508 012551.341 INFO             PET0  PASS  ArrayBundleAdd with multiflag #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 454
20250508 012551.341 INFO             PET0  PASS  ArrayBundleAdd with multiflag #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 462
20250508 012551.341 INFO             PET0 log-#3: --- ArrayBundle::log() start -----------------------------
20250508 012551.341 INFO             PET0 log-#3: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 9>
20250508 012551.341 INFO             PET0 log-#3: +-<item: 0> <itemName: MyArray2>
20250508 012551.341 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.341 INFO             PET0 log-#3: ! 0x55d2c11a5f50
20250508 012551.341 INFO             PET0 log-#3: ! <name: MyArray2>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 1> <itemName: MyArray4>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12db960
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 2> <itemName: MyArray4>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12db960
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 3> <itemName: MyArray4>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12db960
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 4> <itemName: MyArray5>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12dd520
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 5> <itemName: MyArray5>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12dd520
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 6> <itemName: MyArray6>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12dc700
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 7> <itemName: MyArray6>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12dc700
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: +-<item: 8> <itemName: MyArray6>
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! 0x55d2c12dc700
20250508 012551.342 INFO             PET0 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! ! 0x55d2c11a37c0
20250508 012551.342 INFO             PET0 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET0 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET0 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET0 log-#3: --- ArrayBundle::log() end -------------------------------
20250508 012551.343 INFO             PET0  PASS  ArrayBundleLog #3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 474
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet with arrayName to get count Test, ./ESMF_ArrayBundleCreateUTest.F90, line 482
20250508 012551.343 INFO             PET0  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 488
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet arrayList for arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 499
20250508 012551.343 INFO             PET0  PASS  Verify Container Get arrayList for arrayname Test, ./ESMF_ArrayBundleCreateUTest.F90, line 515
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 524
20250508 012551.343 INFO             PET0  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 530
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet arrayList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 541
20250508 012551.343 INFO             PET0  PASS  Verify Container Get arrayList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 567
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet arrayNameList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 574
20250508 012551.343 INFO             PET0  PASS  Verify Container Get arrayNameList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 595
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet arrayList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 603
20250508 012551.343 INFO             PET0  PASS  Verify Container Get arrayList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 629
20250508 012551.343 INFO             PET0  PASS  ArrayBundleGet arrayNameList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 637
20250508 012551.343 INFO             PET0  PASS  Verify Container Get arrayNameList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 658
20250508 012551.343 INFO             PET0  PASS  Computing space for serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 686
20250508 012551.343 INFO             PET0  PASS  Allocate serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 696
20250508 012551.343 INFO             PET0  PASS  Serialization Arraybundle data, ./ESMF_ArrayBundleCreateUTest.F90, line 712
20250508 012551.344 INFO             PET0  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 724
20250508 012551.344 INFO             PET0  Ending Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 748
20250508 012551.344 INFO             PET0  Finalizing ESMF
20250508 012551.337 INFO             PET1 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET1 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250508 012551.337 INFO             PET1 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250508 012551.337 INFO             PET1 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250508 012551.337 INFO             PET1 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250508 012551.337 INFO             PET1 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET1 Running with ESMF Version   : v8.9.0b08-5-g079ca68fdc
20250508 012551.337 INFO             PET1 ESMF library build date/time: "May  7 2025" "23:10:19"
20250508 012551.337 INFO             PET1 ESMF library build location : /discover/nobackup/projects/gmao/SIteam/ESMF_Testing/llvm_21.0.0git06721_mpich_O_develop/esmf
20250508 012551.337 INFO             PET1 ESMF_COMM                   : mpich
20250508 012551.337 INFO             PET1 ESMF_MOAB                   : enabled
20250508 012551.338 INFO             PET1 ESMF_LAPACK                 : enabled
20250508 012551.338 INFO             PET1 ESMF_NETCDF                 : disabled
20250508 012551.338 INFO             PET1 ESMF_PNETCDF                : disabled
20250508 012551.338 INFO             PET1 ESMF_PIO                    : disabled
20250508 012551.338 INFO             PET1 ESMF_YAMLCPP                : enabled
20250508 012551.338 INFO             PET1  Beginning Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 81
20250508 012551.338 INFO             PET1  NUMBER_OF_PROCESSORS 4
20250508 012551.338 INFO             PET1  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 90
20250508 012551.338 INFO             PET1  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 98
20250508 012551.338 INFO             PET1  PASS  Create test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 106
20250508 012551.338 INFO             PET1  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 114
20250508 012551.338 INFO             PET1  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 122
20250508 012551.338 INFO             PET1  PASS  Destroy test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 130
20250508 012551.338 INFO             PET1  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 138
20250508 012551.338 INFO             PET1  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 146
20250508 012551.338 INFO             PET1  PASS  empty ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 154
20250508 012551.338 INFO             PET1  PASS  ArrayBundlePrint #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 161
20250508 012551.339 INFO             PET1 log-#1: --- ArrayBundle::log() start -----------------------------
20250508 012551.339 INFO             PET1 log-#1: ArrayBundle object is valid! <name: MyEmptyArrayBundle> <itemCount: 0>
20250508 012551.339 INFO             PET1 log-#1: --- ArrayBundle::log() end -------------------------------
20250508 012551.339 INFO             PET1  PASS  ArrayBundleLog #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 168
20250508 012551.339 INFO             PET1  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 175
20250508 012551.339 INFO             PET1  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 191
20250508 012551.339 INFO             PET1  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 199
20250508 012551.339 INFO             PET1  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 207
20250508 012551.339 INFO             PET1  PASS  ArrayBundle equality before assignment Test, ./ESMF_ArrayBundleCreateUTest.F90, line 215
20250508 012551.340 INFO             PET1  PASS  ArrayBundle assignment and equality Test, ./ESMF_ArrayBundleCreateUTest.F90, line 225
20250508 012551.340 INFO             PET1  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 232
20250508 012551.340 INFO             PET1  PASS  ArrayBundle equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 240
20250508 012551.340 INFO             PET1  PASS  ArrayBundle non-equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 248
20250508 012551.340 INFO             PET1  PASS  Double ArrayBundleDestroy through alias Test, ./ESMF_ArrayBundleCreateUTest.F90, line 255
20250508 012551.340 INFO             PET1  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 263
20250508 012551.340 INFO             PET1  PASS  ArrayBundlePrint #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 270
20250508 012551.340 INFO             PET1 log-#2: --- ArrayBundle::log() start -----------------------------
20250508 012551.340 INFO             PET1 log-#2: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 2>
20250508 012551.340 INFO             PET1 log-#2: +-<item: 0> <itemName: MyArray>
20250508 012551.340 INFO             PET1 log-#2: +-<item: 1> <itemName: MyArray2>
20250508 012551.340 INFO             PET1 log-#2: --- ArrayBundle::log() end -------------------------------
20250508 012551.340 INFO             PET1  PASS  ArrayBundleLog #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 277
20250508 012551.340 INFO             PET1  PASS  ArrayBundleGet with arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 285
20250508 012551.340 INFO             PET1  PASS  ArrayBundleGet with arrayNameList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 295
20250508 012551.340 ERROR            PET1 ESMCI_Container.h:110 ESMCI::Container::add() Invalid argument  - key already exists: MyArray
20250508 012551.340 ERROR            PET1 ESMCI_ArrayBundle_F.C:82 c_esmc_arraybundleadd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET1 ESMF_ArrayBundle.F90:552 ESMF_ArrayBundleAdd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET1  PASS  ArrayBundleAdd with existing Array Test, ./ESMF_ArrayBundleCreateUTest.F90, line 306
20250508 012551.340 INFO             PET1  PASS  ArrayBundleAdd with existing Array but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 314
20250508 012551.340 INFO             PET1  PASS  ArrayBundleAdd with zero size arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 322
20250508 012551.340 ERROR            PET1 ESMCI_Container.h:178 ESMCI::Container::get() Invalid argument  - key does not exist: MyArray3
20250508 012551.340 ERROR            PET1 ESMCI_ArrayBundle_F.C:270 c_esmc_arraybundlegetitem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET1 ESMF_ArrayBundle.F90:1105 ESMF_ArrayBundleGetItem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET1  PASS  ArrayBundleGet with arrayName not exist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 331
20250508 012551.340 INFO             PET1  PASS  ArrayBundleGet with arrayName not exist isPresent Test, ./ESMF_ArrayBundleCreateUTest.F90, line 339
20250508 012551.340 INFO             PET1  PASS  Validate isPresent flag, ./ESMF_ArrayBundleCreateUTest.F90, line 344
20250508 012551.340 INFO             PET1  PASS  ArrayBundleAdd with arrayList size 1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 356
20250508 012551.341 INFO             PET1  PASS  ArrayBundleGet with arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 365
20250508 012551.341 INFO             PET1  PASS  ArrayBundleRemove with arrayNameList size 1 exising Test, ./ESMF_ArrayBundleCreateUTest.F90, line 375
20250508 012551.341 ERROR            PET1 ESMCI_Container.h:325 ESMCI::Container::remove() Invalid argument  - key does not exist: MyArray
20250508 012551.341 ERROR            PET1 ESMCI_ArrayBundle_F.C:589 c_esmc_arraybundleremove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET1 ESMF_ArrayBundle.F90:2715 ESMF_ArrayBundleRemove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET1  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 382
20250508 012551.341 INFO             PET1  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 390
20250508 012551.341 INFO             PET1  PASS  ArrayBundleAdd with arrayList size 3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 408
20250508 012551.341 INFO             PET1  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 416
20250508 012551.341 INFO             PET1  PASS  ArrayBundleReplace with arrayList 1exist+2notexist relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 424
20250508 012551.341 ERROR            PET1 ESMCI_Container.h:376 ESMCI::Container::replace() Invalid argument  - key does not exist: MyArray4
20250508 012551.341 ERROR            PET1 ESMCI_ArrayBundle_F.C:636 c_esmc_arraybundlereplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET1 ESMF_ArrayBundle.F90:2824 ESMF_ArrayBundleReplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET1  PASS  ArrayBundleReplace with arrayList 1exist+2notexist strict Test, ./ESMF_ArrayBundleCreateUTest.F90, line 431
20250508 012551.341 INFO             PET1  PASS  ArrayBundleAddReplace with arrayList 1exist+2notexist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 438
20250508 012551.341 INFO             PET1  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 446
20250508 012551.341 INFO             PET1  PASS  ArrayBundleAdd with multiflag #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 454
20250508 012551.341 INFO             PET1  PASS  ArrayBundleAdd with multiflag #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 462
20250508 012551.341 INFO             PET1 log-#3: --- ArrayBundle::log() start -----------------------------
20250508 012551.341 INFO             PET1 log-#3: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 9>
20250508 012551.341 INFO             PET1 log-#3: +-<item: 0> <itemName: MyArray2>
20250508 012551.341 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.341 INFO             PET1 log-#3: ! 0x55a1575d0f90
20250508 012551.341 INFO             PET1 log-#3: ! <name: MyArray2>
20250508 012551.341 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 1> <itemName: MyArray4>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1575d3ae0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 2> <itemName: MyArray4>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1575d3ae0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 3> <itemName: MyArray4>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1575d3ae0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 4> <itemName: MyArray5>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1576f83b0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 5> <itemName: MyArray5>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1576f83b0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 6> <itemName: MyArray6>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1576f75f0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 7> <itemName: MyArray6>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1576f75f0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET1 log-#3: +-<item: 8> <itemName: MyArray6>
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! 0x55a1576f75f0
20250508 012551.342 INFO             PET1 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! ! 0x55a1575ce5a0
20250508 012551.342 INFO             PET1 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET1 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET1 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.343 INFO             PET1 log-#3: --- ArrayBundle::log() end -------------------------------
20250508 012551.343 INFO             PET1  PASS  ArrayBundleLog #3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 474
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet with arrayName to get count Test, ./ESMF_ArrayBundleCreateUTest.F90, line 482
20250508 012551.343 INFO             PET1  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 488
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet arrayList for arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 499
20250508 012551.343 INFO             PET1  PASS  Verify Container Get arrayList for arrayname Test, ./ESMF_ArrayBundleCreateUTest.F90, line 515
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 524
20250508 012551.343 INFO             PET1  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 530
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet arrayList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 541
20250508 012551.343 INFO             PET1  PASS  Verify Container Get arrayList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 567
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet arrayNameList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 574
20250508 012551.343 INFO             PET1  PASS  Verify Container Get arrayNameList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 595
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet arrayList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 603
20250508 012551.343 INFO             PET1  PASS  Verify Container Get arrayList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 629
20250508 012551.343 INFO             PET1  PASS  ArrayBundleGet arrayNameList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 637
20250508 012551.343 INFO             PET1  PASS  Verify Container Get arrayNameList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 658
20250508 012551.343 INFO             PET1  PASS  Computing space for serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 686
20250508 012551.343 INFO             PET1  PASS  Allocate serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 696
20250508 012551.343 INFO             PET1  PASS  Serialization Arraybundle data, ./ESMF_ArrayBundleCreateUTest.F90, line 712
20250508 012551.344 INFO             PET1  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 724
20250508 012551.344 INFO             PET1  Ending Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 748
20250508 012551.344 INFO             PET1  Finalizing ESMF
20250508 012551.337 INFO             PET2 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET2 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250508 012551.337 INFO             PET2 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250508 012551.337 INFO             PET2 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250508 012551.337 INFO             PET2 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250508 012551.337 INFO             PET2 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET2 Running with ESMF Version   : v8.9.0b08-5-g079ca68fdc
20250508 012551.338 INFO             PET2 ESMF library build date/time: "May  7 2025" "23:10:19"
20250508 012551.338 INFO             PET2 ESMF library build location : /discover/nobackup/projects/gmao/SIteam/ESMF_Testing/llvm_21.0.0git06721_mpich_O_develop/esmf
20250508 012551.338 INFO             PET2 ESMF_COMM                   : mpich
20250508 012551.338 INFO             PET2 ESMF_MOAB                   : enabled
20250508 012551.338 INFO             PET2 ESMF_LAPACK                 : enabled
20250508 012551.338 INFO             PET2 ESMF_NETCDF                 : disabled
20250508 012551.338 INFO             PET2 ESMF_PNETCDF                : disabled
20250508 012551.338 INFO             PET2 ESMF_PIO                    : disabled
20250508 012551.338 INFO             PET2 ESMF_YAMLCPP                : enabled
20250508 012551.338 INFO             PET2  Beginning Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 81
20250508 012551.338 INFO             PET2  NUMBER_OF_PROCESSORS 4
20250508 012551.338 INFO             PET2  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 90
20250508 012551.338 INFO             PET2  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 98
20250508 012551.338 INFO             PET2  PASS  Create test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 106
20250508 012551.338 INFO             PET2  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 114
20250508 012551.338 INFO             PET2  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 122
20250508 012551.338 INFO             PET2  PASS  Destroy test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 130
20250508 012551.338 INFO             PET2  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 138
20250508 012551.338 INFO             PET2  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 146
20250508 012551.338 INFO             PET2  PASS  empty ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 154
20250508 012551.338 INFO             PET2  PASS  ArrayBundlePrint #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 161
20250508 012551.339 INFO             PET2 log-#1: --- ArrayBundle::log() start -----------------------------
20250508 012551.339 INFO             PET2 log-#1: ArrayBundle object is valid! <name: MyEmptyArrayBundle> <itemCount: 0>
20250508 012551.339 INFO             PET2 log-#1: --- ArrayBundle::log() end -------------------------------
20250508 012551.339 INFO             PET2  PASS  ArrayBundleLog #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 168
20250508 012551.339 INFO             PET2  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 175
20250508 012551.339 INFO             PET2  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 191
20250508 012551.339 INFO             PET2  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 199
20250508 012551.339 INFO             PET2  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 207
20250508 012551.339 INFO             PET2  PASS  ArrayBundle equality before assignment Test, ./ESMF_ArrayBundleCreateUTest.F90, line 215
20250508 012551.340 INFO             PET2  PASS  ArrayBundle assignment and equality Test, ./ESMF_ArrayBundleCreateUTest.F90, line 225
20250508 012551.340 INFO             PET2  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 232
20250508 012551.340 INFO             PET2  PASS  ArrayBundle equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 240
20250508 012551.340 INFO             PET2  PASS  ArrayBundle non-equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 248
20250508 012551.340 INFO             PET2  PASS  Double ArrayBundleDestroy through alias Test, ./ESMF_ArrayBundleCreateUTest.F90, line 255
20250508 012551.340 INFO             PET2  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 263
20250508 012551.340 INFO             PET2  PASS  ArrayBundlePrint #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 270
20250508 012551.340 INFO             PET2 log-#2: --- ArrayBundle::log() start -----------------------------
20250508 012551.340 INFO             PET2 log-#2: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 2>
20250508 012551.340 INFO             PET2 log-#2: +-<item: 0> <itemName: MyArray>
20250508 012551.340 INFO             PET2 log-#2: +-<item: 1> <itemName: MyArray2>
20250508 012551.340 INFO             PET2 log-#2: --- ArrayBundle::log() end -------------------------------
20250508 012551.340 INFO             PET2  PASS  ArrayBundleLog #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 277
20250508 012551.340 INFO             PET2  PASS  ArrayBundleGet with arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 285
20250508 012551.340 INFO             PET2  PASS  ArrayBundleGet with arrayNameList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 295
20250508 012551.340 ERROR            PET2 ESMCI_Container.h:110 ESMCI::Container::add() Invalid argument  - key already exists: MyArray
20250508 012551.340 ERROR            PET2 ESMCI_ArrayBundle_F.C:82 c_esmc_arraybundleadd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET2 ESMF_ArrayBundle.F90:552 ESMF_ArrayBundleAdd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET2  PASS  ArrayBundleAdd with existing Array Test, ./ESMF_ArrayBundleCreateUTest.F90, line 306
20250508 012551.340 INFO             PET2  PASS  ArrayBundleAdd with existing Array but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 314
20250508 012551.340 INFO             PET2  PASS  ArrayBundleAdd with zero size arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 322
20250508 012551.340 ERROR            PET2 ESMCI_Container.h:178 ESMCI::Container::get() Invalid argument  - key does not exist: MyArray3
20250508 012551.340 ERROR            PET2 ESMCI_ArrayBundle_F.C:270 c_esmc_arraybundlegetitem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET2 ESMF_ArrayBundle.F90:1105 ESMF_ArrayBundleGetItem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET2  PASS  ArrayBundleGet with arrayName not exist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 331
20250508 012551.340 INFO             PET2  PASS  ArrayBundleGet with arrayName not exist isPresent Test, ./ESMF_ArrayBundleCreateUTest.F90, line 339
20250508 012551.340 INFO             PET2  PASS  Validate isPresent flag, ./ESMF_ArrayBundleCreateUTest.F90, line 344
20250508 012551.340 INFO             PET2  PASS  ArrayBundleAdd with arrayList size 1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 356
20250508 012551.341 INFO             PET2  PASS  ArrayBundleGet with arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 365
20250508 012551.341 INFO             PET2  PASS  ArrayBundleRemove with arrayNameList size 1 exising Test, ./ESMF_ArrayBundleCreateUTest.F90, line 375
20250508 012551.341 ERROR            PET2 ESMCI_Container.h:325 ESMCI::Container::remove() Invalid argument  - key does not exist: MyArray
20250508 012551.341 ERROR            PET2 ESMCI_ArrayBundle_F.C:589 c_esmc_arraybundleremove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET2 ESMF_ArrayBundle.F90:2715 ESMF_ArrayBundleRemove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET2  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 382
20250508 012551.341 INFO             PET2  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 390
20250508 012551.341 INFO             PET2  PASS  ArrayBundleAdd with arrayList size 3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 408
20250508 012551.341 INFO             PET2  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 416
20250508 012551.341 INFO             PET2  PASS  ArrayBundleReplace with arrayList 1exist+2notexist relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 424
20250508 012551.341 ERROR            PET2 ESMCI_Container.h:376 ESMCI::Container::replace() Invalid argument  - key does not exist: MyArray4
20250508 012551.341 ERROR            PET2 ESMCI_ArrayBundle_F.C:636 c_esmc_arraybundlereplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET2 ESMF_ArrayBundle.F90:2824 ESMF_ArrayBundleReplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET2  PASS  ArrayBundleReplace with arrayList 1exist+2notexist strict Test, ./ESMF_ArrayBundleCreateUTest.F90, line 431
20250508 012551.341 INFO             PET2  PASS  ArrayBundleAddReplace with arrayList 1exist+2notexist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 438
20250508 012551.341 INFO             PET2  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 446
20250508 012551.341 INFO             PET2  PASS  ArrayBundleAdd with multiflag #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 454
20250508 012551.341 INFO             PET2  PASS  ArrayBundleAdd with multiflag #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 462
20250508 012551.341 INFO             PET2 log-#3: --- ArrayBundle::log() start -----------------------------
20250508 012551.341 INFO             PET2 log-#3: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 9>
20250508 012551.341 INFO             PET2 log-#3: +-<item: 0> <itemName: MyArray2>
20250508 012551.341 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.341 INFO             PET2 log-#3: ! 0x55c9128c0d00
20250508 012551.341 INFO             PET2 log-#3: ! <name: MyArray2>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 1> <itemName: MyArray4>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9128c3890
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 2> <itemName: MyArray4>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9128c3890
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 3> <itemName: MyArray4>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9128c3890
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 4> <itemName: MyArray5>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9129e81b0
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 5> <itemName: MyArray5>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9129e81b0
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 6> <itemName: MyArray6>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9129e75b0
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 7> <itemName: MyArray6>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9129e75b0
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: +-<item: 8> <itemName: MyArray6>
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! 0x55c9129e75b0
20250508 012551.342 INFO             PET2 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! ! 0x55c9128be5a0
20250508 012551.342 INFO             PET2 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET2 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET2 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET2 log-#3: --- ArrayBundle::log() end -------------------------------
20250508 012551.343 INFO             PET2  PASS  ArrayBundleLog #3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 474
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet with arrayName to get count Test, ./ESMF_ArrayBundleCreateUTest.F90, line 482
20250508 012551.343 INFO             PET2  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 488
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet arrayList for arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 499
20250508 012551.343 INFO             PET2  PASS  Verify Container Get arrayList for arrayname Test, ./ESMF_ArrayBundleCreateUTest.F90, line 515
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 524
20250508 012551.343 INFO             PET2  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 530
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet arrayList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 541
20250508 012551.343 INFO             PET2  PASS  Verify Container Get arrayList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 567
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet arrayNameList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 574
20250508 012551.343 INFO             PET2  PASS  Verify Container Get arrayNameList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 595
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet arrayList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 603
20250508 012551.343 INFO             PET2  PASS  Verify Container Get arrayList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 629
20250508 012551.343 INFO             PET2  PASS  ArrayBundleGet arrayNameList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 637
20250508 012551.343 INFO             PET2  PASS  Verify Container Get arrayNameList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 658
20250508 012551.343 INFO             PET2  PASS  Computing space for serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 686
20250508 012551.343 INFO             PET2  PASS  Allocate serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 696
20250508 012551.343 INFO             PET2  PASS  Serialization Arraybundle data, ./ESMF_ArrayBundleCreateUTest.F90, line 712
20250508 012551.344 INFO             PET2  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 724
20250508 012551.344 INFO             PET2  Ending Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 748
20250508 012551.344 INFO             PET2  Finalizing ESMF
20250508 012551.337 INFO             PET3 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET3 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250508 012551.337 INFO             PET3 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250508 012551.337 INFO             PET3 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250508 012551.337 INFO             PET3 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250508 012551.337 INFO             PET3 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250508 012551.337 INFO             PET3 Running with ESMF Version   : v8.9.0b08-5-g079ca68fdc
20250508 012551.337 INFO             PET3 ESMF library build date/time: "May  7 2025" "23:10:19"
20250508 012551.337 INFO             PET3 ESMF library build location : /discover/nobackup/projects/gmao/SIteam/ESMF_Testing/llvm_21.0.0git06721_mpich_O_develop/esmf
20250508 012551.337 INFO             PET3 ESMF_COMM                   : mpich
20250508 012551.337 INFO             PET3 ESMF_MOAB                   : enabled
20250508 012551.337 INFO             PET3 ESMF_LAPACK                 : enabled
20250508 012551.337 INFO             PET3 ESMF_NETCDF                 : disabled
20250508 012551.337 INFO             PET3 ESMF_PNETCDF                : disabled
20250508 012551.337 INFO             PET3 ESMF_PIO                    : disabled
20250508 012551.337 INFO             PET3 ESMF_YAMLCPP                : enabled
20250508 012551.338 INFO             PET3  Beginning Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 81
20250508 012551.338 INFO             PET3  NUMBER_OF_PROCESSORS 4
20250508 012551.338 INFO             PET3  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 90
20250508 012551.338 INFO             PET3  PASS  Testing ArrayBundle IsCreated for uncreated object, ./ESMF_ArrayBundleCreateUTest.F90, line 98
20250508 012551.338 INFO             PET3  PASS  Create test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 106
20250508 012551.338 INFO             PET3  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 114
20250508 012551.338 INFO             PET3  PASS  Testing ArrayBundle IsCreated for created object, ./ESMF_ArrayBundleCreateUTest.F90, line 122
20250508 012551.338 INFO             PET3  PASS  Destroy test ArrayBundle for IsCreated, ./ESMF_ArrayBundleCreateUTest.F90, line 130
20250508 012551.338 INFO             PET3  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 138
20250508 012551.338 INFO             PET3  PASS  Testing ArrayBundle IsCreated for destroyed object, ./ESMF_ArrayBundleCreateUTest.F90, line 146
20250508 012551.338 INFO             PET3  PASS  empty ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 154
20250508 012551.338 INFO             PET3  PASS  ArrayBundlePrint #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 161
20250508 012551.339 INFO             PET3 log-#1: --- ArrayBundle::log() start -----------------------------
20250508 012551.339 INFO             PET3 log-#1: ArrayBundle object is valid! <name: MyEmptyArrayBundle> <itemCount: 0>
20250508 012551.339 INFO             PET3 log-#1: --- ArrayBundle::log() end -------------------------------
20250508 012551.339 INFO             PET3  PASS  ArrayBundleLog #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 168
20250508 012551.339 INFO             PET3  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 175
20250508 012551.339 INFO             PET3  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 191
20250508 012551.339 INFO             PET3  PASS  ArrayCreate Allocate 2D ESMF_TYPEKIND_R8 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 199
20250508 012551.339 INFO             PET3  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 207
20250508 012551.340 INFO             PET3  PASS  ArrayBundle equality before assignment Test, ./ESMF_ArrayBundleCreateUTest.F90, line 215
20250508 012551.340 INFO             PET3  PASS  ArrayBundle assignment and equality Test, ./ESMF_ArrayBundleCreateUTest.F90, line 225
20250508 012551.340 INFO             PET3  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 232
20250508 012551.340 INFO             PET3  PASS  ArrayBundle equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 240
20250508 012551.340 INFO             PET3  PASS  ArrayBundle non-equality after destroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 248
20250508 012551.340 INFO             PET3  PASS  Double ArrayBundleDestroy through alias Test, ./ESMF_ArrayBundleCreateUTest.F90, line 255
20250508 012551.340 INFO             PET3  PASS  ArrayBundleCreate Test, ./ESMF_ArrayBundleCreateUTest.F90, line 263
20250508 012551.340 INFO             PET3  PASS  ArrayBundlePrint #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 270
20250508 012551.340 INFO             PET3 log-#2: --- ArrayBundle::log() start -----------------------------
20250508 012551.340 INFO             PET3 log-#2: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 2>
20250508 012551.340 INFO             PET3 log-#2: +-<item: 0> <itemName: MyArray>
20250508 012551.340 INFO             PET3 log-#2: +-<item: 1> <itemName: MyArray2>
20250508 012551.340 INFO             PET3 log-#2: --- ArrayBundle::log() end -------------------------------
20250508 012551.340 INFO             PET3  PASS  ArrayBundleLog #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 277
20250508 012551.340 INFO             PET3  PASS  ArrayBundleGet with arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 285
20250508 012551.340 INFO             PET3  PASS  ArrayBundleGet with arrayNameList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 295
20250508 012551.340 ERROR            PET3 ESMCI_Container.h:110 ESMCI::Container::add() Invalid argument  - key already exists: MyArray
20250508 012551.340 ERROR            PET3 ESMCI_ArrayBundle_F.C:82 c_esmc_arraybundleadd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET3 ESMF_ArrayBundle.F90:552 ESMF_ArrayBundleAdd() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET3  PASS  ArrayBundleAdd with existing Array Test, ./ESMF_ArrayBundleCreateUTest.F90, line 306
20250508 012551.340 INFO             PET3  PASS  ArrayBundleAdd with existing Array but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 314
20250508 012551.340 INFO             PET3  PASS  ArrayBundleAdd with zero size arrayList Test, ./ESMF_ArrayBundleCreateUTest.F90, line 322
20250508 012551.340 ERROR            PET3 ESMCI_Container.h:178 ESMCI::Container::get() Invalid argument  - key does not exist: MyArray3
20250508 012551.340 ERROR            PET3 ESMCI_ArrayBundle_F.C:270 c_esmc_arraybundlegetitem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 ERROR            PET3 ESMF_ArrayBundle.F90:1105 ESMF_ArrayBundleGetItem() Invalid argument  - Internal subroutine call returned Error
20250508 012551.340 INFO             PET3  PASS  ArrayBundleGet with arrayName not exist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 331
20250508 012551.340 INFO             PET3  PASS  ArrayBundleGet with arrayName not exist isPresent Test, ./ESMF_ArrayBundleCreateUTest.F90, line 339
20250508 012551.340 INFO             PET3  PASS  Validate isPresent flag, ./ESMF_ArrayBundleCreateUTest.F90, line 344
20250508 012551.340 INFO             PET3  PASS  ArrayBundleAdd with arrayList size 1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 356
20250508 012551.341 INFO             PET3  PASS  ArrayBundleGet with arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 365
20250508 012551.341 INFO             PET3  PASS  ArrayBundleRemove with arrayNameList size 1 exising Test, ./ESMF_ArrayBundleCreateUTest.F90, line 375
20250508 012551.341 ERROR            PET3 ESMCI_Container.h:325 ESMCI::Container::remove() Invalid argument  - key does not exist: MyArray
20250508 012551.341 ERROR            PET3 ESMCI_ArrayBundle_F.C:589 c_esmc_arraybundleremove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET3 ESMF_ArrayBundle.F90:2715 ESMF_ArrayBundleRemove() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET3  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 382
20250508 012551.341 INFO             PET3  PASS  ArrayBundleRemove with arrayNameList size 1 not-existing but relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 390
20250508 012551.341 INFO             PET3  PASS  ArrayBundleAdd with arrayList size 3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 408
20250508 012551.341 INFO             PET3  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 416
20250508 012551.341 INFO             PET3  PASS  ArrayBundleReplace with arrayList 1exist+2notexist relaxed Test, ./ESMF_ArrayBundleCreateUTest.F90, line 424
20250508 012551.341 ERROR            PET3 ESMCI_Container.h:376 ESMCI::Container::replace() Invalid argument  - key does not exist: MyArray4
20250508 012551.341 ERROR            PET3 ESMCI_ArrayBundle_F.C:636 c_esmc_arraybundlereplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 ERROR            PET3 ESMF_ArrayBundle.F90:2824 ESMF_ArrayBundleReplace() Invalid argument  - Internal subroutine call returned Error
20250508 012551.341 INFO             PET3  PASS  ArrayBundleReplace with arrayList 1exist+2notexist strict Test, ./ESMF_ArrayBundleCreateUTest.F90, line 431
20250508 012551.341 INFO             PET3  PASS  ArrayBundleAddReplace with arrayList 1exist+2notexist Test, ./ESMF_ArrayBundleCreateUTest.F90, line 438
20250508 012551.341 INFO             PET3  PASS  ArrayBundleRemove with arrayNameList size 2 existing Test, ./ESMF_ArrayBundleCreateUTest.F90, line 446
20250508 012551.341 INFO             PET3  PASS  ArrayBundleAdd with multiflag #1 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 454
20250508 012551.341 INFO             PET3  PASS  ArrayBundleAdd with multiflag #2 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 462
20250508 012551.341 INFO             PET3 log-#3: --- ArrayBundle::log() start -----------------------------
20250508 012551.341 INFO             PET3 log-#3: ArrayBundle object is valid! <name: MyArrayBundle> <itemCount: 9>
20250508 012551.341 INFO             PET3 log-#3: +-<item: 0> <itemName: MyArray2>
20250508 012551.341 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.341 INFO             PET3 log-#3: ! 0x55adbda54f30
20250508 012551.341 INFO             PET3 log-#3: ! <name: MyArray2>
20250508 012551.341 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 1> <itemName: MyArray4>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbda57a20
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 2> <itemName: MyArray4>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbda57a20
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 3> <itemName: MyArray4>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbda57a20
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray4>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 4> <itemName: MyArray5>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbdb7c290
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 5> <itemName: MyArray5>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbdb7c290
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray5>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 6> <itemName: MyArray6>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbdb7b560
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 7> <itemName: MyArray6>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbdb7b560
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: +-<item: 8> <itemName: MyArray6>
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() start -----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! 0x55adbdb7b560
20250508 012551.342 INFO             PET3 log-#3: ! <name: MyArray6>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() start --------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! ! 0x55adbda525a0
20250508 012551.342 INFO             PET3 log-#3: ! ! DistGrid object is valid!<name: DistGrid002>
20250508 012551.342 INFO             PET3 log-#3: ! ! --- DistGrid::log() end ----------------------------------
20250508 012551.342 INFO             PET3 log-#3: ! --- Array::log() end -------------------------------------
20250508 012551.342 INFO             PET3 log-#3: --- ArrayBundle::log() end -------------------------------
20250508 012551.342 INFO             PET3  PASS  ArrayBundleLog #3 Test, ./ESMF_ArrayBundleCreateUTest.F90, line 474
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet with arrayName to get count Test, ./ESMF_ArrayBundleCreateUTest.F90, line 482
20250508 012551.343 INFO             PET3  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 488
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet arrayList for arrayName Test, ./ESMF_ArrayBundleCreateUTest.F90, line 499
20250508 012551.343 INFO             PET3  PASS  Verify Container Get arrayList for arrayname Test, ./ESMF_ArrayBundleCreateUTest.F90, line 515
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 524
20250508 012551.343 INFO             PET3  PASS  Check arrayCount Test, ./ESMF_ArrayBundleCreateUTest.F90, line 530
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet arrayList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 541
20250508 012551.343 INFO             PET3  PASS  Verify Container Get arrayList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 567
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet arrayNameList default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 574
20250508 012551.343 INFO             PET3  PASS  Verify Container Get arrayNameList for arrayname default order (abc) Test, ./ESMF_ArrayBundleCreateUTest.F90, line 595
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet arrayList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 603
20250508 012551.343 INFO             PET3  PASS  Verify Container Get arrayList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 629
20250508 012551.343 INFO             PET3  PASS  ArrayBundleGet arrayNameList ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 637
20250508 012551.343 INFO             PET3  PASS  Verify Container Get arrayNameList for arrayname ESMF_ITEMORDER_ADDORDER Test, ./ESMF_ArrayBundleCreateUTest.F90, line 658
20250508 012551.343 INFO             PET3  PASS  Computing space for serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 686
20250508 012551.343 INFO             PET3  PASS  Allocate serialization buffer, ./ESMF_ArrayBundleCreateUTest.F90, line 696
20250508 012551.343 INFO             PET3  PASS  Serialization Arraybundle data, ./ESMF_ArrayBundleCreateUTest.F90, line 712
20250508 012551.344 INFO             PET3  PASS  ArrayBundleDestroy Test, ./ESMF_ArrayBundleCreateUTest.F90, line 724
20250508 012551.344 INFO             PET3  Ending Test, file ./ESMF_ArrayBundleCreateUTest.F90, line 748
20250508 012551.344 INFO             PET3  Finalizing ESMF
