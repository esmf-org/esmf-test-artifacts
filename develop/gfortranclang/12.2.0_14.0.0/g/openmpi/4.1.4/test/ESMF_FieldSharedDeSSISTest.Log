2025-05-09 19:20:16
20250509 201014.762 INFO             PET0 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.780 INFO             PET0 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250509 201014.780 INFO             PET0 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250509 201014.780 INFO             PET0 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250509 201014.780 INFO             PET0 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250509 201014.780 INFO             PET0 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.780 INFO             PET0 Running with ESMF Version   : v8.9.0b08-9-gea72ab2180
20250509 201014.780 INFO             PET0 ESMF library build date/time: "May  9 2025" "19:17:42"
20250509 201014.780 INFO             PET0 ESMF library build location : /Users/sacks/projects/scratch/esmf-testing/gfortranclang_12.2.0_14.0.0_openmpi_g_develop/esmf
20250509 201014.780 INFO             PET0 ESMF_COMM                   : openmpi
20250509 201014.780 INFO             PET0 ESMF_MOAB                   : enabled
20250509 201014.780 INFO             PET0 ESMF_LAPACK                 : enabled
20250509 201014.780 INFO             PET0 ESMF_NETCDF                 : enabled
20250509 201014.780 INFO             PET0 ESMF_PNETCDF                : disabled
20250509 201014.780 INFO             PET0 ESMF_PIO                    : enabled
20250509 201014.780 INFO             PET0 ESMF_YAMLCPP                : enabled
20250509 201014.798 INFO             PET0 --- VMK::logSystem() start -------------------------------
20250509 201014.798 INFO             PET0 esmfComm=openmpi
20250509 201014.798 INFO             PET0 isPthreadsEnabled=1
20250509 201014.798 INFO             PET0 isOpenMPEnabled=0
20250509 201014.798 INFO             PET0 isOpenACCEnabled=0
20250509 201014.798 INFO             PET0 isSsiSharedMemoryEnabled=1
20250509 201014.798 INFO             PET0 isNvmlEnabled=0
20250509 201014.798 INFO             PET0 isNumaEnabled=0
20250509 201014.799 INFO             PET0 ssiCount=1 peCount=6
20250509 201014.799 INFO             PET0 PE=0 SSI=0 SSIPE=0
20250509 201014.799 INFO             PET0 PE=1 SSI=0 SSIPE=1
20250509 201014.799 INFO             PET0 PE=2 SSI=0 SSIPE=2
20250509 201014.799 INFO             PET0 PE=3 SSI=0 SSIPE=3
20250509 201014.799 INFO             PET0 PE=4 SSI=0 SSIPE=4
20250509 201014.799 INFO             PET0 PE=5 SSI=0 SSIPE=5
20250509 201014.799 INFO             PET0 ndevs=0 ndevsSSI=0
20250509 201014.799 INFO             PET0 
20250509 201014.799 INFO             PET0 --- VMK::logSystem() MPI Layer ---------------------------
20250509 201014.799 INFO             PET0 MPI_VERSION=3
20250509 201014.799 INFO             PET0 MPI_SUBVERSION=1
20250509 201014.799 INFO             PET0 mpi_t_okay=1
20250509 201014.799 INFO             PET0 --- VMK::logSystem() MPI Tool Interface Control Vars ---
20250509 201014.800 INFO             PET0 index=   0                                         base_help_aggregate : If opal_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message. Default: true.
20250509 201014.800 INFO             PET0 index=   1                                        mca_base_param_files : Path for MCA configuration files containing variable values
20250509 201014.800 INFO             PET0 index=   2                                             mca_param_files : Path for MCA configuration files containing variable values
20250509 201014.800 INFO             PET0 index=   3                                mca_base_override_param_file : Variables set in this file will override any value set inthe environment or another configuration file
20250509 201014.800 INFO             PET0 index=   4                          mca_base_suppress_override_warning : Suppress warnings when attempting to set an overridden value (default: false)
20250509 201014.800 INFO             PET0 index=   5                                  mca_base_param_file_prefix : Aggregate MCA parameter file sets
20250509 201014.800 INFO             PET0 index=   6                                  mca_base_envar_file_prefix : Aggregate MCA parameter file set for env variables
20250509 201014.800 INFO             PET0 index=   7                                    mca_base_param_file_path : Aggregate MCA parameter Search path
20250509 201014.800 INFO             PET0 index=   8                              mca_base_param_file_path_force : Forced Aggregate MCA parameter Search path
20250509 201014.800 INFO             PET0 index=   9                                                 opal_signal : Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
20250509 201014.800 INFO             PET0 index=  10                                      opal_stacktrace_output : Specifies where the stack trace output stream goes.  Accepts one of the following: none (disabled), stderr (default), stdout, file[:filename].   If 'filename' is not specified, a default filename of 'stacktrace' is used.  The 'filename' is appended with either '.PID' or '.RANK.PID', if RANK is available.  The 'filename' can be an absolute path or a relative path to the current working directory.
20250509 201014.800 INFO             PET0 index=  11                                       opal_net_private_ipv4 : Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
20250509 201014.800 INFO             PET0 index=  12                                     opal_set_max_sys_limits : Set the specified system-imposed limits to the specified value, including "unlimited".Supported params: core, filesize, maxmem, openfiles, stacksize, maxchildren
20250509 201014.801 INFO             PET0 index=  13                                         opal_var_dump_color : The colors to use when dumping MCA vars with color (e.g. ompi_info). The format is a comma-delimited key=value list, where the key is the attribute whose color to adjust, and the value is the ANSI color code (see the ANSI X3.64 CSI SGR sequence). Available keys: name,value,valid_values.
20250509 201014.802 INFO             PET0 index=  14                                opal_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.802 INFO             PET0 index=  15                                           opal_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.802 INFO             PET0 index=  16                                opal_warn_on_missing_libcuda : Whether to print a message when CUDA support is enabled but libcuda is not found
20250509 201014.802 INFO             PET0 index=  17                                            mpi_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.802 INFO             PET0 index=  18                                           opal_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.802 INFO             PET0 index=  19                                   mpi_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.802 INFO             PET0 index=  20                                  opal_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.802 INFO             PET0 index=  21                                            mpi_warn_on_fork : If nonzero, issue a warning if program forks under conditions that could cause system errors
20250509 201014.802 INFO             PET0 index=  22                                            opal_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.802 INFO             PET0 index=  23                                      opal_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.802 INFO             PET0 index=  24                                           mca_base_env_list : Set SHELL env variables
20250509 201014.802 INFO             PET0 index=  25                                 mca_base_env_list_delimiter : Set SHELL env variables delimiter. Default: semicolon ';'
20250509 201014.802 INFO             PET0 index=  26                                  mca_base_env_list_internal : Store SHELL env variables from amca conf file
20250509 201014.806 INFO             PET0 index=  27                                 opal_max_thread_in_progress : Number of thread allowed in opal_progress. Default: 1
20250509 201014.806 INFO             PET0 index=  28                                     mca_base_component_path : Path where to look for additional components
20250509 201014.806 INFO             PET0 index=  29                                          mca_component_path : Path where to look for additional components
20250509 201014.806 INFO             PET0 index=  30                         mca_base_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.806 INFO             PET0 index=  31                              mca_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.806 INFO             PET0 index=  32                        mca_base_component_track_load_errors : Whether to track errors for components that failed to load or not
20250509 201014.806 INFO             PET0 index=  33                           mca_base_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.806 INFO             PET0 index=  34                                mca_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.806 INFO             PET0 index=  35                                            mca_base_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.806 INFO             PET0 index=  36                                                 mca_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.806 INFO             PET0 index=  37                                                          dl : Default selection set of components for the dl framework (<none> means use all components that can be found)
20250509 201014.806 INFO             PET0 index=  38                                             dl_base_verbose : Verbosity level for the dl framework (default: 0)
20250509 201014.806 INFO             PET0 index=  39                                 dl_dlopen_filename_suffixes : Comma-delimited list of filename suffixes that the dlopen component will try
20250509 201014.806 INFO             PET0 index=  40                                     dl_dlopen_major_version :
20250509 201014.806 INFO             PET0 index=  41                                     dl_dlopen_minor_version :
20250509 201014.806 INFO             PET0 index=  42                                   dl_dlopen_release_version :
20250509 201014.806 INFO             PET0 index=  43                                               mpi_ft_enable : Enable UFLM MPI Fault Tolerance framework
20250509 201014.806 INFO             PET0 index=  44                                              mpi_ft_verbose : Verbosity level of the ULFM MPI Fault Tolerance framework
20250509 201014.808 INFO             PET0 index=  45                                       mpi_ft_reliable_bcast : Reliable Broadcast algorithm (1: Binomial Graph Diffusion; 2: N^2 full graph diffusion)
20250509 201014.808 INFO             PET0 index=  46                               mpi_ft_propagator_with_rbcast : Use the OMPI reliable broadcast failure propagator, or disable it and use only RTE propagation (slower)
20250509 201014.808 INFO             PET0 index=  47                                             mpi_ft_detector : Use the OMPI heartbeat based failure detector, or disable it and use only RTE and in-band detection (slower)
20250509 201014.808 INFO             PET0 index=  48                                      mpi_ft_detector_thread : Delegate failure detector to a separate thread
20250509 201014.808 INFO             PET0 index=  49                                      mpi_ft_detector_period : Period of heartbeat emission (s)
20250509 201014.808 INFO             PET0 index=  50                                     mpi_ft_detector_timeout : Timeout before we start suspecting a process after the last heartbeat reception (must be larger than 3*ompi_mpi_ft_detector_period)
20250509 201014.808 INFO             PET0 index=  51                              mpi_ft_detector_rdma_heartbeat : Use rdma put to deposit heartbeats into the observer memory
20250509 201014.808 INFO             PET0 index=  52                                             mpi_param_check : Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
20250509 201014.808 INFO             PET0 index=  53                                         mpi_yield_when_idle : Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
20250509 201014.808 INFO             PET0 index=  54                                         mpi_event_tick_rate : How often to progress TCP communications (0 = never, otherwise specified in microseconds)
20250509 201014.808 INFO             PET0 index=  55                                       mpi_show_handle_leaks : Whether MPI_FINALIZE shows all MPI handles that were not freed or not
20250509 201014.808 INFO             PET0 index=  56                                         mpi_no_free_handles : Whether to actually free MPI objects when their handles are freed
20250509 201014.810 INFO             PET0 index=  57                                mpi_show_mpi_alloc_mem_leaks : If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
20250509 201014.810 INFO             PET0 index=  58                                         mpi_show_mca_params : Whether to show all MCA parameter values during MPI_INIT or not (good for reproducibility of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
20250509 201014.810 INFO             PET0 index=  59                                    mpi_show_mca_params_file : If mpi_show_mca_params is true, setting this string to a valid filename tells 5.0.7 to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducibility of MPI jobs)
20250509 201014.810 INFO             PET0 index=  60                                          mpi_preconnect_mpi : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.810 INFO             PET0 index=  61                                          mpi_preconnect_all : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.810 INFO             PET0 index=  62                               mpi_have_sparse_group_storage : Whether this 5.0.7 installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
20250509 201014.810 INFO             PET0 index=  63                                mpi_use_sparse_group_storage : Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
20250509 201014.810 INFO             PET0 index=  64                                            mpi_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.811 INFO             PET0 index=  65                                 mpi_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.811 INFO             PET0 index=  66                                        mpi_add_procs_cutoff : Maximum world size for pre-allocating resources for all remote processes. Increasing this limit may improve communication performance at the cost of memory usage
20250509 201014.811 INFO             PET0 index=  67                                        mpi_dynamics_enabled : Is the MPI dynamic process functionality enabled (e.g., MPI_COMM_SPAWN)?  Default is yes, but certain transports and/or environments may disable it.
20250509 201014.811 INFO             PET0 index=  68                                              async_mpi_init : Do not perform a barrier at the end of MPI_Init
20250509 201014.811 INFO             PET0 index=  69                                          async_mpi_finalize : Do not perform a barrier at the beginning of MPI_Finalize
20250509 201014.811 INFO             PET0 index=  70                                             mpi_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.811 INFO             PET0 index=  71                                       mpi_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.811 INFO             PET0 index=  72                                             mpi_compat_mpi3 : A boolean value for whether Open MPI operates in MPI-3 compatibility mode; this changes the following behavior: in operations without a handle, errors are raised on (true) MPI_COMM_WORLD (MPI-3 behavior) or (false) MPI_COMM_SELF (MPI-4 behavior).
20250509 201014.811 INFO             PET0 index=  73                                    mpi_pmix_connect_timeout : Timeout(secs) for calls to PMIx_Connect. Default is no timeout.
20250509 201014.813 INFO             PET0 index=  74                                                 ompi_timing : Request that critical timing loops be measured
20250509 201014.813 INFO             PET0 index=  75                                       ompi_stream_buffering : Adjust buffering for stdout/stderr. (0) unbuffered, (1) line buffered, (2) fully buffered.
20250509 201014.813 INFO             PET0 index=  76                                            mpi_comm_verbose : Verbosity level for communicator management subsystem
20250509 201014.813 INFO             PET0 index=  77                                                          if : Default selection set of components for the if framework (<none> means use all components that can be found)
20250509 201014.813 INFO             PET0 index=  78                                             if_base_verbose : Verbosity level for the if framework (default: 0)
20250509 201014.813 INFO             PET0 index=  79                                      if_base_do_not_resolve : If nonzero, do not attempt to resolve interfaces
20250509 201014.813 INFO             PET0 index=  80                                     if_base_retain_loopback : If nonzero, retain loopback interfaces
20250509 201014.813 INFO             PET0 index=  81                                  if_bsdx_ipv6_major_version :
20250509 201014.813 INFO             PET0 index=  82                                  if_bsdx_ipv6_minor_version :
20250509 201014.813 INFO             PET0 index=  83                                if_bsdx_ipv6_release_version :
20250509 201014.813 INFO             PET0 index=  84                                 if_posix_ipv4_major_version :
20250509 201014.813 INFO             PET0 index=  85                                 if_posix_ipv4_minor_version :
20250509 201014.813 INFO             PET0 index=  86                               if_posix_ipv4_release_version :
20250509 201014.813 INFO             PET0 index=  87                                                     threads : Default selection set of components for the threads framework (<none> means use all components that can be found)
20250509 201014.813 INFO             PET0 index=  88                                        threads_base_verbose : Verbosity level for the threads framework (default: 0)
20250509 201014.813 INFO             PET0 index=  89                             threads_pthreads_yield_strategy : Pthread yield strategy to use
20250509 201014.813 INFO             PET0 index=  90                             threads_pthreads_nanosleep_time : Number of nanoseconds to sleep when using nanosleep as the pthread yield strategy
20250509 201014.813 INFO             PET0 index=  91                              threads_pthreads_major_version :
20250509 201014.813 INFO             PET0 index=  92                              threads_pthreads_minor_version :
20250509 201014.813 INFO             PET0 index=  93                            threads_pthreads_release_version :
20250509 201014.813 INFO             PET0 index=  94                                                       hwloc : Default selection set of components for the hwloc framework (<none> means use all components that can be found)
20250509 201014.813 INFO             PET0 index=  95                                          hwloc_base_verbose : Verbosity level for the hwloc framework (default: 0)
20250509 201014.813 INFO             PET0 index=  96                          hwloc_base_mem_bind_failure_action : What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
20250509 201014.813 INFO             PET0 index=  97                                                      memcpy : Default selection set of components for the memcpy framework (<none> means use all components that can be found)
20250509 201014.813 INFO             PET0 index=  98                                         memcpy_base_verbose : Verbosity level for the memcpy framework (default: 0)
20250509 201014.814 INFO             PET0 index=  99                                                  memchecker : Default selection set of components for the memchecker framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET0 index= 100                                     memchecker_base_verbose : Verbosity level for the memchecker framework (default: 0)
20250509 201014.814 INFO             PET0 index= 101                                                   backtrace : Default selection set of components for the backtrace framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET0 index= 102                                      backtrace_base_verbose : Verbosity level for the backtrace framework (default: 0)
20250509 201014.814 INFO             PET0 index= 103                            backtrace_execinfo_major_version :
20250509 201014.814 INFO             PET0 index= 104                            backtrace_execinfo_minor_version :
20250509 201014.814 INFO             PET0 index= 105                          backtrace_execinfo_release_version :
20250509 201014.814 INFO             PET0 index= 106                                                       timer : Default selection set of components for the timer framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET0 index= 107                                          timer_base_verbose : Verbosity level for the timer framework (default: 0)
20250509 201014.814 INFO             PET0 index= 108                                     timer_require_monotonic : Node-level monotonic timer required (default yes)
20250509 201014.814 INFO             PET0 index= 109                                  timer_darwin_major_version :
20250509 201014.814 INFO             PET0 index= 110                                  timer_darwin_minor_version :
20250509 201014.814 INFO             PET0 index= 111                                timer_darwin_release_version :
20250509 201014.814 INFO             PET0 index= 112                                                       shmem : Default selection set of components for the shmem framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET0 index= 113                                          shmem_base_verbose : Verbosity level for the shmem framework (default: 0)
20250509 201014.814 INFO             PET0 index= 114                               shmem_base_RUNTIME_QUERY_hint : Internal OMPI parameter used to provide a component selection hint to the shmem framework.  The value of this parameter is the name of the component that is available, selectable, and meets our run-time behavior requirements.
20250509 201014.814 INFO             PET0 index= 115                                         shmem_mmap_priority : Priority for shmem mmap component (default: 50)
20250509 201014.815 INFO             PET0 index= 116                               shmem_mmap_enable_nfs_warning : Enable the warning emitted when Open MPI detects that its shared memory backing file is located on a network filesystem (1 = enabled, 0 = disabled).
20250509 201014.815 INFO             PET0 index= 117                            shmem_mmap_relocate_backing_file : Whether to change the default placement of backing files or not (Negative = try to relocate backing files to an area rooted at the path specified by shmem_mmap_backing_file_base_dir, but continue with the default path if the relocation fails, 0 = do not relocate, Positive = same as the negative option, but will fail if the relocation fails.
20250509 201014.815 INFO             PET0 index= 118                            shmem_mmap_backing_file_base_dir : Specifies where backing files will be created when shmem_mmap_relocate_backing_file is in use.
20250509 201014.815 INFO             PET0 index= 119                                    shmem_mmap_major_version :
20250509 201014.815 INFO             PET0 index= 120                                    shmem_mmap_minor_version :
20250509 201014.815 INFO             PET0 index= 121                                  shmem_mmap_release_version :
20250509 201014.815 INFO             PET0 index= 130                                                   reachable : Default selection set of components for the reachable framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET0 index= 131                                      reachable_base_verbose : Verbosity level for the reachable framework (default: 0)
20250509 201014.815 INFO             PET0 index= 132                            reachable_weighted_major_version :
20250509 201014.815 INFO             PET0 index= 133                            reachable_weighted_minor_version :
20250509 201014.815 INFO             PET0 index= 134                          reachable_weighted_release_version :
20250509 201014.815 INFO             PET0 index= 135                                                        pmix : Default selection set of components for the pmix framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET0 index= 136                                           pmix_base_verbose : Verbosity level for the pmix framework (default: 0)
20250509 201014.815 INFO             PET0 index= 137                                       pmix_base_async_modex : Use asynchronous modex mode
20250509 201014.815 INFO             PET0 index= 138                                      pmix_base_collect_data : Collect all data during modex
20250509 201014.815 INFO             PET0 index= 139                                  pmix_base_exchange_timeout : Time (in seconds) to wait for a data exchange to complete
20250509 201014.815 INFO             PET0 index= 140                                                 accelerator : Default selection set of components for the accelerator framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET0 index= 141                                    accelerator_base_verbose : Verbosity level for the accelerator framework (default: 0)
20250509 201014.815 INFO             PET0 index= 142                              accelerator_null_major_version :
20250509 201014.815 INFO             PET0 index= 143                              accelerator_null_minor_version :
20250509 201014.815 INFO             PET0 index= 144                            accelerator_null_release_version :
20250509 201014.815 INFO             PET0 index= 145                                          opal_event_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.815 INFO             PET0 index= 146                                      event_external_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.815 INFO             PET0 index= 147                                          opal_event_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.815 INFO             PET0 index= 148                                          event_base_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.815 INFO             PET0 index= 149                                                        hook : Default selection set of components for the hook framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET0 index= 150                                           hook_base_verbose : Verbosity level for the hook framework (default: 0)
20250509 201014.815 INFO             PET0 index= 151                                    hook_comm_method_verbose :
20250509 201014.815 INFO             PET0 index= 152                                    hook_comm_method_display : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.815 INFO             PET0 index= 153                                           ompi_display_comm : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.815 INFO             PET0 index= 154                                        hook_comm_method_max : Number of hosts for which to print unabbreviated 2d table of comm methods.
20250509 201014.815 INFO             PET0 index= 155                                      hook_comm_method_brief : Only print the comm method summary, skip the 2d table.
20250509 201014.815 INFO             PET0 index= 156                                   hook_comm_method_fakefile : For debugging only: read comm methods from a file
20250509 201014.815 INFO             PET0 index= 157                              hook_comm_method_major_version :
20250509 201014.815 INFO             PET0 index= 158                              hook_comm_method_minor_version :
20250509 201014.815 INFO             PET0 index= 159                            hook_comm_method_release_version :
20250509 201014.815 INFO             PET0 index= 160                                                          op : Default selection set of components for the op framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET0 index= 161                                             op_base_verbose : Verbosity level for the op framework (default: 0)
20250509 201014.815 INFO             PET0 index= 162                               op_aarch64_hardware_available : Whether the Neon (1) or SVE (2) hardware is available
20250509 201014.815 INFO             PET0 index= 163                                 op_aarch64_double_supported : Whether the double precision data types are supported or not
20250509 201014.815 INFO             PET0 index= 164                                    op_aarch64_major_version :
20250509 201014.816 INFO             PET0 index= 165                                    op_aarch64_minor_version :
20250509 201014.816 INFO             PET0 index= 166                                  op_aarch64_release_version :
20250509 201014.816 INFO             PET0 index= 167                                                   allocator : Default selection set of components for the allocator framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET0 index= 168                                      allocator_base_verbose : Verbosity level for the allocator framework (default: 0)
20250509 201014.816 INFO             PET0 index= 169                               allocator_basic_major_version :
20250509 201014.816 INFO             PET0 index= 170                               allocator_basic_minor_version :
20250509 201014.816 INFO             PET0 index= 171                             allocator_basic_release_version :
20250509 201014.816 INFO             PET0 index= 172                                allocator_bucket_num_buckets :
20250509 201014.816 INFO             PET0 index= 173                              allocator_bucket_major_version :
20250509 201014.816 INFO             PET0 index= 174                              allocator_bucket_minor_version :
20250509 201014.816 INFO             PET0 index= 175                            allocator_bucket_release_version :
20250509 201014.816 INFO             PET0 index= 176                                                      rcache : Default selection set of components for the rcache framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET0 index= 177                                         rcache_base_verbose : Verbosity level for the rcache framework (default: 0)
20250509 201014.816 INFO             PET0 index= 178                                    rcache_grdma_print_stats : print registration cache usage statistics at the end of the run
20250509 201014.816 INFO             PET0 index= 179                                  rcache_grdma_major_version :
20250509 201014.816 INFO             PET0 index= 180                                  rcache_grdma_minor_version :
20250509 201014.816 INFO             PET0 index= 181                                rcache_grdma_release_version :
20250509 201014.816 INFO             PET0 index= 182                                                       mpool : Default selection set of components for the mpool framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET0 index= 183                                          mpool_base_verbose : Verbosity level for the mpool framework (default: 0)
20250509 201014.816 INFO             PET0 index= 184                                    mpool_base_default_hints : Hints to use when selecting the default memory pool
20250509 201014.816 INFO             PET0 index= 185                                 mpool_base_default_priority : Priority of the default mpool module
20250509 201014.816 INFO             PET0 index= 186                                     mpool_hugepage_priority : Default priority of the hugepage mpool component (default: 50)
20250509 201014.816 INFO             PET0 index= 187                                    mpool_hugepage_page_size : Default huge page size of the hugepage mpool component (default: 2M)
20250509 201014.816 INFO             PET0 index= 188                                mpool_hugepage_major_version :
20250509 201014.816 INFO             PET0 index= 189                                mpool_hugepage_minor_version :
20250509 201014.816 INFO             PET0 index= 190                              mpool_hugepage_release_version :
20250509 201014.816 INFO             PET0 index= 191                                                        smsc : Default selection set of components for the smsc framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET0 index= 192                                           smsc_base_verbose : Verbosity level for the smsc framework (default: 0)
20250509 201014.816 INFO             PET0 index= 193                                                         bml : Default selection set of components for the bml framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET0 index= 194                                            bml_base_verbose : Verbosity level for the bml framework (default: 0)
20250509 201014.816 INFO             PET0 index= 195                                  bml_r2_show_unreach_errors : Show error message when procs are unreachable
20250509 201014.816 INFO             PET0 index= 196                                        bml_r2_major_version :
20250509 201014.816 INFO             PET0 index= 197                                        bml_r2_minor_version :
20250509 201014.816 INFO             PET0 index= 198                                      bml_r2_release_version :
20250509 201014.816 INFO             PET0 index= 199                                                         btl : Default selection set of components for the btl framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET0 index= 200                                            btl_base_verbose : Verbosity level for the btl framework (default: 0)
20250509 201014.816 INFO             PET0 index= 201                           btl_base_thread_multiple_override : Enable BTLs that are not normally enabled when MPI_THREAD_MULTIPLE is enabled (THIS IS FOR DEVELOPERS ONLY!  SHOULD NOT BE USED BY END USERS!)
20250509 201014.816 INFO             PET0 index= 202                                            btl_base_include :
20250509 201014.816 INFO             PET0 index= 203                                            btl_base_exclude :
20250509 201014.816 INFO             PET0 index= 204                                    btl_base_warn_peer_error : This parameter is used to turn on warning messages when peers disconnect unexpectedly
20250509 201014.817 INFO             PET0 index= 205                              btl_base_warn_component_unused : This parameter is used to turn on warning messages when certain NICs are not used
20250509 201014.817 INFO             PET0 index= 206                                      btl_self_free_list_num : Number of fragments by default
20250509 201014.817 INFO             PET0 index= 207                                      btl_self_free_list_max : Maximum number of fragments
20250509 201014.817 INFO             PET0 index= 208                                      btl_self_free_list_inc : Increment by this number of fragments
20250509 201014.817 INFO             PET0 index= 209                                        btl_self_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.817 INFO             PET0 index= 210                                              btl_self_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.817 INFO             PET0 index= 211                                       btl_self_atomic_flags : BTL atomic support flags
20250509 201014.817 INFO             PET0 index= 212                                   btl_self_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.817 INFO             PET0 index= 213                                        btl_self_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.817 INFO             PET0 index= 214                                          btl_self_get_limit : Maximum size (in bytes) for btl get
20250509 201014.817 INFO             PET0 index= 215                                      btl_self_get_alignment : Alignment required for btl get
20250509 201014.817 INFO             PET0 index= 216                                          btl_self_put_limit : Maximum size (in bytes) for btl put
20250509 201014.817 INFO             PET0 index= 217                                      btl_self_put_alignment : Alignment required for btl put
20250509 201014.817 INFO             PET0 index= 218                          btl_self_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.817 INFO             PET0 index= 219                                      btl_self_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.817 INFO             PET0 index= 220                          btl_self_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.817 INFO             PET0 index= 221                            btl_self_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.817 INFO             PET0 index= 222                             btl_self_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.817 INFO             PET0 index= 223                                            btl_self_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.817 INFO             PET0 index= 224                                          btl_self_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.817 INFO             PET0 index= 225                                      btl_self_major_version :
20250509 201014.817 INFO             PET0 index= 226                                      btl_self_minor_version :
20250509 201014.817 INFO             PET0 index= 227                                    btl_self_release_version :
20250509 201014.817 INFO             PET0 index= 228                                        btl_sm_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET0 index= 229                                     btl_vader_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET0 index= 230                                        btl_sm_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET0 index= 231                                     btl_vader_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET0 index= 232                                        btl_sm_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.817 INFO             PET0 index= 233                                     btl_vader_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.817 INFO             PET0 index= 234                                         btl_sm_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.817 INFO             PET0 index= 235                                      btl_vader_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.817 INFO             PET0 index= 236                                         btl_sm_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.817 INFO             PET0 index= 237                                      btl_vader_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.817 INFO             PET0 index= 238                                      btl_sm_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.817 INFO             PET0 index= 239                                   btl_vader_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.817 INFO             PET0 index= 240                                       btl_sm_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.817 INFO             PET0 index= 241                                    btl_vader_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.817 INFO             PET0 index= 242                                             btl_sm_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.817 INFO             PET0 index= 243                                          btl_vader_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.817 INFO             PET0 index= 244                                            btl_sm_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.817 INFO             PET0 index= 245                                         btl_vader_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.817 INFO             PET0 index= 246                                    btl_sm_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.817 INFO             PET0 index= 247                                 btl_vader_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.817 INFO             PET0 index= 248                                          btl_sm_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.817 INFO             PET0 index= 249                                       btl_vader_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.818 INFO             PET0 index= 250                                                btl_sm_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET0 index= 251                                             btl_vader_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET0 index= 252                                         btl_sm_atomic_flags : BTL atomic support flags
20250509 201014.818 INFO             PET0 index= 253                                      btl_vader_atomic_flags : BTL atomic support flags
20250509 201014.818 INFO             PET0 index= 254                                     btl_sm_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.818 INFO             PET0 index= 255                                  btl_vader_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.818 INFO             PET0 index= 256                                          btl_sm_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.818 INFO             PET0 index= 257                                       btl_vader_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.818 INFO             PET0 index= 258                            btl_sm_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.818 INFO             PET0 index= 259                         btl_vader_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.818 INFO             PET0 index= 260                                        btl_sm_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.818 INFO             PET0 index= 261                                     btl_vader_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.818 INFO             PET0 index= 262                                        btl_sm_major_version :
20250509 201014.818 INFO             PET0 index= 263                                     btl_vader_major_version :
20250509 201014.818 INFO             PET0 index= 264                                        btl_sm_minor_version :
20250509 201014.818 INFO             PET0 index= 265                                     btl_vader_minor_version :
20250509 201014.818 INFO             PET0 index= 266                                      btl_sm_release_version :
20250509 201014.818 INFO             PET0 index= 267                                   btl_vader_release_version :
20250509 201014.818 INFO             PET0 index= 268                                               btl_tcp_links :
20250509 201014.818 INFO             PET0 index= 269                                          btl_tcp_if_include : Comma-delimited list of devices and/or CIDR notation of networks to use for MPI communication (e.g., "eth0,192.168.0.0/16").  Mutually exclusive with btl_tcp_if_exclude.
20250509 201014.818 INFO             PET0 index= 270                                          btl_tcp_if_exclude : Comma-delimited list of devices and/or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,192.168.0.0/16").  If set to a non-default value, it is mutually exclusive with btl_tcp_if_include.
20250509 201014.818 INFO             PET0 index= 271                                       btl_tcp_free_list_num :
20250509 201014.818 INFO             PET0 index= 272                                       btl_tcp_free_list_max :
20250509 201014.818 INFO             PET0 index= 273                                       btl_tcp_free_list_inc :
20250509 201014.818 INFO             PET0 index= 274                                              btl_tcp_sndbuf : The size of the send buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a send buffer size.
20250509 201014.818 INFO             PET0 index= 275                                              btl_tcp_rcvbuf : The size of the receive buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a receive buffer size.
20250509 201014.818 INFO             PET0 index= 276                                      btl_tcp_endpoint_cache : The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
20250509 201014.818 INFO             PET0 index= 277                                           btl_tcp_use_nagle : Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
20250509 201014.818 INFO             PET0 index= 278                                         btl_tcp_port_min_v4 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.818 INFO             PET0 index= 279                                       btl_tcp_port_range_v4 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.818 INFO             PET0 index= 280                                         btl_tcp_port_min_v6 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.818 INFO             PET0 index= 281                                       btl_tcp_port_range_v6 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.818 INFO             PET0 index= 282                                     btl_tcp_progress_thread :
20250509 201014.818 INFO             PET0 index= 283                         btl_tcp_warn_all_unfound_interfaces : Issue a warning for all unfound interfaces included in if_exclude
20250509 201014.818 INFO             PET0 index= 284                                         btl_tcp_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.818 INFO             PET0 index= 285                                               btl_tcp_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET0 index= 286                                        btl_tcp_atomic_flags : BTL atomic support flags
20250509 201014.818 INFO             PET0 index= 287                                    btl_tcp_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.818 INFO             PET0 index= 288                                         btl_tcp_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET0 index= 289                                           btl_tcp_put_limit : Maximum size (in bytes) for btl put
20250509 201014.819 INFO             PET0 index= 290                                       btl_tcp_put_alignment : Alignment required for btl put
20250509 201014.819 INFO             PET0 index= 291                           btl_tcp_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.819 INFO             PET0 index= 292                                       btl_tcp_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.819 INFO             PET0 index= 293                           btl_tcp_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET0 index= 294                             btl_tcp_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET0 index= 295                              btl_tcp_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET0 index= 296                                             btl_tcp_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.819 INFO             PET0 index= 297                                           btl_tcp_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.819 INFO             PET0 index= 298                                      btl_tcp_disable_family :
20250509 201014.819 INFO             PET0 index= 299                                       btl_tcp_major_version :
20250509 201014.819 INFO             PET0 index= 300                                       btl_tcp_minor_version :
20250509 201014.819 INFO             PET0 index= 301                                     btl_tcp_release_version :
20250509 201014.819 INFO             PET0 index= 302                                                         pml : Default selection set of components for the pml framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET0 index= 303                                            pml_base_verbose : Verbosity level for the pml framework (default: 0)
20250509 201014.819 INFO             PET0 index= 304                                    pml_base_bsend_allocator :
20250509 201014.819 INFO             PET0 index= 305                                            pml_base_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.819 INFO             PET0 index= 306                                                 pml_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.819 INFO             PET0 index= 307                                          pml_base_check_pml : Whether to check the pml selections to ensure they all match
20250509 201014.819 INFO             PET0 index= 320                                             pml_ob1_verbose :
20250509 201014.819 INFO             PET0 index= 321                                       pml_ob1_free_list_num :
20250509 201014.819 INFO             PET0 index= 322                                       pml_ob1_free_list_max :
20250509 201014.819 INFO             PET0 index= 323                                       pml_ob1_free_list_inc :
20250509 201014.819 INFO             PET0 index= 324                                            pml_ob1_priority :
20250509 201014.819 INFO             PET0 index= 325                                 pml_ob1_send_pipeline_depth :
20250509 201014.819 INFO             PET0 index= 326                                 pml_ob1_recv_pipeline_depth :
20250509 201014.819 INFO             PET0 index= 327                                pml_ob1_max_rdma_per_request :
20250509 201014.819 INFO             PET0 index= 328                                  pml_ob1_max_send_per_range :
20250509 201014.819 INFO             PET0 index= 329                                    pml_ob1_unexpected_limit :
20250509 201014.819 INFO             PET0 index= 330                                        pml_ob1_use_all_rdma : Use all available RDMA btls for the RDMA and RDMA pipeline protocols (default: false)
20250509 201014.819 INFO             PET0 index= 331                                           pml_ob1_allocator : Name of allocator component for unexpected messages
20250509 201014.819 INFO             PET0 index= 332                              pml_ob1_accelerator_events_max : Number of events created by the ob1 component internally
20250509 201014.819 INFO             PET0 index= 333                                       pml_ob1_major_version :
20250509 201014.819 INFO             PET0 index= 334                                       pml_ob1_minor_version :
20250509 201014.819 INFO             PET0 index= 335                                     pml_ob1_release_version :
20250509 201014.819 INFO             PET0 index= 339                                                   vprotocol : Specify a specific vprotocol to use
20250509 201014.819 INFO             PET0 index= 343                                                         mtl : Default selection set of components for the mtl framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET0 index= 344                                            mtl_base_verbose : Verbosity level for the mtl framework (default: 0)
20250509 201014.819 INFO             PET0 index= 345                                      vprotocol_base_verbose : Verbosity level for the vprotocol framework (default: 0)
20250509 201014.819 INFO             PET0 index= 346                                vprotocol_pessimist_priority :
20250509 201014.819 INFO             PET0 index= 347                           vprotocol_pessimist_free_list_num :
20250509 201014.819 INFO             PET0 index= 348                           vprotocol_pessimist_free_list_max :
20250509 201014.819 INFO             PET0 index= 349                           vprotocol_pessimist_free_list_inc :
20250509 201014.819 INFO             PET0 index= 350                      vprotocol_pessimist_sender_based_chunk :
20250509 201014.820 INFO             PET0 index= 351                       vprotocol_pessimist_event_buffer_size :
20250509 201014.820 INFO             PET0 index= 352                       vprotocol_pessimist_sender_based_file :
20250509 201014.820 INFO             PET0 index= 353                   vprotocol_pessimist_allow_thread_multiple : Allow the PML V to work even when the MPI library is initialized with MPI_THREAD_MULTIPLE support. By default the PML V is disabled in such instances, to protect applications that are not send deterministic.
20250509 201014.820 INFO             PET0 index= 354                           vprotocol_pessimist_major_version :
20250509 201014.820 INFO             PET0 index= 355                           vprotocol_pessimist_minor_version :
20250509 201014.820 INFO             PET0 index= 356                         vprotocol_pessimist_release_version :
20250509 201014.820 INFO             PET0 index= 357                                                        coll : Default selection set of components for the coll framework (<none> means use all components that can be found)
20250509 201014.820 INFO             PET0 index= 358                                           coll_base_verbose : Verbosity level for the coll framework (default: 0)
20250509 201014.820 INFO             PET0 index= 359                                         coll_adapt_priority : Priority of the adapt coll component
20250509 201014.820 INFO             PET0 index= 360                                          coll_adapt_verbose : Verbose level (default set to the collective framework verbosity)
20250509 201014.820 INFO             PET0 index= 361                            coll_adapt_context_free_list_min : Minimum number of segments in context free list
20250509 201014.820 INFO             PET0 index= 362                            coll_adapt_context_free_list_max : Maximum number of segments in context free list
20250509 201014.820 INFO             PET0 index= 363                            coll_adapt_context_free_list_inc : Increasement number of segments in context free list
20250509 201014.820 INFO             PET0 index= 364                                  coll_adapt_bcast_algorithm : Algorithm of broadcast, 0: tuned, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.820 INFO             PET0 index= 365                               coll_adapt_bcast_segment_size : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.820 INFO             PET0 index= 366                          coll_adapt_bcast_max_send_requests : Maximum number of send requests
20250509 201014.820 INFO             PET0 index= 367                          coll_adapt_bcast_max_recv_requests : Maximum number of receive requests
20250509 201014.820 INFO             PET0 index= 368                           coll_adapt_bcast_synchronous_send : Whether to use synchronous send operations during setup of bcast operations
20250509 201014.820 INFO             PET0 index= 369                                 coll_adapt_reduce_algorithm : Algorithm of reduce, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.820 INFO             PET0 index= 370                              coll_adapt_reduce_segment_size : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.820 INFO             PET0 index= 371                         coll_adapt_reduce_max_send_requests : Maximum number of send requests
20250509 201014.820 INFO             PET0 index= 372                         coll_adapt_reduce_max_recv_requests : Maximum number of receive requests per peer
20250509 201014.820 INFO             PET0 index= 373                              coll_adapt_inbuf_free_list_min : Minimum number of segment in inbuf free list
20250509 201014.820 INFO             PET0 index= 374                              coll_adapt_inbuf_free_list_max : Maximum number of segment in inbuf free list
20250509 201014.820 INFO             PET0 index= 375                              coll_adapt_inbuf_free_list_inc : Number of segments to allocate when growing the inbuf free list
20250509 201014.820 INFO             PET0 index= 376                          coll_adapt_reduce_synchronous_send : Whether to use synchronous send operations during setup of reduce operations
20250509 201014.820 INFO             PET0 index= 377                                    coll_adapt_major_version :
20250509 201014.820 INFO             PET0 index= 378                                    coll_adapt_minor_version :
20250509 201014.820 INFO             PET0 index= 379                                  coll_adapt_release_version :
20250509 201014.820 INFO             PET0 index= 380                                         coll_basic_priority : Priority of the basic coll component
20250509 201014.820 INFO             PET0 index= 381                                        coll_basic_crossover : Minimum number of processes in a communicator before using the logarithmic algorithms
20250509 201014.820 INFO             PET0 index= 382                                    coll_basic_major_version :
20250509 201014.820 INFO             PET0 index= 383                                    coll_basic_minor_version :
20250509 201014.820 INFO             PET0 index= 384                                  coll_basic_release_version :
20250509 201014.820 INFO             PET0 index= 385                                           coll_han_priority : Priority of the HAN coll component
20250509 201014.820 INFO             PET0 index= 386                                            coll_han_verbose : Verbosity of the HAN coll component (use coll base verbosity if not set)
20250509 201014.820 INFO             PET0 index= 387                                      coll_han_bcast_segsize : segment size for bcast
20250509 201014.820 INFO             PET0 index= 388                                    coll_han_bcast_up_module : up level module for bcast, 0 libnbc, 1 adapt
20250509 201014.820 INFO             PET0 index= 389                                   coll_han_bcast_low_module : low level module for bcast, 0 tuned, 1 sm
20250509 201014.820 INFO             PET0 index= 390                                     coll_han_reduce_segsize : segment size for reduce
20250509 201014.820 INFO             PET0 index= 391                                   coll_han_reduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.820 INFO             PET0 index= 392                                  coll_han_reduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.820 INFO             PET0 index= 393                                  coll_han_allreduce_segsize : segment size for allreduce
20250509 201014.820 INFO             PET0 index= 394                                coll_han_allreduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.820 INFO             PET0 index= 395                               coll_han_allreduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.820 INFO             PET0 index= 396                                coll_han_allgather_up_module : up level module for allgather, 0 libnbc, 1 adapt
20250509 201014.820 INFO             PET0 index= 397                               coll_han_allgather_low_module : low level module for allgather, 0 tuned, 1 sm
20250509 201014.820 INFO             PET0 index= 398                                   coll_han_gather_up_module : up level module for gather, 0 libnbc, 1 adapt
20250509 201014.820 INFO             PET0 index= 399                                  coll_han_gather_low_module : low level module for gather, 0 tuned, 1 sm
20250509 201014.820 INFO             PET0 index= 400                                  coll_han_scatter_up_module : up level module for scatter, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET0 index= 401                                 coll_han_scatter_low_module : low level module for scatter, 0 tuned, 1 sm
20250509 201014.821 INFO             PET0 index= 402                                       coll_han_reproducible : whether we need reproducible results (enabling this disables optimisations using topology)0 disable 1 enable, default 0
20250509 201014.821 INFO             PET0 index= 403                            coll_han_use_allgather_algorithm : which han algorithm is used for allgather
20250509 201014.821 INFO             PET0 index= 404                            coll_han_use_allreduce_algorithm : which han algorithm is used for allreduce
20250509 201014.821 INFO             PET0 index= 405                              coll_han_use_barrier_algorithm : which han algorithm is used for barrier
20250509 201014.821 INFO             PET0 index= 406                                coll_han_use_bcast_algorithm : which han algorithm is used for bcast
20250509 201014.821 INFO             PET0 index= 407                               coll_han_use_gather_algorithm : which han algorithm is used for gather
20250509 201014.821 INFO             PET0 index= 408                               coll_han_use_reduce_algorithm : which han algorithm is used for reduce
20250509 201014.821 INFO             PET0 index= 409                              coll_han_use_scatter_algorithm : which han algorithm is used for scatter
20250509 201014.821 INFO             PET0 index= 410                               coll_han_use_simple_allgather : whether to enable simple algorithm for allgather. Prefer use_allgather_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET0 index= 411                               coll_han_use_simple_allreduce : whether to enable simple algorithm for allreduce. Prefer use_allreduce_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET0 index= 412                                   coll_han_use_simple_bcast : whether to enable simple algorithm for bcast. Prefer use_bcast_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET0 index= 413                                  coll_han_use_simple_gather : whether to enable simple algorithm for gather. Prefer use_gather_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET0 index= 414                                  coll_han_use_simple_reduce : whether to enable simple algorithm for reduce. Prefer use_reduce_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET0 index= 415                                 coll_han_use_simple_scatter : whether to enable simple algorithm for scatter. Prefer use_scatter_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET0 index= 416                coll_han_allgather_dynamic_intra_node_module : Collective module to use for allgather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 417                coll_han_allgather_dynamic_inter_node_module : Collective module to use for allgather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 418       coll_han_allgather_dynamic_global_communicator_module : Collective module to use for allgather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 419               coll_han_allgatherv_dynamic_intra_node_module : Collective module to use for allgatherv on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 420               coll_han_allgatherv_dynamic_inter_node_module : Collective module to use for allgatherv on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 421      coll_han_allgatherv_dynamic_global_communicator_module : Collective module to use for allgatherv on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 422                coll_han_allreduce_dynamic_intra_node_module : Collective module to use for allreduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 423                coll_han_allreduce_dynamic_inter_node_module : Collective module to use for allreduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 424       coll_han_allreduce_dynamic_global_communicator_module : Collective module to use for allreduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 425                  coll_han_barrier_dynamic_intra_node_module : Collective module to use for barrier on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 426                  coll_han_barrier_dynamic_inter_node_module : Collective module to use for barrier on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 427         coll_han_barrier_dynamic_global_communicator_module : Collective module to use for barrier on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 428                    coll_han_bcast_dynamic_intra_node_module : Collective module to use for bcast on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 429                    coll_han_bcast_dynamic_inter_node_module : Collective module to use for bcast on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 430           coll_han_bcast_dynamic_global_communicator_module : Collective module to use for bcast on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 431                   coll_han_gather_dynamic_intra_node_module : Collective module to use for gather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 432                   coll_han_gather_dynamic_inter_node_module : Collective module to use for gather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 433          coll_han_gather_dynamic_global_communicator_module : Collective module to use for gather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 434                   coll_han_reduce_dynamic_intra_node_module : Collective module to use for reduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 435                   coll_han_reduce_dynamic_inter_node_module : Collective module to use for reduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 436          coll_han_reduce_dynamic_global_communicator_module : Collective module to use for reduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 437                  coll_han_scatter_dynamic_intra_node_module : Collective module to use for scatter on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 438                  coll_han_scatter_dynamic_inter_node_module : Collective module to use for scatter on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET0 index= 439         coll_han_scatter_dynamic_global_communicator_module : Collective module to use for scatter on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.821 INFO             PET0 index= 440                             coll_han_use_dynamic_file_rules : Enable the dynamic selection provided via the dynamic_rules_filename MCA
20250509 201014.821 INFO             PET0 index= 441                             coll_han_dynamic_rules_filename : Configuration file containing the dynamic selection rules
20250509 201014.821 INFO             PET0 index= 442                                 coll_han_dump_dynamic_rules : Switch used to decide if we dump  dynamic rules provided by configuration file
20250509 201014.821 INFO             PET0 index= 443                                 coll_han_max_dynamic_errors : Number of dynamic rules module/function errors printed on rank 0 with a 0 verbosity.Useless if coll_base_verbose is 30 or more.
20250509 201014.822 INFO             PET0 index= 444                                      coll_han_major_version :
20250509 201014.822 INFO             PET0 index= 445                                      coll_han_minor_version :
20250509 201014.822 INFO             PET0 index= 446                                    coll_han_release_version :
20250509 201014.822 INFO             PET0 index= 447                                         coll_inter_priority : Priority of the inter coll component
20250509 201014.822 INFO             PET0 index= 448                                          coll_inter_verbose : Turn verbose message of the inter coll component on/off
20250509 201014.822 INFO             PET0 index= 449                                    coll_inter_major_version :
20250509 201014.822 INFO             PET0 index= 450                                    coll_inter_minor_version :
20250509 201014.822 INFO             PET0 index= 451                                  coll_inter_release_version :
20250509 201014.822 INFO             PET0 index= 452                                        coll_libnbc_priority : Priority of the libnbc coll component
20250509 201014.822 INFO             PET0 index= 453                         coll_libnbc_ibcast_skip_dt_decision : In ibcast only use size of communicator to choose algorithm, exclude data type signature. Set to 'false' to use data type signature in decision. WARNING: If you set this to 'false' then your application should not use non-uniform data type signatures in calls to ibcast.
20250509 201014.822 INFO             PET0 index= 454                            coll_libnbc_iallgather_algorithm : Which iallgather algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.822 INFO             PET0 index= 455                            coll_libnbc_iallreduce_algorithm : Which iallreduce algorithm is used: 0 ignore, 1 ring, 2 binomial, 3 rabenseifner, 4 recursive_doubling
20250509 201014.822 INFO             PET0 index= 456                                coll_libnbc_ibcast_algorithm : Which ibcast algorithm is used: 0 ignore, 1 linear, 2 binomial, 3 chain, 4 knomial
20250509 201014.822 INFO             PET0 index= 457                            coll_libnbc_ibcast_knomial_radix : k-nomial tree radix for the ibcast algorithm (radix > 1)
20250509 201014.822 INFO             PET0 index= 458                               coll_libnbc_iexscan_algorithm : Which iexscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.822 INFO             PET0 index= 459                               coll_libnbc_ireduce_algorithm : Which ireduce algorithm is used: 0 ignore, 1 chain, 2 binomial, 3 rabenseifner
20250509 201014.822 INFO             PET0 index= 460                                 coll_libnbc_iscan_algorithm : Which iscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.822 INFO             PET0 index= 461                                   coll_libnbc_major_version :
20250509 201014.822 INFO             PET0 index= 462                                   coll_libnbc_minor_version :
20250509 201014.822 INFO             PET0 index= 463                                 coll_libnbc_release_version :
20250509 201014.822 INFO             PET0 index= 464                                          coll_self_priority :
20250509 201014.822 INFO             PET0 index= 465                                     coll_self_major_version :
20250509 201014.822 INFO             PET0 index= 466                                     coll_self_minor_version :
20250509 201014.822 INFO             PET0 index= 467                                   coll_self_release_version :
20250509 201014.822 INFO             PET0 index= 468                                          coll_sync_priority : Priority of the sync coll component; only relevant if barrier_before or barrier_after is > 0
20250509 201014.822 INFO             PET0 index= 469                                    coll_sync_barrier_before : Do a synchronization before each Nth collective
20250509 201014.822 INFO             PET0 index= 470                                     coll_sync_barrier_after : Do a synchronization after each Nth collective
20250509 201014.822 INFO             PET0 index= 471                                     coll_sync_major_version :
20250509 201014.822 INFO             PET0 index= 472                                     coll_sync_minor_version :
20250509 201014.822 INFO             PET0 index= 473                                   coll_sync_release_version :
20250509 201014.822 INFO             PET0 index= 474                                         coll_tuned_priority : Priority of the tuned coll component
20250509 201014.822 INFO             PET0 index= 475                                 coll_tuned_init_tree_fanout : Initial fanout used in the tree topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.822 INFO             PET0 index= 476                                coll_tuned_init_chain_fanout : Initial fanout used in the chain (fanout followed by pipeline) topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.822 INFO             PET0 index= 477                               coll_tuned_alltoall_small_msg : threshold (if supported) to decide if small MSGs alltoall algorithm will be used
20250509 201014.822 INFO             PET0 index= 478                        coll_tuned_alltoall_intermediate_msg : threshold (if supported) to decide if intermediate MSGs alltoall algorithm will be used
20250509 201014.822 INFO             PET0 index= 479                                coll_tuned_use_dynamic_rules : Switch used to decide if we use static (compiled/if statements) or dynamic (built at runtime) decision function rules
20250509 201014.822 INFO             PET0 index= 480                           coll_tuned_dynamic_rules_filename : Filename of configuration file that contains the dynamic (@runtime) decision function rules
20250509 201014.822 INFO             PET0 index= 481                        coll_tuned_allreduce_algorithm_count : Number of allreduce algorithms available
20250509 201014.822 INFO             PET0 index= 482                              coll_tuned_allreduce_algorithm : Which allreduce algorithm is used. Can be locked down to any of: 0 ignore, 1 basic linear, 2 nonoverlapping (tuned reduce + tuned bcast), 3 recursive doubling, 4 ring, 5 segmented ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.822 INFO             PET0 index= 483                  coll_tuned_allreduce_algorithm_segmentsize : Segment size in bytes used by default for allreduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET0 index= 484                  coll_tuned_allreduce_algorithm_tree_fanout : Fanout for n-tree used for allreduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.822 INFO             PET0 index= 485                 coll_tuned_allreduce_algorithm_chain_fanout : Fanout for chains used for allreduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.822 INFO             PET0 index= 486                         coll_tuned_alltoall_algorithm_count : Number of alltoall algorithms available
20250509 201014.822 INFO             PET0 index= 487                               coll_tuned_alltoall_algorithm : Which alltoall algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise, 3: modified bruck, 4: linear with sync, 5:two proc only. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.822 INFO             PET0 index= 488                   coll_tuned_alltoall_algorithm_segmentsize : Segment size in bytes used by default for alltoall algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET0 index= 489                   coll_tuned_alltoall_algorithm_tree_fanout : Fanout for n-tree used for alltoall algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET0 index= 490                  coll_tuned_alltoall_algorithm_chain_fanout : Fanout for chains used for alltoall algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.823 INFO             PET0 index= 491                               coll_tuned_alltoall_large_msg : use pairwise exchange algorithm for messages larger than this value
20250509 201014.823 INFO             PET0 index= 492                               coll_tuned_alltoall_min_procs : use pairwise exchange algorithm for communicators larger than this value
20250509 201014.823 INFO             PET0 index= 493                  coll_tuned_alltoall_algorithm_max_requests : Maximum number of outstanding send or recv requests.  Only has meaning for synchronized algorithms.
20250509 201014.823 INFO             PET0 index= 494                        coll_tuned_allgather_algorithm_count : Number of allgather algorithms available
20250509 201014.823 INFO             PET0 index= 495                              coll_tuned_allgather_algorithm : Which allgather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 bruck, 3 recursive doubling, 4 ring, 5 neighbor exchange, 6: two proc only, 7: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 496                  coll_tuned_allgather_algorithm_segmentsize : Segment size in bytes used by default for allgather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.823 INFO             PET0 index= 497                  coll_tuned_allgather_algorithm_tree_fanout : Fanout for n-tree used for allgather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.823 INFO             PET0 index= 498                 coll_tuned_allgather_algorithm_chain_fanout : Fanout for chains used for allgather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.823 INFO             PET0 index= 499                       coll_tuned_allgatherv_algorithm_count : Number of allgatherv algorithms available
20250509 201014.823 INFO             PET0 index= 500                             coll_tuned_allgatherv_algorithm : Which allgatherv algorithm is used. Can be locked down to choice of: 0 ignore, 1 default (allgathervv + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5: two proc only, 6: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 501                 coll_tuned_allgatherv_algorithm_segmentsize : Segment size in bytes used by default for allgatherv algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.823 INFO             PET0 index= 502                 coll_tuned_allgatherv_algorithm_tree_fanout : Fanout for n-tree used for allgatherv algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.823 INFO             PET0 index= 503                coll_tuned_allgatherv_algorithm_chain_fanout : Fanout for chains used for allgatherv algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.823 INFO             PET0 index= 504                        coll_tuned_alltoallv_algorithm_count : Number of alltoallv algorithms available
20250509 201014.823 INFO             PET0 index= 505                              coll_tuned_alltoallv_algorithm : Which alltoallv algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 506                          coll_tuned_barrier_algorithm_count : Number of barrier algorithms available
20250509 201014.823 INFO             PET0 index= 507                                coll_tuned_barrier_algorithm : Which barrier algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 double ring, 3: recursive doubling 4: bruck, 5: two proc only, 6: tree. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 508                            coll_tuned_bcast_algorithm_count : Number of bcast algorithms available
20250509 201014.823 INFO             PET0 index= 509                                  coll_tuned_bcast_algorithm : Which bcast algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 chain, 3: pipeline, 4: split binary tree, 5: binary tree, 6: binomial tree, 7: knomial tree, 8: scatter_allgather, 9: scatter_allgather_ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 510                      coll_tuned_bcast_algorithm_segmentsize : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET0 index= 511                      coll_tuned_bcast_algorithm_tree_fanout : Fanout for n-tree used for bcast algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET0 index= 512                     coll_tuned_bcast_algorithm_chain_fanout : Fanout for chains used for bcast algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.823 INFO             PET0 index= 513                    coll_tuned_bcast_algorithm_knomial_radix : k-nomial tree radix for the bcast algorithm (radix > 1).
20250509 201014.823 INFO             PET0 index= 514                           coll_tuned_reduce_algorithm_count : Number of reduce algorithms available
20250509 201014.823 INFO             PET0 index= 515                                 coll_tuned_reduce_algorithm : Which reduce algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 chain, 3 pipeline, 4 binary, 5 binomial, 6 in-order binary, 7 rabenseifner. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 516                     coll_tuned_reduce_algorithm_segmentsize : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET0 index= 517                     coll_tuned_reduce_algorithm_tree_fanout : Fanout for n-tree used for reduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET0 index= 518                    coll_tuned_reduce_algorithm_chain_fanout : Fanout for chains used for reduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.823 INFO             PET0 index= 519                    coll_tuned_reduce_algorithm_max_requests : Maximum number of outstanding send requests on leaf nodes. 0 means no limit.
20250509 201014.823 INFO             PET0 index= 520                   coll_tuned_reduce_scatter_algorithm_count : Number of reduce_scatter algorithms available
20250509 201014.823 INFO             PET0 index= 521                         coll_tuned_reduce_scatter_algorithm : Which reduce reduce_scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 non-overlapping (Reduce + Scatterv), 2 recursive halving, 3 ring, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 522             coll_tuned_reduce_scatter_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET0 index= 523             coll_tuned_reduce_scatter_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET0 index= 524            coll_tuned_reduce_scatter_algorithm_chain_fanout : Fanout for chains used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.823 INFO             PET0 index= 525             coll_tuned_reduce_scatter_block_algorithm_count : Number of reduce_scatter_block algorithms available
20250509 201014.823 INFO             PET0 index= 526                   coll_tuned_reduce_scatter_block_algorithm : Which reduce reduce_scatter_block algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic_linear, 2 recursive_doubling, 3 recursive_halving, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 527       coll_tuned_reduce_scatter_block_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET0 index= 528       coll_tuned_reduce_scatter_block_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET0 index= 529                           coll_tuned_gather_algorithm_count : Number of gather algorithms available
20250509 201014.823 INFO             PET0 index= 530                                 coll_tuned_gather_algorithm : Which gather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 linear with synchronization. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET0 index= 531                     coll_tuned_gather_algorithm_segmentsize : Segment size in bytes used by default for gather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.823 INFO             PET0 index= 532                     coll_tuned_gather_algorithm_tree_fanout : Fanout for n-tree used for gather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.823 INFO             PET0 index= 533                    coll_tuned_gather_algorithm_chain_fanout : Fanout for chains used for gather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.823 INFO             PET0 index= 534                          coll_tuned_scatter_algorithm_count : Number of scatter algorithms available
20250509 201014.823 INFO             PET0 index= 535                                coll_tuned_scatter_algorithm : Which scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 non-blocking linear. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET0 index= 536                    coll_tuned_scatter_algorithm_segmentsize : Segment size in bytes used by default for scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.824 INFO             PET0 index= 537                    coll_tuned_scatter_algorithm_tree_fanout : Fanout for n-tree used for scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.824 INFO             PET0 index= 538                   coll_tuned_scatter_algorithm_chain_fanout : Fanout for chains used for scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.824 INFO             PET0 index= 539                                coll_tuned_scatter_min_procs : use basic linear algorithm for communicators larger than this value
20250509 201014.824 INFO             PET0 index= 540                   coll_tuned_scatter_algorithm_max_requests : Issue a blocking send every this many non-blocking requests. Only has meaning for non-blocking linear algorithm.
20250509 201014.824 INFO             PET0 index= 541                         coll_tuned_scatter_intermediate_msg : use non-blocking linear algorithm for messages larger than this value
20250509 201014.824 INFO             PET0 index= 542                                coll_tuned_scatter_large_msg : use linear algorithm for messages larger than this value
20250509 201014.824 INFO             PET0 index= 543                           coll_tuned_exscan_algorithm_count : Number of exscan algorithms available
20250509 201014.824 INFO             PET0 index= 544                                 coll_tuned_exscan_algorithm : Which exscan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET0 index= 545                             coll_tuned_scan_algorithm_count : Number of scan algorithms available
20250509 201014.824 INFO             PET0 index= 546                                   coll_tuned_scan_algorithm : Which scan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET0 index= 547                                    coll_tuned_major_version :
20250509 201014.824 INFO             PET0 index= 548                                    coll_tuned_minor_version :
20250509 201014.824 INFO             PET0 index= 549                                  coll_tuned_release_version :
20250509 201014.824 INFO             PET0 index= 550                                       coll_ftagree_priority : Priority of the ftagree coll component
20250509 201014.824 INFO             PET0 index= 551                                      coll_ftagree_agreement : Agreement algorithm 0: Allreduce (NOT FAULT TOLERANT); 1: Early Returning Consensus (era); 2: Early Terminating Consensus (eta)
20250509 201014.824 INFO             PET0 index= 552                                   coll_ftagree_era_topology : ERA topology 1: binary tree; 2: star tree; 3: string tree
20250509 201014.824 INFO             PET0 index= 553                                    coll_ftagree_era_rebuild : ERA rebuild/rebalance the tree in a first post-failure agreement 0: no rebalancing; 1: rebalance all the time
20250509 201014.824 INFO             PET0 index= 554                                  coll_ftagree_major_version :
20250509 201014.824 INFO             PET0 index= 555                                  coll_ftagree_minor_version :
20250509 201014.824 INFO             PET0 index= 556                                coll_ftagree_release_version :
20250509 201014.824 INFO             PET0 index= 560                                            coll_sm_priority : Priority of the sm coll component
20250509 201014.824 INFO             PET0 index= 561                                        coll_sm_control_size : Length of the control data -- should usually be either the length of a cache line on most SMPs, or the size of a page on machines that support direct memory affinity page placement (in bytes)
20250509 201014.824 INFO             PET0 index= 562                                       coll_sm_fragment_size : Fragment size (in bytes) used for passing data through shared memory (will be rounded up to the nearest control_size size)
20250509 201014.824 INFO             PET0 index= 563                                   coll_sm_comm_in_use_flags : Number of "in use" flags, used to mark a message passing area segment as currently being used or not (must be >= 2 and <= comm_num_segments)
20250509 201014.824 INFO             PET0 index= 564                                   coll_sm_comm_num_segments : Number of segments in each communicator's shared memory message passing area (must be >= 2, and must be a multiple of comm_in_use_flags)
20250509 201014.824 INFO             PET0 index= 565                                         coll_sm_tree_degree : Degree of the tree for tree-based operations (must be => 1 and <= min(control_size, 255))
20250509 201014.824 INFO             PET0 index= 566                                      coll_sm_info_num_procs : Number of processes to use for the calculation of the shared_mem_size MCA information parameter (must be => 2)
20250509 201014.824 INFO             PET0 index= 567                                coll_sm_shared_mem_used_data : Amount of shared memory used, per communicator, in the shared memory data area for info_num_procs processes (in bytes)
20250509 201014.824 INFO             PET0 index= 568                                       coll_sm_major_version :
20250509 201014.824 INFO             PET0 index= 569                                       coll_sm_minor_version :
20250509 201014.824 INFO             PET0 index= 570                                     coll_sm_release_version :
20250509 201014.824 INFO             PET0 index= 571                                                         osc : Default selection set of components for the osc framework (<none> means use all components that can be found)
20250509 201014.824 INFO             PET0 index= 572                                            osc_base_verbose : Verbosity level for the osc framework (default: 0)
20250509 201014.824 INFO             PET0 index= 573                                    osc_sm_backing_directory : Directory to place backing files for shared memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.824 INFO             PET0 index= 574                                             osc_sm_priority : Priority of the osc/sm component (default: 100)
20250509 201014.824 INFO             PET0 index= 575                                        osc_sm_major_version :
20250509 201014.824 INFO             PET0 index= 576                                        osc_sm_minor_version :
20250509 201014.824 INFO             PET0 index= 577                                      osc_sm_release_version :
20250509 201014.824 INFO             PET0 index= 581                                           osc_rdma_no_locks : Enable optimizations available only if MPI_LOCK is not used. Info key of same name overrides this value (default: false)
20250509 201014.824 INFO             PET0 index= 582                               osc_rdma_acc_single_intrinsic : Enable optimizations for MPI_Fetch_and_op, MPI_Accumulate, etc for codes that will not use anything more than a single predefined datatype (default: false)
20250509 201014.824 INFO             PET0 index= 583                                        osc_rdma_acc_use_amo : Enable the use of network atomic memory operations when using single intrinsic optimizations. If not set network compare-and-swap will be used instead (default: true)
20250509 201014.824 INFO             PET0 index= 584                                        osc_rdma_buffer_size : Size of temporary buffers (default: 32768)
20250509 201014.824 INFO             PET0 index= 585                                         osc_rdma_max_attach : Maximum number of buffers that can be attached to a dynamic window. Keep in mind that each attached buffer will use a potentially limited resource (default: 64)
20250509 201014.824 INFO             PET0 index= 586                                           osc_rdma_priority : Priority of the osc/rdma component (default: 20)
20250509 201014.824 INFO             PET0 index= 587                                       osc_rdma_locking_mode : Locking mode to use for passive-target synchronization (default: two_level)
20250509 201014.824 INFO             PET0 index= 588                                               osc_rdma_btls : Comma-delimited list of BTL component names to allow without verifying connectivity. Do not add a BTL to to this list unless it can reach all processes in any communicator used with an MPI window (default: ugni,uct,ofi)
20250509 201014.824 INFO             PET0 index= 589                                  osc_rdma_backing_directory : Directory to place backing files for memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.824 INFO             PET0 index= 590                                    osc_rdma_network_max_amo : Maximum predefined datatype count for which network atomic operations will be used. Accumulate operations larger than this count will use a get/op/put protocol. The optimal value is dictated by the network injection rate for the interconnect. Generally a smaller number will yield better larger accumulate performance. (default: 32)
20250509 201014.824 INFO             PET0 index= 591                           osc_rdma_minimum_memory_alignment : The minimum memory alignment used to allocate local window memory (default: 16384). This is a best effort approach. Alignments larger than the page size may not be supported.
20250509 201014.824 INFO             PET0 index= 592                                      osc_rdma_major_version :
20250509 201014.824 INFO             PET0 index= 593                                      osc_rdma_minor_version :
20250509 201014.825 INFO             PET0 index= 594                                    osc_rdma_release_version :
20250509 201014.825 INFO             PET0 index= 595                                       btl_tcp_bandwidth_en0 :
20250509 201014.825 INFO             PET0 index= 596                                         btl_tcp_latency_en0 :
20250509 201014.825 INFO             PET0 index= 597                                     btl_tcp_bandwidth_en0:0 :
20250509 201014.825 INFO             PET0 index= 598                                       btl_tcp_latency_en0:0 :
20250509 201014.825 INFO             PET0 index= 599                                                        part : Default selection set of components for the part framework (<none> means use all components that can be found)
20250509 201014.825 INFO             PET0 index= 600                                           part_base_verbose : Verbosity level for the part framework (default: 0)
20250509 201014.825 INFO             PET0 index= 601                                  part_persist_free_list_num : Initial size of request free lists
20250509 201014.825 INFO             PET0 index= 602                                  part_persist_free_list_max : Maximum size of request free lists
20250509 201014.825 INFO             PET0 index= 603                                  part_persist_free_list_inc : Number of elements to add when growing request free lists
20250509 201014.825 INFO             PET0 index= 604                                  part_persist_major_version :
20250509 201014.825 INFO             PET0 index= 605                                  part_persist_minor_version :
20250509 201014.825 INFO             PET0 index= 606                                part_persist_release_version :
20250509 201014.825 INFO             PET0 index= 607                                                      memory : Default selection set of components for the memory framework (<none> means use all components that can be found)
20250509 201014.825 INFO             PET0 index= 608                                         memory_base_verbose : Verbosity level for the memory framework (default: 0)
20250509 201014.825 INFO             PET0 index= 609                                                     patcher : Default selection set of components for the patcher framework (<none> means use all components that can be found)
20250509 201014.825 INFO             PET0 index= 610                                        patcher_base_verbose : Verbosity level for the patcher framework (default: 0)
20250509 201014.825 INFO             PET0 index= 611                                  patcher_overwrite_priority : Priority of the overwrite binary patcher component
20250509 201014.825 INFO             PET0 index= 612                             patcher_overwrite_major_version :
20250509 201014.825 INFO             PET0 index= 613                             patcher_overwrite_minor_version :
20250509 201014.825 INFO             PET0 index= 614                           patcher_overwrite_release_version :
20250509 201014.825 INFO             PET0 index= 615                                                        fbtl : Default selection set of components for the fbtl framework (<none> means use all components that can be found)
20250509 201014.825 INFO             PET0 index= 616                                           fbtl_base_verbose : Verbosity level for the fbtl framework (default: 0)
20250509 201014.825 INFO             PET0 index= 617                                         fbtl_posix_priority : Priority of the fbtl posix component
20250509 201014.825 INFO             PET0 index= 618                                   fbtl_posix_max_block_size : Maximum average size in bytes of a data block in an iovec for data sieving. An average block size larger than this parameter will disable data sieving. Default: 1048576 bytes.
20250509 201014.825 INFO             PET0 index= 619                                     fbtl_posix_max_gap_size : Maximum average gap size between two blocks in an iovec for data sieving. An average gap size larger than this parameter will disable data sieving. Default: 4096 bytes.
20250509 201014.825 INFO             PET0 index= 620                                  fbtl_posix_max_tmpbuf_size : Maximum size of the temporary buffer used for data sieving in bytes. Default: 67108864 (64MB).
20250509 201014.825 INFO             PET0 index= 621                                 fbtl_posix_read_datasieving : Parameter indicating whether to perform data sieving for read operations. Default: true.
20250509 201014.825 INFO             PET0 index= 622                                fbtl_posix_write_datasieving : Parameter indicating whether to perform data sieving for write operations. Default: true.
20250509 201014.825 INFO             PET0 index= 623                                    fbtl_posix_major_version :
20250509 201014.825 INFO             PET0 index= 624                                    fbtl_posix_minor_version :
20250509 201014.825 INFO             PET0 index= 625                                  fbtl_posix_release_version :
20250509 201014.825 INFO             PET0 index= 626                                                       fcoll : Default selection set of components for the fcoll framework (<none> means use all components that can be found)
20250509 201014.825 INFO             PET0 index= 627                                          fcoll_base_verbose : Verbosity level for the fcoll framework (default: 0)
20250509 201014.825 INFO             PET0 index= 628                                      fcoll_dynamic_priority : Priority of the dynamic fcoll component
20250509 201014.825 INFO             PET0 index= 629                                 fcoll_dynamic_major_version :
20250509 201014.825 INFO             PET0 index= 630                                 fcoll_dynamic_minor_version :
20250509 201014.825 INFO             PET0 index= 631                               fcoll_dynamic_release_version :
20250509 201014.825 INFO             PET0 index= 632                                 fcoll_dynamic_gen2_priority : Priority of the dynamic_gen2 fcoll component
20250509 201014.825 INFO             PET0 index= 633                               fcoll_dynamic_gen2_num_groups : Number of subgroups created by the dynamic_gen2 component
20250509 201014.826 INFO             PET0 index= 634                            fcoll_dynamic_gen2_major_version :
20250509 201014.826 INFO             PET0 index= 635                            fcoll_dynamic_gen2_minor_version :
20250509 201014.826 INFO             PET0 index= 636                          fcoll_dynamic_gen2_release_version :
20250509 201014.826 INFO             PET0 index= 637                                   fcoll_individual_priority : Priority of the individual fcoll component
20250509 201014.826 INFO             PET0 index= 638                              fcoll_individual_major_version :
20250509 201014.826 INFO             PET0 index= 639                              fcoll_individual_minor_version :
20250509 201014.826 INFO             PET0 index= 640                            fcoll_individual_release_version :
20250509 201014.826 INFO             PET0 index= 641                                       fcoll_vulcan_priority : Priority of the vulcan fcoll component
20250509 201014.826 INFO             PET0 index= 642                                     fcoll_vulcan_num_groups : Number of subgroups created by the vulcan component
20250509 201014.826 INFO             PET0 index= 643                                fcoll_vulcan_write_chunksize : Chunk size written at once. Default: stripe_size of the file system
20250509 201014.826 INFO             PET0 index= 644                                       fcoll_vulcan_async_io : Asynchronous I/O support options. 0: Automatic choice (default) 1: Asynchronous I/O only. 2: Synchronous I/O only.
20250509 201014.826 INFO             PET0 index= 645                                  fcoll_vulcan_major_version :
20250509 201014.826 INFO             PET0 index= 646                                  fcoll_vulcan_minor_version :
20250509 201014.826 INFO             PET0 index= 647                                fcoll_vulcan_release_version :
20250509 201014.826 INFO             PET0 index= 648                                                          fs : Default selection set of components for the fs framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET0 index= 649                                             fs_base_verbose : Verbosity level for the fs framework (default: 0)
20250509 201014.826 INFO             PET0 index= 650                                             fs_ufs_priority : Priority of the fs ufs component
20250509 201014.826 INFO             PET0 index= 651                                       fs_ufs_lock_algorithm : Locking algorithm used by the fs ufs component.  0: auto (default), 1: skip locking, 2: always lock entire file, 3: lock only specific ranges
20250509 201014.826 INFO             PET0 index= 652                                        fs_ufs_major_version :
20250509 201014.826 INFO             PET0 index= 653                                        fs_ufs_minor_version :
20250509 201014.826 INFO             PET0 index= 654                                      fs_ufs_release_version :
20250509 201014.826 INFO             PET0 index= 655                                                          io : Default selection set of components for the io framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET0 index= 656                                             io_base_verbose : Verbosity level for the io framework (default: 0)
20250509 201014.826 INFO             PET0 index= 657                                           io_ompio_priority : Priority of the io ompio component
20250509 201014.826 INFO             PET0 index= 658                                    io_ompio_delete_priority : Delete priority of the io ompio component
20250509 201014.826 INFO             PET0 index= 659                            io_ompio_record_file_offset_info : The information of the file offset/length
20250509 201014.826 INFO             PET0 index= 660                                   io_ompio_coll_timing_info : Enable collective algorithm timing information
20250509 201014.826 INFO             PET0 index= 661                                  io_ompio_cycle_buffer_size : Data size issued by individual reads/writes per call
20250509 201014.826 INFO             PET0 index= 662                               io_ompio_pipeline_buffer_size : Size of temporary buffer used by individual reads/writes in the pipeline protocol
20250509 201014.826 INFO             PET0 index= 663                                      io_ompio_bytes_per_agg : Size of temporary buffer for collective I/O operations
20250509 201014.826 INFO             PET0 index= 664                                    io_ompio_num_aggregators : number of aggregators for collective I/O operations
20250509 201014.826 INFO             PET0 index= 665                                    io_ompio_grouping_option : Option for grouping of processes in the aggregator selection 1: Data volume based grouping 2: maximizing group size uniformity 3: maximimze data contiguity 4: hybrid optimization  5: simple (default) 6: skip refinement step 7: simple+: grouping based on default file view
20250509 201014.826 INFO             PET0 index= 666                              io_ompio_max_aggregators_ratio : Maximum number of processes that can be an aggregator expressed as the ratio to the number of process used to open the file i.e 1 out of n processes can be an aggregator, with n being specified by this mca parameter.
20250509 201014.826 INFO             PET0 index= 667                       io_ompio_aggregators_cutoff_threshold : Relative cutoff threshold for incrementing the number of aggregators in the simple aggregator selection algorithm (5). Lower value for this parameter will lead to higher no. of aggregators.
20250509 201014.826 INFO             PET0 index= 668                                    io_ompio_overwrite_amode : Overwrite WRONLY amode to RDWR to enable data sieving 1: allow overwrite (default) 0: do not overwrite amode provided by application
20250509 201014.826 INFO             PET0 index= 669                               io_ompio_verbose_info_parsing : Provide visual output when parsing info objects 0: no verbose output (default) 1: verbose output by rank 0 2: verbose output by all ranks
20250509 201014.826 INFO             PET0 index= 670                                      io_ompio_major_version :
20250509 201014.826 INFO             PET0 index= 671                                      io_ompio_minor_version :
20250509 201014.826 INFO             PET0 index= 672                                    io_ompio_release_version :
20250509 201014.826 INFO             PET0 index= 673                                        io_romio341_priority : Priority of the io romio component
20250509 201014.826 INFO             PET0 index= 674                                 io_romio341_delete_priority : Delete priority of the io romio component
20250509 201014.826 INFO             PET0 index= 675                                         io_romio341_version : Version of ROMIO
20250509 201014.827 INFO             PET0 index= 676                           io_romio341_user_configure_params : User-specified command line parameters passed to ROMIO's configure script
20250509 201014.827 INFO             PET0 index= 677                       io_romio341_complete_configure_params : Complete set of command line parameters passed to ROMIO's configure script
20250509 201014.827 INFO             PET0 index= 678                                   io_romio341_major_version :
20250509 201014.827 INFO             PET0 index= 679                                   io_romio341_minor_version :
20250509 201014.827 INFO             PET0 index= 680                                 io_romio341_release_version :
20250509 201014.827 INFO             PET0 index= 681                                                    sharedfp : Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET0 index= 682                                       sharedfp_base_verbose : Verbosity level for the sharedfp framework (default: 0)
20250509 201014.827 INFO             PET0 index= 683                                sharedfp_individual_priority : Priority of the individual sharedfp component
20250509 201014.827 INFO             PET0 index= 684                                 sharedfp_individual_verbose : Verbosity of the individual sharedfp component
20250509 201014.827 INFO             PET0 index= 685                           sharedfp_individual_major_version :
20250509 201014.827 INFO             PET0 index= 686                           sharedfp_individual_minor_version :
20250509 201014.827 INFO             PET0 index= 687                         sharedfp_individual_release_version :
20250509 201014.827 INFO             PET0 index= 688                                sharedfp_lockedfile_priority : Priority of the lockedfile sharedfp component
20250509 201014.827 INFO             PET0 index= 689                                 sharedfp_lockedfile_verbose : Verbosity of the lockedfile sharedfp component
20250509 201014.827 INFO             PET0 index= 690                           sharedfp_lockedfile_major_version :
20250509 201014.827 INFO             PET0 index= 691                           sharedfp_lockedfile_minor_version :
20250509 201014.827 INFO             PET0 index= 692                         sharedfp_lockedfile_release_version :
20250509 201014.827 INFO             PET0 index= 693                                        sharedfp_sm_priority : Priority of the sm sharedfp component
20250509 201014.827 INFO             PET0 index= 694                                         sharedfp_sm_verbose : Verbosity of the sm sharedfp component
20250509 201014.827 INFO             PET0 index= 695                                   sharedfp_sm_major_version :
20250509 201014.827 INFO             PET0 index= 696                                   sharedfp_sm_minor_version :
20250509 201014.827 INFO             PET0 index= 697                                 sharedfp_sm_release_version :
20250509 201014.827 INFO             PET0 index= 698                                                        topo : Default selection set of components for the topo framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET0 index= 699                                           topo_base_verbose : Verbosity level for the topo framework (default: 0)
20250509 201014.827 INFO             PET0 index= 700                                    topo_basic_major_version :
20250509 201014.827 INFO             PET0 index= 701                                    topo_basic_minor_version :
20250509 201014.827 INFO             PET0 index= 702                                  topo_basic_release_version :
20250509 201014.827 INFO             PET0 index= 703                                 topo_treematch_reorder_mode : If set the reordering will be done in a partially distributed way (default=0). If partially-distributed only local knowledge will be used, possibly leading to less accurate reordering.
20250509 201014.827 INFO             PET0 index= 704                                topo_treematch_major_version :
20250509 201014.827 INFO             PET0 index= 705                                topo_treematch_minor_version :
20250509 201014.827 INFO             PET0 index= 706                              topo_treematch_release_version :
20250509 201014.828 INFO             PET0 --- VMK::logSystem() end ---------------------------------
20250509 201014.828 INFO             PET0 main: --- VMK::log() start -------------------------------------
20250509 201014.828 INFO             PET0 main: vm located at: 0x141f05570
20250509 201014.828 INFO             PET0 main: mpionly=1 threadsflag=0
20250509 201014.828 INFO             PET0 main: ssiCount=1 localSsi=0
20250509 201014.828 INFO             PET0 main: devCount=0 ssiLocalDevCount=0
20250509 201014.828 INFO             PET0 main: petCount=6 ssiLocalPetCount=6
20250509 201014.828 INFO             PET0 main: localPet=0 mypthid=0x202a94f40 ssiLocalPet=0 currentSsiPe=-1
20250509 201014.828 INFO             PET0 main: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.828 INFO             PET0 main: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.828 INFO             PET0 main:  PE=0 SSI=0 SSIPE=0
20250509 201014.828 INFO             PET0 main: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.828 INFO             PET0 main:  PE=1 SSI=0 SSIPE=1
20250509 201014.828 INFO             PET0 main: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.828 INFO             PET0 main:  PE=2 SSI=0 SSIPE=2
20250509 201014.828 INFO             PET0 main: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.828 INFO             PET0 main:  PE=3 SSI=0 SSIPE=3
20250509 201014.828 INFO             PET0 main: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.828 INFO             PET0 main:  PE=4 SSI=0 SSIPE=4
20250509 201014.828 INFO             PET0 main: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.828 INFO             PET0 main:  PE=5 SSI=0 SSIPE=5
20250509 201014.828 INFO             PET0 main: --- VMK::log() end ---------------------------------------
20250509 201014.831 INFO             PET0 Executing 'userm1_setvm'
20250509 201014.831 INFO             PET0 Executing 'userm1_register'
20250509 201014.831 INFO             PET0 Executing 'userm2_setvm'
20250509 201014.832 INFO             PET0 Executing 'userm2_register'
20250509 201014.832 INFO             PET0 model1: --- VMK::log() start -------------------------------------
20250509 201014.832 INFO             PET0 model1: vm located at: 0x143004b40
20250509 201014.832 INFO             PET0 model1: mpionly=1 threadsflag=0
20250509 201014.832 INFO             PET0 model1: ssiCount=1 localSsi=0
20250509 201014.832 INFO             PET0 model1: devCount=0 ssiLocalDevCount=0
20250509 201014.832 INFO             PET0 model1: petCount=6 ssiLocalPetCount=6
20250509 201014.832 INFO             PET0 model1: localPet=0 mypthid=0x202a94f40 ssiLocalPet=0 currentSsiPe=-1
20250509 201014.832 INFO             PET0 model1: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.832 INFO             PET0 model1: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.832 INFO             PET0 model1:  PE=0 SSI=0 SSIPE=0
20250509 201014.832 INFO             PET0 model1: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.832 INFO             PET0 model1:  PE=1 SSI=0 SSIPE=1
20250509 201014.832 INFO             PET0 model1: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.832 INFO             PET0 model1:  PE=2 SSI=0 SSIPE=2
20250509 201014.832 INFO             PET0 model1: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.832 INFO             PET0 model1:  PE=3 SSI=0 SSIPE=3
20250509 201014.832 INFO             PET0 model1: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.832 INFO             PET0 model1:  PE=4 SSI=0 SSIPE=4
20250509 201014.832 INFO             PET0 model1: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.832 INFO             PET0 model1:  PE=5 SSI=0 SSIPE=5
20250509 201014.832 INFO             PET0 model1: --- VMK::log() end ---------------------------------------
20250509 201014.837 INFO             PET0 Entering 'user1_run'
20250509 201014.837 INFO             PET0  user1_run: on SSIPE:           -1  Filling data lbound:           1           1           1  ubound:        1667        1200          10
20250509 201017.623 INFO             PET0  user1_run: on SSIPE:           -1  Filling data lbound:           1           1           1  ubound:        1667        1200          10
20250509 201019.448 INFO             PET0  user1_run: on SSIPE:           -1  Filling data lbound:           1           1           1  ubound:        1667        1200          10
20250509 201021.933 INFO             PET0  user1_run: on SSIPE:           -1  Filling data lbound:           1           1           1  ubound:        1667        1200          10
20250509 201024.252 INFO             PET0  user1_run: on SSIPE:           -1  Filling data lbound:           1           1           1  ubound:        1667        1200          10
20250509 201026.914 INFO             PET0 Exiting 'user1_run'
20250509 201027.234 INFO             PET0 Entering 'user2_run'
20250509 201027.234 INFO             PET0 model2: --- VMK::log() start -------------------------------------
20250509 201027.234 INFO             PET0 model2: vm located at: 0x131e0a5c0
20250509 201027.234 INFO             PET0 model2: mpionly=0 threadsflag=0
20250509 201027.234 INFO             PET0 model2: ssiCount=1 localSsi=0
20250509 201027.234 INFO             PET0 model2: devCount=0 ssiLocalDevCount=0
20250509 201027.234 INFO             PET0 model2: petCount=1 ssiLocalPetCount=1
20250509 201027.234 INFO             PET0 model2: localPet=0 mypthid=0x202a94f40 ssiLocalPet=0 currentSsiPe=-1
20250509 201027.234 INFO             PET0 model2: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201027.234 INFO             PET0 model2: PET=0 lpid=0 tid=0 pid=0 peCount=6 accCount=0
20250509 201027.234 INFO             PET0 model2:  PE=0 SSI=0 SSIPE=0
20250509 201027.234 INFO             PET0 model2:  PE=1 SSI=0 SSIPE=1
20250509 201027.234 INFO             PET0 model2:  PE=2 SSI=0 SSIPE=2
20250509 201027.234 INFO             PET0 model2:  PE=3 SSI=0 SSIPE=3
20250509 201027.234 INFO             PET0 model2:  PE=4 SSI=0 SSIPE=4
20250509 201027.234 INFO             PET0 model2:  PE=5 SSI=0 SSIPE=5
20250509 201027.234 INFO             PET0 model2: --- VMK::log() end ---------------------------------------
20250509 201027.234 INFO             PET0  user2_run: ssiLocalDeCount=           6
20250509 201027.234 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           0  DE=           0  lbound:           1           1           1  ubound:        1667        1200          10
20250509 201027.894 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           1  DE=           1  lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201028.630 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           2  DE=           2  lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201029.343 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           3  DE=           3  lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201030.013 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           4  DE=           4  lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201030.592 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           5  DE=           5  lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201031.195 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           0  DE=           0  lbound:           1           1           1  ubound:        1667        1200          10
20250509 201031.807 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           1  DE=           1  lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201032.521 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           2  DE=           2  lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201033.079 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           3  DE=           3  lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201033.810 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           4  DE=           4  lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201034.476 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           5  DE=           5  lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201035.108 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           0  DE=           0  lbound:           1           1           1  ubound:        1667        1200          10
20250509 201035.751 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           1  DE=           1  lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201036.431 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           2  DE=           2  lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201037.097 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           3  DE=           3  lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201037.819 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           4  DE=           4  lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201038.466 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           5  DE=           5  lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201039.122 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           0  DE=           0  lbound:           1           1           1  ubound:        1667        1200          10
20250509 201039.807 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           1  DE=           1  lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201040.423 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           2  DE=           2  lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201040.876 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           3  DE=           3  lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201041.541 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           4  DE=           4  lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201042.194 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           5  DE=           5  lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201042.685 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           0  DE=           0  lbound:           1           1           1  ubound:        1667        1200          10
20250509 201043.279 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           1  DE=           1  lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201043.863 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           2  DE=           2  lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201044.559 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           3  DE=           3  lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201045.118 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           4  DE=           4  lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201045.673 INFO             PET0  user2_run: OpenMP thread:    99979024  on SSIPE:           -1  Testing data for localDe =           5  DE=           5  lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201046.304 INFO             PET0  user2_run: All data correct.
20250509 201046.304 INFO             PET0 Exiting 'user2_run'
20250509 201046.343 INFO             PET0  NUMBER_OF_PROCESSORS           6
20250509 201046.343 INFO             PET0  PASS  System Test ESMF_FieldSharedDeSSISTest, ESMF_FieldSharedDeSSISTest.F90, line 276
20250509 201046.343 INFO             PET0  Finalizing ESMF
20250509 201014.764 INFO             PET1 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.795 INFO             PET1 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250509 201014.795 INFO             PET1 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250509 201014.795 INFO             PET1 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250509 201014.795 INFO             PET1 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250509 201014.795 INFO             PET1 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.795 INFO             PET1 Running with ESMF Version   : v8.9.0b08-9-gea72ab2180
20250509 201014.795 INFO             PET1 ESMF library build date/time: "May  9 2025" "19:17:42"
20250509 201014.795 INFO             PET1 ESMF library build location : /Users/sacks/projects/scratch/esmf-testing/gfortranclang_12.2.0_14.0.0_openmpi_g_develop/esmf
20250509 201014.795 INFO             PET1 ESMF_COMM                   : openmpi
20250509 201014.796 INFO             PET1 ESMF_MOAB                   : enabled
20250509 201014.796 INFO             PET1 ESMF_LAPACK                 : enabled
20250509 201014.796 INFO             PET1 ESMF_NETCDF                 : enabled
20250509 201014.796 INFO             PET1 ESMF_PNETCDF                : disabled
20250509 201014.796 INFO             PET1 ESMF_PIO                    : enabled
20250509 201014.796 INFO             PET1 ESMF_YAMLCPP                : enabled
20250509 201014.801 INFO             PET1 --- VMK::logSystem() start -------------------------------
20250509 201014.801 INFO             PET1 esmfComm=openmpi
20250509 201014.801 INFO             PET1 isPthreadsEnabled=1
20250509 201014.801 INFO             PET1 isOpenMPEnabled=0
20250509 201014.801 INFO             PET1 isOpenACCEnabled=0
20250509 201014.801 INFO             PET1 isSsiSharedMemoryEnabled=1
20250509 201014.801 INFO             PET1 isNvmlEnabled=0
20250509 201014.801 INFO             PET1 isNumaEnabled=0
20250509 201014.804 INFO             PET1 ssiCount=1 peCount=6
20250509 201014.804 INFO             PET1 PE=0 SSI=0 SSIPE=0
20250509 201014.804 INFO             PET1 PE=1 SSI=0 SSIPE=1
20250509 201014.804 INFO             PET1 PE=2 SSI=0 SSIPE=2
20250509 201014.804 INFO             PET1 PE=3 SSI=0 SSIPE=3
20250509 201014.804 INFO             PET1 PE=4 SSI=0 SSIPE=4
20250509 201014.804 INFO             PET1 PE=5 SSI=0 SSIPE=5
20250509 201014.804 INFO             PET1 ndevs=0 ndevsSSI=0
20250509 201014.804 INFO             PET1 
20250509 201014.804 INFO             PET1 --- VMK::logSystem() MPI Layer ---------------------------
20250509 201014.804 INFO             PET1 MPI_VERSION=3
20250509 201014.804 INFO             PET1 MPI_SUBVERSION=1
20250509 201014.804 INFO             PET1 mpi_t_okay=1
20250509 201014.807 INFO             PET1 --- VMK::logSystem() MPI Tool Interface Control Vars ---
20250509 201014.807 INFO             PET1 index=   0                                         base_help_aggregate : If opal_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message. Default: true.
20250509 201014.807 INFO             PET1 index=   1                                        mca_base_param_files : Path for MCA configuration files containing variable values
20250509 201014.807 INFO             PET1 index=   2                                             mca_param_files : Path for MCA configuration files containing variable values
20250509 201014.807 INFO             PET1 index=   3                                mca_base_override_param_file : Variables set in this file will override any value set inthe environment or another configuration file
20250509 201014.808 INFO             PET1 index=   4                          mca_base_suppress_override_warning : Suppress warnings when attempting to set an overridden value (default: false)
20250509 201014.808 INFO             PET1 index=   5                                  mca_base_param_file_prefix : Aggregate MCA parameter file sets
20250509 201014.808 INFO             PET1 index=   6                                  mca_base_envar_file_prefix : Aggregate MCA parameter file set for env variables
20250509 201014.808 INFO             PET1 index=   7                                    mca_base_param_file_path : Aggregate MCA parameter Search path
20250509 201014.808 INFO             PET1 index=   8                              mca_base_param_file_path_force : Forced Aggregate MCA parameter Search path
20250509 201014.808 INFO             PET1 index=   9                                                 opal_signal : Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
20250509 201014.810 INFO             PET1 index=  10                                      opal_stacktrace_output : Specifies where the stack trace output stream goes.  Accepts one of the following: none (disabled), stderr (default), stdout, file[:filename].   If 'filename' is not specified, a default filename of 'stacktrace' is used.  The 'filename' is appended with either '.PID' or '.RANK.PID', if RANK is available.  The 'filename' can be an absolute path or a relative path to the current working directory.
20250509 201014.810 INFO             PET1 index=  11                                       opal_net_private_ipv4 : Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
20250509 201014.810 INFO             PET1 index=  12                                     opal_set_max_sys_limits : Set the specified system-imposed limits to the specified value, including "unlimited".Supported params: core, filesize, maxmem, openfiles, stacksize, maxchildren
20250509 201014.810 INFO             PET1 index=  13                                         opal_var_dump_color : The colors to use when dumping MCA vars with color (e.g. ompi_info). The format is a comma-delimited key=value list, where the key is the attribute whose color to adjust, and the value is the ANSI color code (see the ANSI X3.64 CSI SGR sequence). Available keys: name,value,valid_values.
20250509 201014.810 INFO             PET1 index=  14                                opal_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.810 INFO             PET1 index=  15                                           opal_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.810 INFO             PET1 index=  16                                opal_warn_on_missing_libcuda : Whether to print a message when CUDA support is enabled but libcuda is not found
20250509 201014.810 INFO             PET1 index=  17                                            mpi_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.810 INFO             PET1 index=  18                                           opal_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.810 INFO             PET1 index=  19                                   mpi_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.810 INFO             PET1 index=  20                                  opal_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.810 INFO             PET1 index=  21                                            mpi_warn_on_fork : If nonzero, issue a warning if program forks under conditions that could cause system errors
20250509 201014.810 INFO             PET1 index=  22                                            opal_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.810 INFO             PET1 index=  23                                      opal_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.810 INFO             PET1 index=  24                                           mca_base_env_list : Set SHELL env variables
20250509 201014.810 INFO             PET1 index=  25                                 mca_base_env_list_delimiter : Set SHELL env variables delimiter. Default: semicolon ';'
20250509 201014.810 INFO             PET1 index=  26                                  mca_base_env_list_internal : Store SHELL env variables from amca conf file
20250509 201014.811 INFO             PET1 index=  27                                 opal_max_thread_in_progress : Number of thread allowed in opal_progress. Default: 1
20250509 201014.811 INFO             PET1 index=  28                                     mca_base_component_path : Path where to look for additional components
20250509 201014.813 INFO             PET1 index=  29                                          mca_component_path : Path where to look for additional components
20250509 201014.813 INFO             PET1 index=  30                         mca_base_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.815 INFO             PET1 index=  31                              mca_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.815 INFO             PET1 index=  32                        mca_base_component_track_load_errors : Whether to track errors for components that failed to load or not
20250509 201014.815 INFO             PET1 index=  33                           mca_base_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.815 INFO             PET1 index=  34                                mca_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.815 INFO             PET1 index=  35                                            mca_base_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.815 INFO             PET1 index=  36                                                 mca_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.815 INFO             PET1 index=  37                                                          dl : Default selection set of components for the dl framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET1 index=  38                                             dl_base_verbose : Verbosity level for the dl framework (default: 0)
20250509 201014.815 INFO             PET1 index=  39                                 dl_dlopen_filename_suffixes : Comma-delimited list of filename suffixes that the dlopen component will try
20250509 201014.815 INFO             PET1 index=  40                                     dl_dlopen_major_version :
20250509 201014.815 INFO             PET1 index=  41                                     dl_dlopen_minor_version :
20250509 201014.815 INFO             PET1 index=  42                                   dl_dlopen_release_version :
20250509 201014.815 INFO             PET1 index=  43                                               mpi_ft_enable : Enable UFLM MPI Fault Tolerance framework
20250509 201014.815 INFO             PET1 index=  44                                              mpi_ft_verbose : Verbosity level of the ULFM MPI Fault Tolerance framework
20250509 201014.815 INFO             PET1 index=  45                                       mpi_ft_reliable_bcast : Reliable Broadcast algorithm (1: Binomial Graph Diffusion; 2: N^2 full graph diffusion)
20250509 201014.815 INFO             PET1 index=  46                               mpi_ft_propagator_with_rbcast : Use the OMPI reliable broadcast failure propagator, or disable it and use only RTE propagation (slower)
20250509 201014.815 INFO             PET1 index=  47                                             mpi_ft_detector : Use the OMPI heartbeat based failure detector, or disable it and use only RTE and in-band detection (slower)
20250509 201014.815 INFO             PET1 index=  48                                      mpi_ft_detector_thread : Delegate failure detector to a separate thread
20250509 201014.815 INFO             PET1 index=  49                                      mpi_ft_detector_period : Period of heartbeat emission (s)
20250509 201014.815 INFO             PET1 index=  50                                     mpi_ft_detector_timeout : Timeout before we start suspecting a process after the last heartbeat reception (must be larger than 3*ompi_mpi_ft_detector_period)
20250509 201014.815 INFO             PET1 index=  51                              mpi_ft_detector_rdma_heartbeat : Use rdma put to deposit heartbeats into the observer memory
20250509 201014.815 INFO             PET1 index=  52                                             mpi_param_check : Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
20250509 201014.815 INFO             PET1 index=  53                                         mpi_yield_when_idle : Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
20250509 201014.815 INFO             PET1 index=  54                                         mpi_event_tick_rate : How often to progress TCP communications (0 = never, otherwise specified in microseconds)
20250509 201014.815 INFO             PET1 index=  55                                       mpi_show_handle_leaks : Whether MPI_FINALIZE shows all MPI handles that were not freed or not
20250509 201014.815 INFO             PET1 index=  56                                         mpi_no_free_handles : Whether to actually free MPI objects when their handles are freed
20250509 201014.815 INFO             PET1 index=  57                                mpi_show_mpi_alloc_mem_leaks : If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
20250509 201014.815 INFO             PET1 index=  58                                         mpi_show_mca_params : Whether to show all MCA parameter values during MPI_INIT or not (good for reproducibility of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
20250509 201014.815 INFO             PET1 index=  59                                    mpi_show_mca_params_file : If mpi_show_mca_params is true, setting this string to a valid filename tells 5.0.7 to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducibility of MPI jobs)
20250509 201014.815 INFO             PET1 index=  60                                          mpi_preconnect_mpi : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.815 INFO             PET1 index=  61                                          mpi_preconnect_all : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.815 INFO             PET1 index=  62                               mpi_have_sparse_group_storage : Whether this 5.0.7 installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
20250509 201014.815 INFO             PET1 index=  63                                mpi_use_sparse_group_storage : Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
20250509 201014.815 INFO             PET1 index=  64                                            mpi_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.815 INFO             PET1 index=  65                                 mpi_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.815 INFO             PET1 index=  66                                        mpi_add_procs_cutoff : Maximum world size for pre-allocating resources for all remote processes. Increasing this limit may improve communication performance at the cost of memory usage
20250509 201014.815 INFO             PET1 index=  67                                        mpi_dynamics_enabled : Is the MPI dynamic process functionality enabled (e.g., MPI_COMM_SPAWN)?  Default is yes, but certain transports and/or environments may disable it.
20250509 201014.815 INFO             PET1 index=  68                                              async_mpi_init : Do not perform a barrier at the end of MPI_Init
20250509 201014.815 INFO             PET1 index=  69                                          async_mpi_finalize : Do not perform a barrier at the beginning of MPI_Finalize
20250509 201014.815 INFO             PET1 index=  70                                             mpi_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.815 INFO             PET1 index=  71                                       mpi_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.815 INFO             PET1 index=  72                                             mpi_compat_mpi3 : A boolean value for whether Open MPI operates in MPI-3 compatibility mode; this changes the following behavior: in operations without a handle, errors are raised on (true) MPI_COMM_WORLD (MPI-3 behavior) or (false) MPI_COMM_SELF (MPI-4 behavior).
20250509 201014.815 INFO             PET1 index=  73                                    mpi_pmix_connect_timeout : Timeout(secs) for calls to PMIx_Connect. Default is no timeout.
20250509 201014.815 INFO             PET1 index=  74                                                 ompi_timing : Request that critical timing loops be measured
20250509 201014.815 INFO             PET1 index=  75                                       ompi_stream_buffering : Adjust buffering for stdout/stderr. (0) unbuffered, (1) line buffered, (2) fully buffered.
20250509 201014.815 INFO             PET1 index=  76                                            mpi_comm_verbose : Verbosity level for communicator management subsystem
20250509 201014.816 INFO             PET1 index=  77                                                          if : Default selection set of components for the if framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index=  78                                             if_base_verbose : Verbosity level for the if framework (default: 0)
20250509 201014.816 INFO             PET1 index=  79                                      if_base_do_not_resolve : If nonzero, do not attempt to resolve interfaces
20250509 201014.816 INFO             PET1 index=  80                                     if_base_retain_loopback : If nonzero, retain loopback interfaces
20250509 201014.816 INFO             PET1 index=  81                                  if_bsdx_ipv6_major_version :
20250509 201014.816 INFO             PET1 index=  82                                  if_bsdx_ipv6_minor_version :
20250509 201014.816 INFO             PET1 index=  83                                if_bsdx_ipv6_release_version :
20250509 201014.816 INFO             PET1 index=  84                                 if_posix_ipv4_major_version :
20250509 201014.816 INFO             PET1 index=  85                                 if_posix_ipv4_minor_version :
20250509 201014.816 INFO             PET1 index=  86                               if_posix_ipv4_release_version :
20250509 201014.816 INFO             PET1 index=  87                                                     threads : Default selection set of components for the threads framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index=  88                                        threads_base_verbose : Verbosity level for the threads framework (default: 0)
20250509 201014.816 INFO             PET1 index=  89                             threads_pthreads_yield_strategy : Pthread yield strategy to use
20250509 201014.816 INFO             PET1 index=  90                             threads_pthreads_nanosleep_time : Number of nanoseconds to sleep when using nanosleep as the pthread yield strategy
20250509 201014.816 INFO             PET1 index=  91                              threads_pthreads_major_version :
20250509 201014.816 INFO             PET1 index=  92                              threads_pthreads_minor_version :
20250509 201014.816 INFO             PET1 index=  93                            threads_pthreads_release_version :
20250509 201014.816 INFO             PET1 index=  94                                                       hwloc : Default selection set of components for the hwloc framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index=  95                                          hwloc_base_verbose : Verbosity level for the hwloc framework (default: 0)
20250509 201014.816 INFO             PET1 index=  96                          hwloc_base_mem_bind_failure_action : What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
20250509 201014.816 INFO             PET1 index=  97                                                      memcpy : Default selection set of components for the memcpy framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index=  98                                         memcpy_base_verbose : Verbosity level for the memcpy framework (default: 0)
20250509 201014.816 INFO             PET1 index=  99                                                  memchecker : Default selection set of components for the memchecker framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index= 100                                     memchecker_base_verbose : Verbosity level for the memchecker framework (default: 0)
20250509 201014.816 INFO             PET1 index= 101                                                   backtrace : Default selection set of components for the backtrace framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index= 102                                      backtrace_base_verbose : Verbosity level for the backtrace framework (default: 0)
20250509 201014.816 INFO             PET1 index= 103                            backtrace_execinfo_major_version :
20250509 201014.816 INFO             PET1 index= 104                            backtrace_execinfo_minor_version :
20250509 201014.816 INFO             PET1 index= 105                          backtrace_execinfo_release_version :
20250509 201014.816 INFO             PET1 index= 106                                                       timer : Default selection set of components for the timer framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET1 index= 107                                          timer_base_verbose : Verbosity level for the timer framework (default: 0)
20250509 201014.816 INFO             PET1 index= 108                                     timer_require_monotonic : Node-level monotonic timer required (default yes)
20250509 201014.816 INFO             PET1 index= 109                                  timer_darwin_major_version :
20250509 201014.817 INFO             PET1 index= 110                                  timer_darwin_minor_version :
20250509 201014.817 INFO             PET1 index= 111                                timer_darwin_release_version :
20250509 201014.817 INFO             PET1 index= 112                                                       shmem : Default selection set of components for the shmem framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET1 index= 113                                          shmem_base_verbose : Verbosity level for the shmem framework (default: 0)
20250509 201014.817 INFO             PET1 index= 114                               shmem_base_RUNTIME_QUERY_hint : Internal OMPI parameter used to provide a component selection hint to the shmem framework.  The value of this parameter is the name of the component that is available, selectable, and meets our run-time behavior requirements.
20250509 201014.817 INFO             PET1 index= 115                                         shmem_mmap_priority : Priority for shmem mmap component (default: 50)
20250509 201014.817 INFO             PET1 index= 116                               shmem_mmap_enable_nfs_warning : Enable the warning emitted when Open MPI detects that its shared memory backing file is located on a network filesystem (1 = enabled, 0 = disabled).
20250509 201014.817 INFO             PET1 index= 117                            shmem_mmap_relocate_backing_file : Whether to change the default placement of backing files or not (Negative = try to relocate backing files to an area rooted at the path specified by shmem_mmap_backing_file_base_dir, but continue with the default path if the relocation fails, 0 = do not relocate, Positive = same as the negative option, but will fail if the relocation fails.
20250509 201014.817 INFO             PET1 index= 118                            shmem_mmap_backing_file_base_dir : Specifies where backing files will be created when shmem_mmap_relocate_backing_file is in use.
20250509 201014.817 INFO             PET1 index= 119                                    shmem_mmap_major_version :
20250509 201014.817 INFO             PET1 index= 120                                    shmem_mmap_minor_version :
20250509 201014.817 INFO             PET1 index= 121                                  shmem_mmap_release_version :
20250509 201014.817 INFO             PET1 index= 130                                                   reachable : Default selection set of components for the reachable framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET1 index= 131                                      reachable_base_verbose : Verbosity level for the reachable framework (default: 0)
20250509 201014.817 INFO             PET1 index= 132                            reachable_weighted_major_version :
20250509 201014.817 INFO             PET1 index= 133                            reachable_weighted_minor_version :
20250509 201014.817 INFO             PET1 index= 134                          reachable_weighted_release_version :
20250509 201014.817 INFO             PET1 index= 135                                                        pmix : Default selection set of components for the pmix framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET1 index= 136                                           pmix_base_verbose : Verbosity level for the pmix framework (default: 0)
20250509 201014.817 INFO             PET1 index= 137                                       pmix_base_async_modex : Use asynchronous modex mode
20250509 201014.817 INFO             PET1 index= 138                                      pmix_base_collect_data : Collect all data during modex
20250509 201014.817 INFO             PET1 index= 139                                  pmix_base_exchange_timeout : Time (in seconds) to wait for a data exchange to complete
20250509 201014.817 INFO             PET1 index= 140                                                 accelerator : Default selection set of components for the accelerator framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET1 index= 141                                    accelerator_base_verbose : Verbosity level for the accelerator framework (default: 0)
20250509 201014.817 INFO             PET1 index= 142                              accelerator_null_major_version :
20250509 201014.817 INFO             PET1 index= 143                              accelerator_null_minor_version :
20250509 201014.817 INFO             PET1 index= 144                            accelerator_null_release_version :
20250509 201014.817 INFO             PET1 index= 145                                          opal_event_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.817 INFO             PET1 index= 146                                      event_external_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.817 INFO             PET1 index= 147                                          opal_event_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.817 INFO             PET1 index= 148                                          event_base_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.817 INFO             PET1 index= 149                                                        hook : Default selection set of components for the hook framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET1 index= 150                                           hook_base_verbose : Verbosity level for the hook framework (default: 0)
20250509 201014.817 INFO             PET1 index= 151                                    hook_comm_method_verbose :
20250509 201014.817 INFO             PET1 index= 152                                    hook_comm_method_display : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.817 INFO             PET1 index= 153                                           ompi_display_comm : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.817 INFO             PET1 index= 154                                        hook_comm_method_max : Number of hosts for which to print unabbreviated 2d table of comm methods.
20250509 201014.817 INFO             PET1 index= 155                                      hook_comm_method_brief : Only print the comm method summary, skip the 2d table.
20250509 201014.817 INFO             PET1 index= 156                                   hook_comm_method_fakefile : For debugging only: read comm methods from a file
20250509 201014.817 INFO             PET1 index= 157                              hook_comm_method_major_version :
20250509 201014.817 INFO             PET1 index= 158                              hook_comm_method_minor_version :
20250509 201014.817 INFO             PET1 index= 159                            hook_comm_method_release_version :
20250509 201014.817 INFO             PET1 index= 160                                                          op : Default selection set of components for the op framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET1 index= 161                                             op_base_verbose : Verbosity level for the op framework (default: 0)
20250509 201014.818 INFO             PET1 index= 162                               op_aarch64_hardware_available : Whether the Neon (1) or SVE (2) hardware is available
20250509 201014.818 INFO             PET1 index= 163                                 op_aarch64_double_supported : Whether the double precision data types are supported or not
20250509 201014.818 INFO             PET1 index= 164                                    op_aarch64_major_version :
20250509 201014.818 INFO             PET1 index= 165                                    op_aarch64_minor_version :
20250509 201014.818 INFO             PET1 index= 166                                  op_aarch64_release_version :
20250509 201014.818 INFO             PET1 index= 167                                                   allocator : Default selection set of components for the allocator framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET1 index= 168                                      allocator_base_verbose : Verbosity level for the allocator framework (default: 0)
20250509 201014.818 INFO             PET1 index= 169                               allocator_basic_major_version :
20250509 201014.818 INFO             PET1 index= 170                               allocator_basic_minor_version :
20250509 201014.818 INFO             PET1 index= 171                             allocator_basic_release_version :
20250509 201014.818 INFO             PET1 index= 172                                allocator_bucket_num_buckets :
20250509 201014.818 INFO             PET1 index= 173                              allocator_bucket_major_version :
20250509 201014.818 INFO             PET1 index= 174                              allocator_bucket_minor_version :
20250509 201014.818 INFO             PET1 index= 175                            allocator_bucket_release_version :
20250509 201014.818 INFO             PET1 index= 176                                                      rcache : Default selection set of components for the rcache framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET1 index= 177                                         rcache_base_verbose : Verbosity level for the rcache framework (default: 0)
20250509 201014.818 INFO             PET1 index= 178                                    rcache_grdma_print_stats : print registration cache usage statistics at the end of the run
20250509 201014.818 INFO             PET1 index= 179                                  rcache_grdma_major_version :
20250509 201014.818 INFO             PET1 index= 180                                  rcache_grdma_minor_version :
20250509 201014.818 INFO             PET1 index= 181                                rcache_grdma_release_version :
20250509 201014.818 INFO             PET1 index= 182                                                       mpool : Default selection set of components for the mpool framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET1 index= 183                                          mpool_base_verbose : Verbosity level for the mpool framework (default: 0)
20250509 201014.818 INFO             PET1 index= 184                                    mpool_base_default_hints : Hints to use when selecting the default memory pool
20250509 201014.818 INFO             PET1 index= 185                                 mpool_base_default_priority : Priority of the default mpool module
20250509 201014.818 INFO             PET1 index= 186                                     mpool_hugepage_priority : Default priority of the hugepage mpool component (default: 50)
20250509 201014.818 INFO             PET1 index= 187                                    mpool_hugepage_page_size : Default huge page size of the hugepage mpool component (default: 2M)
20250509 201014.818 INFO             PET1 index= 188                                mpool_hugepage_major_version :
20250509 201014.818 INFO             PET1 index= 189                                mpool_hugepage_minor_version :
20250509 201014.818 INFO             PET1 index= 190                              mpool_hugepage_release_version :
20250509 201014.818 INFO             PET1 index= 191                                                        smsc : Default selection set of components for the smsc framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET1 index= 192                                           smsc_base_verbose : Verbosity level for the smsc framework (default: 0)
20250509 201014.818 INFO             PET1 index= 193                                                         bml : Default selection set of components for the bml framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET1 index= 194                                            bml_base_verbose : Verbosity level for the bml framework (default: 0)
20250509 201014.818 INFO             PET1 index= 195                                  bml_r2_show_unreach_errors : Show error message when procs are unreachable
20250509 201014.818 INFO             PET1 index= 196                                        bml_r2_major_version :
20250509 201014.818 INFO             PET1 index= 197                                        bml_r2_minor_version :
20250509 201014.818 INFO             PET1 index= 198                                      bml_r2_release_version :
20250509 201014.818 INFO             PET1 index= 199                                                         btl : Default selection set of components for the btl framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET1 index= 200                                            btl_base_verbose : Verbosity level for the btl framework (default: 0)
20250509 201014.818 INFO             PET1 index= 201                           btl_base_thread_multiple_override : Enable BTLs that are not normally enabled when MPI_THREAD_MULTIPLE is enabled (THIS IS FOR DEVELOPERS ONLY!  SHOULD NOT BE USED BY END USERS!)
20250509 201014.818 INFO             PET1 index= 202                                            btl_base_include :
20250509 201014.819 INFO             PET1 index= 203                                            btl_base_exclude :
20250509 201014.819 INFO             PET1 index= 204                                    btl_base_warn_peer_error : This parameter is used to turn on warning messages when peers disconnect unexpectedly
20250509 201014.819 INFO             PET1 index= 205                              btl_base_warn_component_unused : This parameter is used to turn on warning messages when certain NICs are not used
20250509 201014.819 INFO             PET1 index= 206                                      btl_self_free_list_num : Number of fragments by default
20250509 201014.819 INFO             PET1 index= 207                                      btl_self_free_list_max : Maximum number of fragments
20250509 201014.819 INFO             PET1 index= 208                                      btl_self_free_list_inc : Increment by this number of fragments
20250509 201014.819 INFO             PET1 index= 209                                        btl_self_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET1 index= 210                                              btl_self_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET1 index= 211                                       btl_self_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET1 index= 212                                   btl_self_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.819 INFO             PET1 index= 213                                        btl_self_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET1 index= 214                                          btl_self_get_limit : Maximum size (in bytes) for btl get
20250509 201014.819 INFO             PET1 index= 215                                      btl_self_get_alignment : Alignment required for btl get
20250509 201014.819 INFO             PET1 index= 216                                          btl_self_put_limit : Maximum size (in bytes) for btl put
20250509 201014.819 INFO             PET1 index= 217                                      btl_self_put_alignment : Alignment required for btl put
20250509 201014.819 INFO             PET1 index= 218                          btl_self_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.819 INFO             PET1 index= 219                                      btl_self_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.819 INFO             PET1 index= 220                          btl_self_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET1 index= 221                            btl_self_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET1 index= 222                             btl_self_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET1 index= 223                                            btl_self_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.819 INFO             PET1 index= 224                                          btl_self_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.819 INFO             PET1 index= 225                                      btl_self_major_version :
20250509 201014.819 INFO             PET1 index= 226                                      btl_self_minor_version :
20250509 201014.819 INFO             PET1 index= 227                                    btl_self_release_version :
20250509 201014.819 INFO             PET1 index= 228                                        btl_sm_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET1 index= 229                                     btl_vader_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET1 index= 230                                        btl_sm_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET1 index= 231                                     btl_vader_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET1 index= 232                                        btl_sm_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.819 INFO             PET1 index= 233                                     btl_vader_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.819 INFO             PET1 index= 234                                         btl_sm_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.819 INFO             PET1 index= 235                                      btl_vader_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.819 INFO             PET1 index= 236                                         btl_sm_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.819 INFO             PET1 index= 237                                      btl_vader_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.819 INFO             PET1 index= 238                                      btl_sm_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.819 INFO             PET1 index= 239                                   btl_vader_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.819 INFO             PET1 index= 240                                       btl_sm_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.819 INFO             PET1 index= 241                                    btl_vader_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.820 INFO             PET1 index= 242                                             btl_sm_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.820 INFO             PET1 index= 243                                          btl_vader_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.820 INFO             PET1 index= 244                                            btl_sm_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.820 INFO             PET1 index= 245                                         btl_vader_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.820 INFO             PET1 index= 246                                    btl_sm_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.820 INFO             PET1 index= 247                                 btl_vader_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.820 INFO             PET1 index= 248                                          btl_sm_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET1 index= 249                                       btl_vader_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET1 index= 250                                                btl_sm_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET1 index= 251                                             btl_vader_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET1 index= 252                                         btl_sm_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET1 index= 253                                      btl_vader_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET1 index= 254                                     btl_sm_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET1 index= 255                                  btl_vader_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET1 index= 256                                          btl_sm_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET1 index= 257                                       btl_vader_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET1 index= 258                            btl_sm_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET1 index= 259                         btl_vader_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET1 index= 260                                        btl_sm_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET1 index= 261                                     btl_vader_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET1 index= 262                                        btl_sm_major_version :
20250509 201014.820 INFO             PET1 index= 263                                     btl_vader_major_version :
20250509 201014.820 INFO             PET1 index= 264                                        btl_sm_minor_version :
20250509 201014.820 INFO             PET1 index= 265                                     btl_vader_minor_version :
20250509 201014.820 INFO             PET1 index= 266                                      btl_sm_release_version :
20250509 201014.820 INFO             PET1 index= 267                                   btl_vader_release_version :
20250509 201014.820 INFO             PET1 index= 268                                               btl_tcp_links :
20250509 201014.820 INFO             PET1 index= 269                                          btl_tcp_if_include : Comma-delimited list of devices and/or CIDR notation of networks to use for MPI communication (e.g., "eth0,192.168.0.0/16").  Mutually exclusive with btl_tcp_if_exclude.
20250509 201014.820 INFO             PET1 index= 270                                          btl_tcp_if_exclude : Comma-delimited list of devices and/or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,192.168.0.0/16").  If set to a non-default value, it is mutually exclusive with btl_tcp_if_include.
20250509 201014.820 INFO             PET1 index= 271                                       btl_tcp_free_list_num :
20250509 201014.820 INFO             PET1 index= 272                                       btl_tcp_free_list_max :
20250509 201014.820 INFO             PET1 index= 273                                       btl_tcp_free_list_inc :
20250509 201014.820 INFO             PET1 index= 274                                              btl_tcp_sndbuf : The size of the send buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a send buffer size.
20250509 201014.820 INFO             PET1 index= 275                                              btl_tcp_rcvbuf : The size of the receive buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a receive buffer size.
20250509 201014.820 INFO             PET1 index= 276                                      btl_tcp_endpoint_cache : The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
20250509 201014.820 INFO             PET1 index= 277                                           btl_tcp_use_nagle : Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
20250509 201014.820 INFO             PET1 index= 278                                         btl_tcp_port_min_v4 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.820 INFO             PET1 index= 279                                       btl_tcp_port_range_v4 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.820 INFO             PET1 index= 280                                         btl_tcp_port_min_v6 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.820 INFO             PET1 index= 281                                       btl_tcp_port_range_v6 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.820 INFO             PET1 index= 282                                     btl_tcp_progress_thread :
20250509 201014.820 INFO             PET1 index= 283                         btl_tcp_warn_all_unfound_interfaces : Issue a warning for all unfound interfaces included in if_exclude
20250509 201014.820 INFO             PET1 index= 284                                         btl_tcp_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET1 index= 285                                               btl_tcp_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET1 index= 286                                        btl_tcp_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET1 index= 287                                    btl_tcp_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.821 INFO             PET1 index= 288                                         btl_tcp_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.821 INFO             PET1 index= 289                                           btl_tcp_put_limit : Maximum size (in bytes) for btl put
20250509 201014.821 INFO             PET1 index= 290                                       btl_tcp_put_alignment : Alignment required for btl put
20250509 201014.821 INFO             PET1 index= 291                           btl_tcp_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.821 INFO             PET1 index= 292                                       btl_tcp_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.821 INFO             PET1 index= 293                           btl_tcp_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET1 index= 294                             btl_tcp_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET1 index= 295                              btl_tcp_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET1 index= 296                                             btl_tcp_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.821 INFO             PET1 index= 297                                           btl_tcp_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.821 INFO             PET1 index= 298                                      btl_tcp_disable_family :
20250509 201014.821 INFO             PET1 index= 299                                       btl_tcp_major_version :
20250509 201014.821 INFO             PET1 index= 300                                       btl_tcp_minor_version :
20250509 201014.821 INFO             PET1 index= 301                                     btl_tcp_release_version :
20250509 201014.821 INFO             PET1 index= 302                                                         pml : Default selection set of components for the pml framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET1 index= 303                                            pml_base_verbose : Verbosity level for the pml framework (default: 0)
20250509 201014.821 INFO             PET1 index= 304                                    pml_base_bsend_allocator :
20250509 201014.821 INFO             PET1 index= 305                                            pml_base_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.821 INFO             PET1 index= 306                                                 pml_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.821 INFO             PET1 index= 307                                          pml_base_check_pml : Whether to check the pml selections to ensure they all match
20250509 201014.821 INFO             PET1 index= 320                                             pml_ob1_verbose :
20250509 201014.821 INFO             PET1 index= 321                                       pml_ob1_free_list_num :
20250509 201014.821 INFO             PET1 index= 322                                       pml_ob1_free_list_max :
20250509 201014.821 INFO             PET1 index= 323                                       pml_ob1_free_list_inc :
20250509 201014.821 INFO             PET1 index= 324                                            pml_ob1_priority :
20250509 201014.821 INFO             PET1 index= 325                                 pml_ob1_send_pipeline_depth :
20250509 201014.821 INFO             PET1 index= 326                                 pml_ob1_recv_pipeline_depth :
20250509 201014.821 INFO             PET1 index= 327                                pml_ob1_max_rdma_per_request :
20250509 201014.821 INFO             PET1 index= 328                                  pml_ob1_max_send_per_range :
20250509 201014.821 INFO             PET1 index= 329                                    pml_ob1_unexpected_limit :
20250509 201014.821 INFO             PET1 index= 330                                        pml_ob1_use_all_rdma : Use all available RDMA btls for the RDMA and RDMA pipeline protocols (default: false)
20250509 201014.821 INFO             PET1 index= 331                                           pml_ob1_allocator : Name of allocator component for unexpected messages
20250509 201014.821 INFO             PET1 index= 332                              pml_ob1_accelerator_events_max : Number of events created by the ob1 component internally
20250509 201014.821 INFO             PET1 index= 333                                       pml_ob1_major_version :
20250509 201014.821 INFO             PET1 index= 334                                       pml_ob1_minor_version :
20250509 201014.821 INFO             PET1 index= 335                                     pml_ob1_release_version :
20250509 201014.821 INFO             PET1 index= 339                                                   vprotocol : Specify a specific vprotocol to use
20250509 201014.821 INFO             PET1 index= 343                                                         mtl : Default selection set of components for the mtl framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET1 index= 344                                            mtl_base_verbose : Verbosity level for the mtl framework (default: 0)
20250509 201014.821 INFO             PET1 index= 345                                      vprotocol_base_verbose : Verbosity level for the vprotocol framework (default: 0)
20250509 201014.821 INFO             PET1 index= 346                                vprotocol_pessimist_priority :
20250509 201014.821 INFO             PET1 index= 347                           vprotocol_pessimist_free_list_num :
20250509 201014.821 INFO             PET1 index= 348                           vprotocol_pessimist_free_list_max :
20250509 201014.822 INFO             PET1 index= 349                           vprotocol_pessimist_free_list_inc :
20250509 201014.822 INFO             PET1 index= 350                      vprotocol_pessimist_sender_based_chunk :
20250509 201014.822 INFO             PET1 index= 351                       vprotocol_pessimist_event_buffer_size :
20250509 201014.822 INFO             PET1 index= 352                       vprotocol_pessimist_sender_based_file :
20250509 201014.822 INFO             PET1 index= 353                   vprotocol_pessimist_allow_thread_multiple : Allow the PML V to work even when the MPI library is initialized with MPI_THREAD_MULTIPLE support. By default the PML V is disabled in such instances, to protect applications that are not send deterministic.
20250509 201014.822 INFO             PET1 index= 354                           vprotocol_pessimist_major_version :
20250509 201014.822 INFO             PET1 index= 355                           vprotocol_pessimist_minor_version :
20250509 201014.822 INFO             PET1 index= 356                         vprotocol_pessimist_release_version :
20250509 201014.822 INFO             PET1 index= 357                                                        coll : Default selection set of components for the coll framework (<none> means use all components that can be found)
20250509 201014.822 INFO             PET1 index= 358                                           coll_base_verbose : Verbosity level for the coll framework (default: 0)
20250509 201014.822 INFO             PET1 index= 359                                         coll_adapt_priority : Priority of the adapt coll component
20250509 201014.822 INFO             PET1 index= 360                                          coll_adapt_verbose : Verbose level (default set to the collective framework verbosity)
20250509 201014.822 INFO             PET1 index= 361                            coll_adapt_context_free_list_min : Minimum number of segments in context free list
20250509 201014.822 INFO             PET1 index= 362                            coll_adapt_context_free_list_max : Maximum number of segments in context free list
20250509 201014.822 INFO             PET1 index= 363                            coll_adapt_context_free_list_inc : Increasement number of segments in context free list
20250509 201014.822 INFO             PET1 index= 364                                  coll_adapt_bcast_algorithm : Algorithm of broadcast, 0: tuned, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.822 INFO             PET1 index= 365                               coll_adapt_bcast_segment_size : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET1 index= 366                          coll_adapt_bcast_max_send_requests : Maximum number of send requests
20250509 201014.822 INFO             PET1 index= 367                          coll_adapt_bcast_max_recv_requests : Maximum number of receive requests
20250509 201014.822 INFO             PET1 index= 368                           coll_adapt_bcast_synchronous_send : Whether to use synchronous send operations during setup of bcast operations
20250509 201014.822 INFO             PET1 index= 369                                 coll_adapt_reduce_algorithm : Algorithm of reduce, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.822 INFO             PET1 index= 370                              coll_adapt_reduce_segment_size : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET1 index= 371                         coll_adapt_reduce_max_send_requests : Maximum number of send requests
20250509 201014.822 INFO             PET1 index= 372                         coll_adapt_reduce_max_recv_requests : Maximum number of receive requests per peer
20250509 201014.822 INFO             PET1 index= 373                              coll_adapt_inbuf_free_list_min : Minimum number of segment in inbuf free list
20250509 201014.822 INFO             PET1 index= 374                              coll_adapt_inbuf_free_list_max : Maximum number of segment in inbuf free list
20250509 201014.822 INFO             PET1 index= 375                              coll_adapt_inbuf_free_list_inc : Number of segments to allocate when growing the inbuf free list
20250509 201014.822 INFO             PET1 index= 376                          coll_adapt_reduce_synchronous_send : Whether to use synchronous send operations during setup of reduce operations
20250509 201014.822 INFO             PET1 index= 377                                    coll_adapt_major_version :
20250509 201014.822 INFO             PET1 index= 378                                    coll_adapt_minor_version :
20250509 201014.822 INFO             PET1 index= 379                                  coll_adapt_release_version :
20250509 201014.822 INFO             PET1 index= 380                                         coll_basic_priority : Priority of the basic coll component
20250509 201014.822 INFO             PET1 index= 381                                        coll_basic_crossover : Minimum number of processes in a communicator before using the logarithmic algorithms
20250509 201014.822 INFO             PET1 index= 382                                    coll_basic_major_version :
20250509 201014.822 INFO             PET1 index= 383                                    coll_basic_minor_version :
20250509 201014.822 INFO             PET1 index= 384                                  coll_basic_release_version :
20250509 201014.822 INFO             PET1 index= 385                                           coll_han_priority : Priority of the HAN coll component
20250509 201014.822 INFO             PET1 index= 386                                            coll_han_verbose : Verbosity of the HAN coll component (use coll base verbosity if not set)
20250509 201014.822 INFO             PET1 index= 387                                      coll_han_bcast_segsize : segment size for bcast
20250509 201014.822 INFO             PET1 index= 388                                    coll_han_bcast_up_module : up level module for bcast, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET1 index= 389                                   coll_han_bcast_low_module : low level module for bcast, 0 tuned, 1 sm
20250509 201014.823 INFO             PET1 index= 390                                     coll_han_reduce_segsize : segment size for reduce
20250509 201014.823 INFO             PET1 index= 391                                   coll_han_reduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET1 index= 392                                  coll_han_reduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.823 INFO             PET1 index= 393                                  coll_han_allreduce_segsize : segment size for allreduce
20250509 201014.823 INFO             PET1 index= 394                                coll_han_allreduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET1 index= 395                               coll_han_allreduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.823 INFO             PET1 index= 396                                coll_han_allgather_up_module : up level module for allgather, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET1 index= 397                               coll_han_allgather_low_module : low level module for allgather, 0 tuned, 1 sm
20250509 201014.823 INFO             PET1 index= 398                                   coll_han_gather_up_module : up level module for gather, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET1 index= 399                                  coll_han_gather_low_module : low level module for gather, 0 tuned, 1 sm
20250509 201014.823 INFO             PET1 index= 400                                  coll_han_scatter_up_module : up level module for scatter, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET1 index= 401                                 coll_han_scatter_low_module : low level module for scatter, 0 tuned, 1 sm
20250509 201014.823 INFO             PET1 index= 402                                       coll_han_reproducible : whether we need reproducible results (enabling this disables optimisations using topology)0 disable 1 enable, default 0
20250509 201014.823 INFO             PET1 index= 403                            coll_han_use_allgather_algorithm : which han algorithm is used for allgather
20250509 201014.823 INFO             PET1 index= 404                            coll_han_use_allreduce_algorithm : which han algorithm is used for allreduce
20250509 201014.823 INFO             PET1 index= 405                              coll_han_use_barrier_algorithm : which han algorithm is used for barrier
20250509 201014.823 INFO             PET1 index= 406                                coll_han_use_bcast_algorithm : which han algorithm is used for bcast
20250509 201014.823 INFO             PET1 index= 407                               coll_han_use_gather_algorithm : which han algorithm is used for gather
20250509 201014.823 INFO             PET1 index= 408                               coll_han_use_reduce_algorithm : which han algorithm is used for reduce
20250509 201014.823 INFO             PET1 index= 409                              coll_han_use_scatter_algorithm : which han algorithm is used for scatter
20250509 201014.823 INFO             PET1 index= 410                               coll_han_use_simple_allgather : whether to enable simple algorithm for allgather. Prefer use_allgather_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET1 index= 411                               coll_han_use_simple_allreduce : whether to enable simple algorithm for allreduce. Prefer use_allreduce_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET1 index= 412                                   coll_han_use_simple_bcast : whether to enable simple algorithm for bcast. Prefer use_bcast_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET1 index= 413                                  coll_han_use_simple_gather : whether to enable simple algorithm for gather. Prefer use_gather_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET1 index= 414                                  coll_han_use_simple_reduce : whether to enable simple algorithm for reduce. Prefer use_reduce_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET1 index= 415                                 coll_han_use_simple_scatter : whether to enable simple algorithm for scatter. Prefer use_scatter_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET1 index= 416                coll_han_allgather_dynamic_intra_node_module : Collective module to use for allgather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 417                coll_han_allgather_dynamic_inter_node_module : Collective module to use for allgather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 418       coll_han_allgather_dynamic_global_communicator_module : Collective module to use for allgather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET1 index= 419               coll_han_allgatherv_dynamic_intra_node_module : Collective module to use for allgatherv on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 420               coll_han_allgatherv_dynamic_inter_node_module : Collective module to use for allgatherv on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 421      coll_han_allgatherv_dynamic_global_communicator_module : Collective module to use for allgatherv on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET1 index= 422                coll_han_allreduce_dynamic_intra_node_module : Collective module to use for allreduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 423                coll_han_allreduce_dynamic_inter_node_module : Collective module to use for allreduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 424       coll_han_allreduce_dynamic_global_communicator_module : Collective module to use for allreduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET1 index= 425                  coll_han_barrier_dynamic_intra_node_module : Collective module to use for barrier on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 426                  coll_han_barrier_dynamic_inter_node_module : Collective module to use for barrier on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 427         coll_han_barrier_dynamic_global_communicator_module : Collective module to use for barrier on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET1 index= 428                    coll_han_bcast_dynamic_intra_node_module : Collective module to use for bcast on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 429                    coll_han_bcast_dynamic_inter_node_module : Collective module to use for bcast on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 430           coll_han_bcast_dynamic_global_communicator_module : Collective module to use for bcast on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET1 index= 431                   coll_han_gather_dynamic_intra_node_module : Collective module to use for gather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 432                   coll_han_gather_dynamic_inter_node_module : Collective module to use for gather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 433          coll_han_gather_dynamic_global_communicator_module : Collective module to use for gather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET1 index= 434                   coll_han_reduce_dynamic_intra_node_module : Collective module to use for reduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET1 index= 435                   coll_han_reduce_dynamic_inter_node_module : Collective module to use for reduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET1 index= 436          coll_han_reduce_dynamic_global_communicator_module : Collective module to use for reduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET1 index= 437                  coll_han_scatter_dynamic_intra_node_module : Collective module to use for scatter on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET1 index= 438                  coll_han_scatter_dynamic_inter_node_module : Collective module to use for scatter on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET1 index= 439         coll_han_scatter_dynamic_global_communicator_module : Collective module to use for scatter on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET1 index= 440                             coll_han_use_dynamic_file_rules : Enable the dynamic selection provided via the dynamic_rules_filename MCA
20250509 201014.824 INFO             PET1 index= 441                             coll_han_dynamic_rules_filename : Configuration file containing the dynamic selection rules
20250509 201014.824 INFO             PET1 index= 442                                 coll_han_dump_dynamic_rules : Switch used to decide if we dump  dynamic rules provided by configuration file
20250509 201014.824 INFO             PET1 index= 443                                 coll_han_max_dynamic_errors : Number of dynamic rules module/function errors printed on rank 0 with a 0 verbosity.Useless if coll_base_verbose is 30 or more.
20250509 201014.824 INFO             PET1 index= 444                                      coll_han_major_version :
20250509 201014.824 INFO             PET1 index= 445                                      coll_han_minor_version :
20250509 201014.824 INFO             PET1 index= 446                                    coll_han_release_version :
20250509 201014.824 INFO             PET1 index= 447                                         coll_inter_priority : Priority of the inter coll component
20250509 201014.824 INFO             PET1 index= 448                                          coll_inter_verbose : Turn verbose message of the inter coll component on/off
20250509 201014.824 INFO             PET1 index= 449                                    coll_inter_major_version :
20250509 201014.824 INFO             PET1 index= 450                                    coll_inter_minor_version :
20250509 201014.824 INFO             PET1 index= 451                                  coll_inter_release_version :
20250509 201014.824 INFO             PET1 index= 452                                        coll_libnbc_priority : Priority of the libnbc coll component
20250509 201014.824 INFO             PET1 index= 453                         coll_libnbc_ibcast_skip_dt_decision : In ibcast only use size of communicator to choose algorithm, exclude data type signature. Set to 'false' to use data type signature in decision. WARNING: If you set this to 'false' then your application should not use non-uniform data type signatures in calls to ibcast.
20250509 201014.824 INFO             PET1 index= 454                            coll_libnbc_iallgather_algorithm : Which iallgather algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.824 INFO             PET1 index= 455                            coll_libnbc_iallreduce_algorithm : Which iallreduce algorithm is used: 0 ignore, 1 ring, 2 binomial, 3 rabenseifner, 4 recursive_doubling
20250509 201014.824 INFO             PET1 index= 456                                coll_libnbc_ibcast_algorithm : Which ibcast algorithm is used: 0 ignore, 1 linear, 2 binomial, 3 chain, 4 knomial
20250509 201014.824 INFO             PET1 index= 457                            coll_libnbc_ibcast_knomial_radix : k-nomial tree radix for the ibcast algorithm (radix > 1)
20250509 201014.824 INFO             PET1 index= 458                               coll_libnbc_iexscan_algorithm : Which iexscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.824 INFO             PET1 index= 459                               coll_libnbc_ireduce_algorithm : Which ireduce algorithm is used: 0 ignore, 1 chain, 2 binomial, 3 rabenseifner
20250509 201014.824 INFO             PET1 index= 460                                 coll_libnbc_iscan_algorithm : Which iscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.824 INFO             PET1 index= 461                                   coll_libnbc_major_version :
20250509 201014.824 INFO             PET1 index= 462                                   coll_libnbc_minor_version :
20250509 201014.824 INFO             PET1 index= 463                                 coll_libnbc_release_version :
20250509 201014.824 INFO             PET1 index= 464                                          coll_self_priority :
20250509 201014.824 INFO             PET1 index= 465                                     coll_self_major_version :
20250509 201014.824 INFO             PET1 index= 466                                     coll_self_minor_version :
20250509 201014.824 INFO             PET1 index= 467                                   coll_self_release_version :
20250509 201014.824 INFO             PET1 index= 468                                          coll_sync_priority : Priority of the sync coll component; only relevant if barrier_before or barrier_after is > 0
20250509 201014.824 INFO             PET1 index= 469                                    coll_sync_barrier_before : Do a synchronization before each Nth collective
20250509 201014.824 INFO             PET1 index= 470                                     coll_sync_barrier_after : Do a synchronization after each Nth collective
20250509 201014.824 INFO             PET1 index= 471                                     coll_sync_major_version :
20250509 201014.824 INFO             PET1 index= 472                                     coll_sync_minor_version :
20250509 201014.824 INFO             PET1 index= 473                                   coll_sync_release_version :
20250509 201014.824 INFO             PET1 index= 474                                         coll_tuned_priority : Priority of the tuned coll component
20250509 201014.824 INFO             PET1 index= 475                                 coll_tuned_init_tree_fanout : Initial fanout used in the tree topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.824 INFO             PET1 index= 476                                coll_tuned_init_chain_fanout : Initial fanout used in the chain (fanout followed by pipeline) topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.824 INFO             PET1 index= 477                               coll_tuned_alltoall_small_msg : threshold (if supported) to decide if small MSGs alltoall algorithm will be used
20250509 201014.824 INFO             PET1 index= 478                        coll_tuned_alltoall_intermediate_msg : threshold (if supported) to decide if intermediate MSGs alltoall algorithm will be used
20250509 201014.824 INFO             PET1 index= 479                                coll_tuned_use_dynamic_rules : Switch used to decide if we use static (compiled/if statements) or dynamic (built at runtime) decision function rules
20250509 201014.824 INFO             PET1 index= 480                           coll_tuned_dynamic_rules_filename : Filename of configuration file that contains the dynamic (@runtime) decision function rules
20250509 201014.825 INFO             PET1 index= 481                        coll_tuned_allreduce_algorithm_count : Number of allreduce algorithms available
20250509 201014.825 INFO             PET1 index= 482                              coll_tuned_allreduce_algorithm : Which allreduce algorithm is used. Can be locked down to any of: 0 ignore, 1 basic linear, 2 nonoverlapping (tuned reduce + tuned bcast), 3 recursive doubling, 4 ring, 5 segmented ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 483                  coll_tuned_allreduce_algorithm_segmentsize : Segment size in bytes used by default for allreduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET1 index= 484                  coll_tuned_allreduce_algorithm_tree_fanout : Fanout for n-tree used for allreduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET1 index= 485                 coll_tuned_allreduce_algorithm_chain_fanout : Fanout for chains used for allreduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET1 index= 486                         coll_tuned_alltoall_algorithm_count : Number of alltoall algorithms available
20250509 201014.825 INFO             PET1 index= 487                               coll_tuned_alltoall_algorithm : Which alltoall algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise, 3: modified bruck, 4: linear with sync, 5:two proc only. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 488                   coll_tuned_alltoall_algorithm_segmentsize : Segment size in bytes used by default for alltoall algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET1 index= 489                   coll_tuned_alltoall_algorithm_tree_fanout : Fanout for n-tree used for alltoall algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET1 index= 490                  coll_tuned_alltoall_algorithm_chain_fanout : Fanout for chains used for alltoall algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET1 index= 491                               coll_tuned_alltoall_large_msg : use pairwise exchange algorithm for messages larger than this value
20250509 201014.825 INFO             PET1 index= 492                               coll_tuned_alltoall_min_procs : use pairwise exchange algorithm for communicators larger than this value
20250509 201014.825 INFO             PET1 index= 493                  coll_tuned_alltoall_algorithm_max_requests : Maximum number of outstanding send or recv requests.  Only has meaning for synchronized algorithms.
20250509 201014.825 INFO             PET1 index= 494                        coll_tuned_allgather_algorithm_count : Number of allgather algorithms available
20250509 201014.825 INFO             PET1 index= 495                              coll_tuned_allgather_algorithm : Which allgather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 bruck, 3 recursive doubling, 4 ring, 5 neighbor exchange, 6: two proc only, 7: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 496                  coll_tuned_allgather_algorithm_segmentsize : Segment size in bytes used by default for allgather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET1 index= 497                  coll_tuned_allgather_algorithm_tree_fanout : Fanout for n-tree used for allgather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.825 INFO             PET1 index= 498                 coll_tuned_allgather_algorithm_chain_fanout : Fanout for chains used for allgather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET1 index= 499                       coll_tuned_allgatherv_algorithm_count : Number of allgatherv algorithms available
20250509 201014.825 INFO             PET1 index= 500                             coll_tuned_allgatherv_algorithm : Which allgatherv algorithm is used. Can be locked down to choice of: 0 ignore, 1 default (allgathervv + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5: two proc only, 6: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 501                 coll_tuned_allgatherv_algorithm_segmentsize : Segment size in bytes used by default for allgatherv algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET1 index= 502                 coll_tuned_allgatherv_algorithm_tree_fanout : Fanout for n-tree used for allgatherv algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.825 INFO             PET1 index= 503                coll_tuned_allgatherv_algorithm_chain_fanout : Fanout for chains used for allgatherv algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET1 index= 504                        coll_tuned_alltoallv_algorithm_count : Number of alltoallv algorithms available
20250509 201014.825 INFO             PET1 index= 505                              coll_tuned_alltoallv_algorithm : Which alltoallv algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 506                          coll_tuned_barrier_algorithm_count : Number of barrier algorithms available
20250509 201014.825 INFO             PET1 index= 507                                coll_tuned_barrier_algorithm : Which barrier algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 double ring, 3: recursive doubling 4: bruck, 5: two proc only, 6: tree. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 508                            coll_tuned_bcast_algorithm_count : Number of bcast algorithms available
20250509 201014.825 INFO             PET1 index= 509                                  coll_tuned_bcast_algorithm : Which bcast algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 chain, 3: pipeline, 4: split binary tree, 5: binary tree, 6: binomial tree, 7: knomial tree, 8: scatter_allgather, 9: scatter_allgather_ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 510                      coll_tuned_bcast_algorithm_segmentsize : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET1 index= 511                      coll_tuned_bcast_algorithm_tree_fanout : Fanout for n-tree used for bcast algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET1 index= 512                     coll_tuned_bcast_algorithm_chain_fanout : Fanout for chains used for bcast algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET1 index= 513                    coll_tuned_bcast_algorithm_knomial_radix : k-nomial tree radix for the bcast algorithm (radix > 1).
20250509 201014.825 INFO             PET1 index= 514                           coll_tuned_reduce_algorithm_count : Number of reduce algorithms available
20250509 201014.825 INFO             PET1 index= 515                                 coll_tuned_reduce_algorithm : Which reduce algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 chain, 3 pipeline, 4 binary, 5 binomial, 6 in-order binary, 7 rabenseifner. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET1 index= 516                     coll_tuned_reduce_algorithm_segmentsize : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET1 index= 517                     coll_tuned_reduce_algorithm_tree_fanout : Fanout for n-tree used for reduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET1 index= 518                    coll_tuned_reduce_algorithm_chain_fanout : Fanout for chains used for reduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET1 index= 519                    coll_tuned_reduce_algorithm_max_requests : Maximum number of outstanding send requests on leaf nodes. 0 means no limit.
20250509 201014.826 INFO             PET1 index= 520                   coll_tuned_reduce_scatter_algorithm_count : Number of reduce_scatter algorithms available
20250509 201014.826 INFO             PET1 index= 521                         coll_tuned_reduce_scatter_algorithm : Which reduce reduce_scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 non-overlapping (Reduce + Scatterv), 2 recursive halving, 3 ring, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET1 index= 522             coll_tuned_reduce_scatter_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET1 index= 523             coll_tuned_reduce_scatter_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET1 index= 524            coll_tuned_reduce_scatter_algorithm_chain_fanout : Fanout for chains used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET1 index= 525             coll_tuned_reduce_scatter_block_algorithm_count : Number of reduce_scatter_block algorithms available
20250509 201014.826 INFO             PET1 index= 526                   coll_tuned_reduce_scatter_block_algorithm : Which reduce reduce_scatter_block algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic_linear, 2 recursive_doubling, 3 recursive_halving, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET1 index= 527       coll_tuned_reduce_scatter_block_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET1 index= 528       coll_tuned_reduce_scatter_block_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET1 index= 529                           coll_tuned_gather_algorithm_count : Number of gather algorithms available
20250509 201014.826 INFO             PET1 index= 530                                 coll_tuned_gather_algorithm : Which gather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 linear with synchronization. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET1 index= 531                     coll_tuned_gather_algorithm_segmentsize : Segment size in bytes used by default for gather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.826 INFO             PET1 index= 532                     coll_tuned_gather_algorithm_tree_fanout : Fanout for n-tree used for gather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.826 INFO             PET1 index= 533                    coll_tuned_gather_algorithm_chain_fanout : Fanout for chains used for gather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.826 INFO             PET1 index= 534                          coll_tuned_scatter_algorithm_count : Number of scatter algorithms available
20250509 201014.826 INFO             PET1 index= 535                                coll_tuned_scatter_algorithm : Which scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 non-blocking linear. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET1 index= 536                    coll_tuned_scatter_algorithm_segmentsize : Segment size in bytes used by default for scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.827 INFO             PET1 index= 537                    coll_tuned_scatter_algorithm_tree_fanout : Fanout for n-tree used for scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.827 INFO             PET1 index= 538                   coll_tuned_scatter_algorithm_chain_fanout : Fanout for chains used for scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.827 INFO             PET1 index= 539                                coll_tuned_scatter_min_procs : use basic linear algorithm for communicators larger than this value
20250509 201014.827 INFO             PET1 index= 540                   coll_tuned_scatter_algorithm_max_requests : Issue a blocking send every this many non-blocking requests. Only has meaning for non-blocking linear algorithm.
20250509 201014.827 INFO             PET1 index= 541                         coll_tuned_scatter_intermediate_msg : use non-blocking linear algorithm for messages larger than this value
20250509 201014.827 INFO             PET1 index= 542                                coll_tuned_scatter_large_msg : use linear algorithm for messages larger than this value
20250509 201014.827 INFO             PET1 index= 543                           coll_tuned_exscan_algorithm_count : Number of exscan algorithms available
20250509 201014.827 INFO             PET1 index= 544                                 coll_tuned_exscan_algorithm : Which exscan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET1 index= 545                             coll_tuned_scan_algorithm_count : Number of scan algorithms available
20250509 201014.827 INFO             PET1 index= 546                                   coll_tuned_scan_algorithm : Which scan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET1 index= 547                                    coll_tuned_major_version :
20250509 201014.827 INFO             PET1 index= 548                                    coll_tuned_minor_version :
20250509 201014.827 INFO             PET1 index= 549                                  coll_tuned_release_version :
20250509 201014.827 INFO             PET1 index= 550                                       coll_ftagree_priority : Priority of the ftagree coll component
20250509 201014.827 INFO             PET1 index= 551                                      coll_ftagree_agreement : Agreement algorithm 0: Allreduce (NOT FAULT TOLERANT); 1: Early Returning Consensus (era); 2: Early Terminating Consensus (eta)
20250509 201014.827 INFO             PET1 index= 552                                   coll_ftagree_era_topology : ERA topology 1: binary tree; 2: star tree; 3: string tree
20250509 201014.827 INFO             PET1 index= 553                                    coll_ftagree_era_rebuild : ERA rebuild/rebalance the tree in a first post-failure agreement 0: no rebalancing; 1: rebalance all the time
20250509 201014.827 INFO             PET1 index= 554                                  coll_ftagree_major_version :
20250509 201014.827 INFO             PET1 index= 555                                  coll_ftagree_minor_version :
20250509 201014.827 INFO             PET1 index= 556                                coll_ftagree_release_version :
20250509 201014.827 INFO             PET1 index= 560                                            coll_sm_priority : Priority of the sm coll component
20250509 201014.827 INFO             PET1 index= 561                                        coll_sm_control_size : Length of the control data -- should usually be either the length of a cache line on most SMPs, or the size of a page on machines that support direct memory affinity page placement (in bytes)
20250509 201014.827 INFO             PET1 index= 562                                       coll_sm_fragment_size : Fragment size (in bytes) used for passing data through shared memory (will be rounded up to the nearest control_size size)
20250509 201014.827 INFO             PET1 index= 563                                   coll_sm_comm_in_use_flags : Number of "in use" flags, used to mark a message passing area segment as currently being used or not (must be >= 2 and <= comm_num_segments)
20250509 201014.827 INFO             PET1 index= 564                                   coll_sm_comm_num_segments : Number of segments in each communicator's shared memory message passing area (must be >= 2, and must be a multiple of comm_in_use_flags)
20250509 201014.827 INFO             PET1 index= 565                                         coll_sm_tree_degree : Degree of the tree for tree-based operations (must be => 1 and <= min(control_size, 255))
20250509 201014.827 INFO             PET1 index= 566                                      coll_sm_info_num_procs : Number of processes to use for the calculation of the shared_mem_size MCA information parameter (must be => 2)
20250509 201014.827 INFO             PET1 index= 567                                coll_sm_shared_mem_used_data : Amount of shared memory used, per communicator, in the shared memory data area for info_num_procs processes (in bytes)
20250509 201014.827 INFO             PET1 index= 568                                       coll_sm_major_version :
20250509 201014.827 INFO             PET1 index= 569                                       coll_sm_minor_version :
20250509 201014.827 INFO             PET1 index= 570                                     coll_sm_release_version :
20250509 201014.827 INFO             PET1 index= 571                                                         osc : Default selection set of components for the osc framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET1 index= 572                                            osc_base_verbose : Verbosity level for the osc framework (default: 0)
20250509 201014.827 INFO             PET1 index= 573                                    osc_sm_backing_directory : Directory to place backing files for shared memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.827 INFO             PET1 index= 574                                             osc_sm_priority : Priority of the osc/sm component (default: 100)
20250509 201014.827 INFO             PET1 index= 575                                        osc_sm_major_version :
20250509 201014.827 INFO             PET1 index= 576                                        osc_sm_minor_version :
20250509 201014.827 INFO             PET1 index= 577                                      osc_sm_release_version :
20250509 201014.827 INFO             PET1 index= 581                                           osc_rdma_no_locks : Enable optimizations available only if MPI_LOCK is not used. Info key of same name overrides this value (default: false)
20250509 201014.827 INFO             PET1 index= 582                               osc_rdma_acc_single_intrinsic : Enable optimizations for MPI_Fetch_and_op, MPI_Accumulate, etc for codes that will not use anything more than a single predefined datatype (default: false)
20250509 201014.827 INFO             PET1 index= 583                                        osc_rdma_acc_use_amo : Enable the use of network atomic memory operations when using single intrinsic optimizations. If not set network compare-and-swap will be used instead (default: true)
20250509 201014.827 INFO             PET1 index= 584                                        osc_rdma_buffer_size : Size of temporary buffers (default: 32768)
20250509 201014.828 INFO             PET1 index= 585                                         osc_rdma_max_attach : Maximum number of buffers that can be attached to a dynamic window. Keep in mind that each attached buffer will use a potentially limited resource (default: 64)
20250509 201014.828 INFO             PET1 index= 586                                           osc_rdma_priority : Priority of the osc/rdma component (default: 20)
20250509 201014.828 INFO             PET1 index= 587                                       osc_rdma_locking_mode : Locking mode to use for passive-target synchronization (default: two_level)
20250509 201014.828 INFO             PET1 index= 588                                               osc_rdma_btls : Comma-delimited list of BTL component names to allow without verifying connectivity. Do not add a BTL to to this list unless it can reach all processes in any communicator used with an MPI window (default: ugni,uct,ofi)
20250509 201014.828 INFO             PET1 index= 589                                  osc_rdma_backing_directory : Directory to place backing files for memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.828 INFO             PET1 index= 590                                    osc_rdma_network_max_amo : Maximum predefined datatype count for which network atomic operations will be used. Accumulate operations larger than this count will use a get/op/put protocol. The optimal value is dictated by the network injection rate for the interconnect. Generally a smaller number will yield better larger accumulate performance. (default: 32)
20250509 201014.828 INFO             PET1 index= 591                           osc_rdma_minimum_memory_alignment : The minimum memory alignment used to allocate local window memory (default: 16384). This is a best effort approach. Alignments larger than the page size may not be supported.
20250509 201014.828 INFO             PET1 index= 592                                      osc_rdma_major_version :
20250509 201014.828 INFO             PET1 index= 593                                      osc_rdma_minor_version :
20250509 201014.828 INFO             PET1 index= 594                                    osc_rdma_release_version :
20250509 201014.828 INFO             PET1 index= 595                                       btl_tcp_bandwidth_en0 :
20250509 201014.828 INFO             PET1 index= 596                                         btl_tcp_latency_en0 :
20250509 201014.828 INFO             PET1 index= 597                                     btl_tcp_bandwidth_en0:0 :
20250509 201014.828 INFO             PET1 index= 598                                       btl_tcp_latency_en0:0 :
20250509 201014.828 INFO             PET1 index= 599                                                        part : Default selection set of components for the part framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET1 index= 600                                           part_base_verbose : Verbosity level for the part framework (default: 0)
20250509 201014.828 INFO             PET1 index= 601                                  part_persist_free_list_num : Initial size of request free lists
20250509 201014.828 INFO             PET1 index= 602                                  part_persist_free_list_max : Maximum size of request free lists
20250509 201014.828 INFO             PET1 index= 603                                  part_persist_free_list_inc : Number of elements to add when growing request free lists
20250509 201014.828 INFO             PET1 index= 604                                  part_persist_major_version :
20250509 201014.828 INFO             PET1 index= 605                                  part_persist_minor_version :
20250509 201014.828 INFO             PET1 index= 606                                part_persist_release_version :
20250509 201014.828 INFO             PET1 index= 607                                                      memory : Default selection set of components for the memory framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET1 index= 608                                         memory_base_verbose : Verbosity level for the memory framework (default: 0)
20250509 201014.828 INFO             PET1 index= 609                                                     patcher : Default selection set of components for the patcher framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET1 index= 610                                        patcher_base_verbose : Verbosity level for the patcher framework (default: 0)
20250509 201014.828 INFO             PET1 index= 611                                  patcher_overwrite_priority : Priority of the overwrite binary patcher component
20250509 201014.828 INFO             PET1 index= 612                             patcher_overwrite_major_version :
20250509 201014.828 INFO             PET1 index= 613                             patcher_overwrite_minor_version :
20250509 201014.828 INFO             PET1 index= 614                           patcher_overwrite_release_version :
20250509 201014.828 INFO             PET1 index= 615                                                        fbtl : Default selection set of components for the fbtl framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET1 index= 616                                           fbtl_base_verbose : Verbosity level for the fbtl framework (default: 0)
20250509 201014.828 INFO             PET1 index= 617                                         fbtl_posix_priority : Priority of the fbtl posix component
20250509 201014.828 INFO             PET1 index= 618                                   fbtl_posix_max_block_size : Maximum average size in bytes of a data block in an iovec for data sieving. An average block size larger than this parameter will disable data sieving. Default: 1048576 bytes.
20250509 201014.828 INFO             PET1 index= 619                                     fbtl_posix_max_gap_size : Maximum average gap size between two blocks in an iovec for data sieving. An average gap size larger than this parameter will disable data sieving. Default: 4096 bytes.
20250509 201014.828 INFO             PET1 index= 620                                  fbtl_posix_max_tmpbuf_size : Maximum size of the temporary buffer used for data sieving in bytes. Default: 67108864 (64MB).
20250509 201014.828 INFO             PET1 index= 621                                 fbtl_posix_read_datasieving : Parameter indicating whether to perform data sieving for read operations. Default: true.
20250509 201014.828 INFO             PET1 index= 622                                fbtl_posix_write_datasieving : Parameter indicating whether to perform data sieving for write operations. Default: true.
20250509 201014.828 INFO             PET1 index= 623                                    fbtl_posix_major_version :
20250509 201014.828 INFO             PET1 index= 624                                    fbtl_posix_minor_version :
20250509 201014.828 INFO             PET1 index= 625                                  fbtl_posix_release_version :
20250509 201014.828 INFO             PET1 index= 626                                                       fcoll : Default selection set of components for the fcoll framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET1 index= 627                                          fcoll_base_verbose : Verbosity level for the fcoll framework (default: 0)
20250509 201014.828 INFO             PET1 index= 628                                      fcoll_dynamic_priority : Priority of the dynamic fcoll component
20250509 201014.828 INFO             PET1 index= 629                                 fcoll_dynamic_major_version :
20250509 201014.828 INFO             PET1 index= 630                                 fcoll_dynamic_minor_version :
20250509 201014.828 INFO             PET1 index= 631                               fcoll_dynamic_release_version :
20250509 201014.828 INFO             PET1 index= 632                                 fcoll_dynamic_gen2_priority : Priority of the dynamic_gen2 fcoll component
20250509 201014.828 INFO             PET1 index= 633                               fcoll_dynamic_gen2_num_groups : Number of subgroups created by the dynamic_gen2 component
20250509 201014.828 INFO             PET1 index= 634                            fcoll_dynamic_gen2_major_version :
20250509 201014.828 INFO             PET1 index= 635                            fcoll_dynamic_gen2_minor_version :
20250509 201014.828 INFO             PET1 index= 636                          fcoll_dynamic_gen2_release_version :
20250509 201014.829 INFO             PET1 index= 637                                   fcoll_individual_priority : Priority of the individual fcoll component
20250509 201014.829 INFO             PET1 index= 638                              fcoll_individual_major_version :
20250509 201014.829 INFO             PET1 index= 639                              fcoll_individual_minor_version :
20250509 201014.829 INFO             PET1 index= 640                            fcoll_individual_release_version :
20250509 201014.829 INFO             PET1 index= 641                                       fcoll_vulcan_priority : Priority of the vulcan fcoll component
20250509 201014.829 INFO             PET1 index= 642                                     fcoll_vulcan_num_groups : Number of subgroups created by the vulcan component
20250509 201014.829 INFO             PET1 index= 643                                fcoll_vulcan_write_chunksize : Chunk size written at once. Default: stripe_size of the file system
20250509 201014.829 INFO             PET1 index= 644                                       fcoll_vulcan_async_io : Asynchronous I/O support options. 0: Automatic choice (default) 1: Asynchronous I/O only. 2: Synchronous I/O only.
20250509 201014.829 INFO             PET1 index= 645                                  fcoll_vulcan_major_version :
20250509 201014.829 INFO             PET1 index= 646                                  fcoll_vulcan_minor_version :
20250509 201014.829 INFO             PET1 index= 647                                fcoll_vulcan_release_version :
20250509 201014.829 INFO             PET1 index= 648                                                          fs : Default selection set of components for the fs framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET1 index= 649                                             fs_base_verbose : Verbosity level for the fs framework (default: 0)
20250509 201014.829 INFO             PET1 index= 650                                             fs_ufs_priority : Priority of the fs ufs component
20250509 201014.829 INFO             PET1 index= 651                                       fs_ufs_lock_algorithm : Locking algorithm used by the fs ufs component.  0: auto (default), 1: skip locking, 2: always lock entire file, 3: lock only specific ranges
20250509 201014.829 INFO             PET1 index= 652                                        fs_ufs_major_version :
20250509 201014.829 INFO             PET1 index= 653                                        fs_ufs_minor_version :
20250509 201014.829 INFO             PET1 index= 654                                      fs_ufs_release_version :
20250509 201014.829 INFO             PET1 index= 655                                                          io : Default selection set of components for the io framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET1 index= 656                                             io_base_verbose : Verbosity level for the io framework (default: 0)
20250509 201014.829 INFO             PET1 index= 657                                           io_ompio_priority : Priority of the io ompio component
20250509 201014.829 INFO             PET1 index= 658                                    io_ompio_delete_priority : Delete priority of the io ompio component
20250509 201014.829 INFO             PET1 index= 659                            io_ompio_record_file_offset_info : The information of the file offset/length
20250509 201014.829 INFO             PET1 index= 660                                   io_ompio_coll_timing_info : Enable collective algorithm timing information
20250509 201014.829 INFO             PET1 index= 661                                  io_ompio_cycle_buffer_size : Data size issued by individual reads/writes per call
20250509 201014.829 INFO             PET1 index= 662                               io_ompio_pipeline_buffer_size : Size of temporary buffer used by individual reads/writes in the pipeline protocol
20250509 201014.829 INFO             PET1 index= 663                                      io_ompio_bytes_per_agg : Size of temporary buffer for collective I/O operations
20250509 201014.829 INFO             PET1 index= 664                                    io_ompio_num_aggregators : number of aggregators for collective I/O operations
20250509 201014.829 INFO             PET1 index= 665                                    io_ompio_grouping_option : Option for grouping of processes in the aggregator selection 1: Data volume based grouping 2: maximizing group size uniformity 3: maximimze data contiguity 4: hybrid optimization  5: simple (default) 6: skip refinement step 7: simple+: grouping based on default file view
20250509 201014.829 INFO             PET1 index= 666                              io_ompio_max_aggregators_ratio : Maximum number of processes that can be an aggregator expressed as the ratio to the number of process used to open the file i.e 1 out of n processes can be an aggregator, with n being specified by this mca parameter.
20250509 201014.829 INFO             PET1 index= 667                       io_ompio_aggregators_cutoff_threshold : Relative cutoff threshold for incrementing the number of aggregators in the simple aggregator selection algorithm (5). Lower value for this parameter will lead to higher no. of aggregators.
20250509 201014.829 INFO             PET1 index= 668                                    io_ompio_overwrite_amode : Overwrite WRONLY amode to RDWR to enable data sieving 1: allow overwrite (default) 0: do not overwrite amode provided by application
20250509 201014.829 INFO             PET1 index= 669                               io_ompio_verbose_info_parsing : Provide visual output when parsing info objects 0: no verbose output (default) 1: verbose output by rank 0 2: verbose output by all ranks
20250509 201014.829 INFO             PET1 index= 670                                      io_ompio_major_version :
20250509 201014.829 INFO             PET1 index= 671                                      io_ompio_minor_version :
20250509 201014.829 INFO             PET1 index= 672                                    io_ompio_release_version :
20250509 201014.829 INFO             PET1 index= 673                                        io_romio341_priority : Priority of the io romio component
20250509 201014.829 INFO             PET1 index= 674                                 io_romio341_delete_priority : Delete priority of the io romio component
20250509 201014.829 INFO             PET1 index= 675                                         io_romio341_version : Version of ROMIO
20250509 201014.829 INFO             PET1 index= 676                           io_romio341_user_configure_params : User-specified command line parameters passed to ROMIO's configure script
20250509 201014.829 INFO             PET1 index= 677                       io_romio341_complete_configure_params : Complete set of command line parameters passed to ROMIO's configure script
20250509 201014.829 INFO             PET1 index= 678                                   io_romio341_major_version :
20250509 201014.829 INFO             PET1 index= 679                                   io_romio341_minor_version :
20250509 201014.829 INFO             PET1 index= 680                                 io_romio341_release_version :
20250509 201014.829 INFO             PET1 index= 681                                                    sharedfp : Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET1 index= 682                                       sharedfp_base_verbose : Verbosity level for the sharedfp framework (default: 0)
20250509 201014.829 INFO             PET1 index= 683                                sharedfp_individual_priority : Priority of the individual sharedfp component
20250509 201014.829 INFO             PET1 index= 684                                 sharedfp_individual_verbose : Verbosity of the individual sharedfp component
20250509 201014.829 INFO             PET1 index= 685                           sharedfp_individual_major_version :
20250509 201014.829 INFO             PET1 index= 686                           sharedfp_individual_minor_version :
20250509 201014.829 INFO             PET1 index= 687                         sharedfp_individual_release_version :
20250509 201014.830 INFO             PET1 index= 688                                sharedfp_lockedfile_priority : Priority of the lockedfile sharedfp component
20250509 201014.830 INFO             PET1 index= 689                                 sharedfp_lockedfile_verbose : Verbosity of the lockedfile sharedfp component
20250509 201014.830 INFO             PET1 index= 690                           sharedfp_lockedfile_major_version :
20250509 201014.830 INFO             PET1 index= 691                           sharedfp_lockedfile_minor_version :
20250509 201014.830 INFO             PET1 index= 692                         sharedfp_lockedfile_release_version :
20250509 201014.830 INFO             PET1 index= 693                                        sharedfp_sm_priority : Priority of the sm sharedfp component
20250509 201014.830 INFO             PET1 index= 694                                         sharedfp_sm_verbose : Verbosity of the sm sharedfp component
20250509 201014.830 INFO             PET1 index= 695                                   sharedfp_sm_major_version :
20250509 201014.830 INFO             PET1 index= 696                                   sharedfp_sm_minor_version :
20250509 201014.830 INFO             PET1 index= 697                                 sharedfp_sm_release_version :
20250509 201014.830 INFO             PET1 index= 698                                                        topo : Default selection set of components for the topo framework (<none> means use all components that can be found)
20250509 201014.830 INFO             PET1 index= 699                                           topo_base_verbose : Verbosity level for the topo framework (default: 0)
20250509 201014.830 INFO             PET1 index= 700                                    topo_basic_major_version :
20250509 201014.830 INFO             PET1 index= 701                                    topo_basic_minor_version :
20250509 201014.830 INFO             PET1 index= 702                                  topo_basic_release_version :
20250509 201014.830 INFO             PET1 index= 703                                 topo_treematch_reorder_mode : If set the reordering will be done in a partially distributed way (default=0). If partially-distributed only local knowledge will be used, possibly leading to less accurate reordering.
20250509 201014.830 INFO             PET1 index= 704                                topo_treematch_major_version :
20250509 201014.830 INFO             PET1 index= 705                                topo_treematch_minor_version :
20250509 201014.830 INFO             PET1 index= 706                              topo_treematch_release_version :
20250509 201014.830 INFO             PET1 --- VMK::logSystem() end ---------------------------------
20250509 201014.830 INFO             PET1 main: --- VMK::log() start -------------------------------------
20250509 201014.830 INFO             PET1 main: vm located at: 0x15bf04b80
20250509 201014.830 INFO             PET1 main: mpionly=1 threadsflag=0
20250509 201014.830 INFO             PET1 main: ssiCount=1 localSsi=0
20250509 201014.830 INFO             PET1 main: devCount=0 ssiLocalDevCount=0
20250509 201014.830 INFO             PET1 main: petCount=6 ssiLocalPetCount=6
20250509 201014.830 INFO             PET1 main: localPet=1 mypthid=0x202a94f40 ssiLocalPet=1 currentSsiPe=-1
20250509 201014.830 INFO             PET1 main: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.830 INFO             PET1 main: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.830 INFO             PET1 main:  PE=0 SSI=0 SSIPE=0
20250509 201014.830 INFO             PET1 main: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.830 INFO             PET1 main:  PE=1 SSI=0 SSIPE=1
20250509 201014.830 INFO             PET1 main: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.830 INFO             PET1 main:  PE=2 SSI=0 SSIPE=2
20250509 201014.830 INFO             PET1 main: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.830 INFO             PET1 main:  PE=3 SSI=0 SSIPE=3
20250509 201014.830 INFO             PET1 main: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.830 INFO             PET1 main:  PE=4 SSI=0 SSIPE=4
20250509 201014.830 INFO             PET1 main: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.830 INFO             PET1 main:  PE=5 SSI=0 SSIPE=5
20250509 201014.830 INFO             PET1 main: --- VMK::log() end ---------------------------------------
20250509 201014.831 INFO             PET1 Executing 'userm1_setvm'
20250509 201014.831 INFO             PET1 Executing 'userm1_register'
20250509 201014.831 INFO             PET1 Executing 'userm2_setvm'
20250509 201014.831 DEBUG            PET1 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.831 DEBUG            PET1 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.832 INFO             PET1 model1: --- VMK::log() start -------------------------------------
20250509 201014.832 INFO             PET1 model1: vm located at: 0x14c006eb0
20250509 201014.832 INFO             PET1 model1: mpionly=1 threadsflag=0
20250509 201014.832 INFO             PET1 model1: ssiCount=1 localSsi=0
20250509 201014.832 INFO             PET1 model1: devCount=0 ssiLocalDevCount=0
20250509 201014.832 INFO             PET1 model1: petCount=6 ssiLocalPetCount=6
20250509 201014.832 INFO             PET1 model1: localPet=1 mypthid=0x202a94f40 ssiLocalPet=1 currentSsiPe=-1
20250509 201014.832 INFO             PET1 model1: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.832 INFO             PET1 model1: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.832 INFO             PET1 model1:  PE=0 SSI=0 SSIPE=0
20250509 201014.832 INFO             PET1 model1: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.832 INFO             PET1 model1:  PE=1 SSI=0 SSIPE=1
20250509 201014.832 INFO             PET1 model1: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.832 INFO             PET1 model1:  PE=2 SSI=0 SSIPE=2
20250509 201014.832 INFO             PET1 model1: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.832 INFO             PET1 model1:  PE=3 SSI=0 SSIPE=3
20250509 201014.832 INFO             PET1 model1: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.832 INFO             PET1 model1:  PE=4 SSI=0 SSIPE=4
20250509 201014.832 INFO             PET1 model1: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.832 INFO             PET1 model1:  PE=5 SSI=0 SSIPE=5
20250509 201014.832 INFO             PET1 model1: --- VMK::log() end ---------------------------------------
20250509 201014.837 INFO             PET1 Entering 'user1_run'
20250509 201014.837 INFO             PET1  user1_run: on SSIPE:           -1  Filling data lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201017.614 INFO             PET1  user1_run: on SSIPE:           -1  Filling data lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201019.433 INFO             PET1  user1_run: on SSIPE:           -1  Filling data lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201021.789 INFO             PET1  user1_run: on SSIPE:           -1  Filling data lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201023.951 INFO             PET1  user1_run: on SSIPE:           -1  Filling data lbound:        1668           1           1  ubound:        3334        1200          10
20250509 201026.391 INFO             PET1 Exiting 'user1_run'
20250509 201046.306 INFO             PET1  NUMBER_OF_PROCESSORS           6
20250509 201046.307 INFO             PET1  PASS  System Test ESMF_FieldSharedDeSSISTest, ESMF_FieldSharedDeSSISTest.F90, line 276
20250509 201046.307 INFO             PET1  Finalizing ESMF
20250509 201014.760 INFO             PET2 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.780 INFO             PET2 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250509 201014.780 INFO             PET2 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250509 201014.780 INFO             PET2 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250509 201014.780 INFO             PET2 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250509 201014.780 INFO             PET2 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.780 INFO             PET2 Running with ESMF Version   : v8.9.0b08-9-gea72ab2180
20250509 201014.780 INFO             PET2 ESMF library build date/time: "May  9 2025" "19:17:42"
20250509 201014.780 INFO             PET2 ESMF library build location : /Users/sacks/projects/scratch/esmf-testing/gfortranclang_12.2.0_14.0.0_openmpi_g_develop/esmf
20250509 201014.780 INFO             PET2 ESMF_COMM                   : openmpi
20250509 201014.780 INFO             PET2 ESMF_MOAB                   : enabled
20250509 201014.780 INFO             PET2 ESMF_LAPACK                 : enabled
20250509 201014.780 INFO             PET2 ESMF_NETCDF                 : enabled
20250509 201014.780 INFO             PET2 ESMF_PNETCDF                : disabled
20250509 201014.780 INFO             PET2 ESMF_PIO                    : enabled
20250509 201014.780 INFO             PET2 ESMF_YAMLCPP                : enabled
20250509 201014.798 INFO             PET2 --- VMK::logSystem() start -------------------------------
20250509 201014.798 INFO             PET2 esmfComm=openmpi
20250509 201014.798 INFO             PET2 isPthreadsEnabled=1
20250509 201014.798 INFO             PET2 isOpenMPEnabled=0
20250509 201014.798 INFO             PET2 isOpenACCEnabled=0
20250509 201014.798 INFO             PET2 isSsiSharedMemoryEnabled=1
20250509 201014.798 INFO             PET2 isNvmlEnabled=0
20250509 201014.799 INFO             PET2 isNumaEnabled=0
20250509 201014.799 INFO             PET2 ssiCount=1 peCount=6
20250509 201014.799 INFO             PET2 PE=0 SSI=0 SSIPE=0
20250509 201014.799 INFO             PET2 PE=1 SSI=0 SSIPE=1
20250509 201014.799 INFO             PET2 PE=2 SSI=0 SSIPE=2
20250509 201014.799 INFO             PET2 PE=3 SSI=0 SSIPE=3
20250509 201014.799 INFO             PET2 PE=4 SSI=0 SSIPE=4
20250509 201014.799 INFO             PET2 PE=5 SSI=0 SSIPE=5
20250509 201014.799 INFO             PET2 ndevs=0 ndevsSSI=0
20250509 201014.799 INFO             PET2 
20250509 201014.799 INFO             PET2 --- VMK::logSystem() MPI Layer ---------------------------
20250509 201014.799 INFO             PET2 MPI_VERSION=3
20250509 201014.799 INFO             PET2 MPI_SUBVERSION=1
20250509 201014.799 INFO             PET2 mpi_t_okay=1
20250509 201014.802 INFO             PET2 --- VMK::logSystem() MPI Tool Interface Control Vars ---
20250509 201014.802 INFO             PET2 index=   0                                         base_help_aggregate : If opal_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message. Default: true.
20250509 201014.802 INFO             PET2 index=   1                                        mca_base_param_files : Path for MCA configuration files containing variable values
20250509 201014.803 INFO             PET2 index=   2                                             mca_param_files : Path for MCA configuration files containing variable values
20250509 201014.803 INFO             PET2 index=   3                                mca_base_override_param_file : Variables set in this file will override any value set inthe environment or another configuration file
20250509 201014.803 INFO             PET2 index=   4                          mca_base_suppress_override_warning : Suppress warnings when attempting to set an overridden value (default: false)
20250509 201014.803 INFO             PET2 index=   5                                  mca_base_param_file_prefix : Aggregate MCA parameter file sets
20250509 201014.803 INFO             PET2 index=   6                                  mca_base_envar_file_prefix : Aggregate MCA parameter file set for env variables
20250509 201014.807 INFO             PET2 index=   7                                    mca_base_param_file_path : Aggregate MCA parameter Search path
20250509 201014.807 INFO             PET2 index=   8                              mca_base_param_file_path_force : Forced Aggregate MCA parameter Search path
20250509 201014.807 INFO             PET2 index=   9                                                 opal_signal : Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
20250509 201014.807 INFO             PET2 index=  10                                      opal_stacktrace_output : Specifies where the stack trace output stream goes.  Accepts one of the following: none (disabled), stderr (default), stdout, file[:filename].   If 'filename' is not specified, a default filename of 'stacktrace' is used.  The 'filename' is appended with either '.PID' or '.RANK.PID', if RANK is available.  The 'filename' can be an absolute path or a relative path to the current working directory.
20250509 201014.807 INFO             PET2 index=  11                                       opal_net_private_ipv4 : Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
20250509 201014.807 INFO             PET2 index=  12                                     opal_set_max_sys_limits : Set the specified system-imposed limits to the specified value, including "unlimited".Supported params: core, filesize, maxmem, openfiles, stacksize, maxchildren
20250509 201014.807 INFO             PET2 index=  13                                         opal_var_dump_color : The colors to use when dumping MCA vars with color (e.g. ompi_info). The format is a comma-delimited key=value list, where the key is the attribute whose color to adjust, and the value is the ANSI color code (see the ANSI X3.64 CSI SGR sequence). Available keys: name,value,valid_values.
20250509 201014.807 INFO             PET2 index=  14                                opal_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.807 INFO             PET2 index=  15                                           opal_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.807 INFO             PET2 index=  16                                opal_warn_on_missing_libcuda : Whether to print a message when CUDA support is enabled but libcuda is not found
20250509 201014.807 INFO             PET2 index=  17                                            mpi_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.807 INFO             PET2 index=  18                                           opal_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.807 INFO             PET2 index=  19                                   mpi_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.807 INFO             PET2 index=  20                                  opal_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.807 INFO             PET2 index=  21                                            mpi_warn_on_fork : If nonzero, issue a warning if program forks under conditions that could cause system errors
20250509 201014.807 INFO             PET2 index=  22                                            opal_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.807 INFO             PET2 index=  23                                      opal_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.807 INFO             PET2 index=  24                                           mca_base_env_list : Set SHELL env variables
20250509 201014.807 INFO             PET2 index=  25                                 mca_base_env_list_delimiter : Set SHELL env variables delimiter. Default: semicolon ';'
20250509 201014.807 INFO             PET2 index=  26                                  mca_base_env_list_internal : Store SHELL env variables from amca conf file
20250509 201014.807 INFO             PET2 index=  27                                 opal_max_thread_in_progress : Number of thread allowed in opal_progress. Default: 1
20250509 201014.807 INFO             PET2 index=  28                                     mca_base_component_path : Path where to look for additional components
20250509 201014.807 INFO             PET2 index=  29                                          mca_component_path : Path where to look for additional components
20250509 201014.807 INFO             PET2 index=  30                         mca_base_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.807 INFO             PET2 index=  31                              mca_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.807 INFO             PET2 index=  32                        mca_base_component_track_load_errors : Whether to track errors for components that failed to load or not
20250509 201014.808 INFO             PET2 index=  33                           mca_base_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.809 INFO             PET2 index=  34                                mca_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.809 INFO             PET2 index=  35                                            mca_base_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.810 INFO             PET2 index=  36                                                 mca_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.810 INFO             PET2 index=  37                                                          dl : Default selection set of components for the dl framework (<none> means use all components that can be found)
20250509 201014.810 INFO             PET2 index=  38                                             dl_base_verbose : Verbosity level for the dl framework (default: 0)
20250509 201014.810 INFO             PET2 index=  39                                 dl_dlopen_filename_suffixes : Comma-delimited list of filename suffixes that the dlopen component will try
20250509 201014.810 INFO             PET2 index=  40                                     dl_dlopen_major_version :
20250509 201014.810 INFO             PET2 index=  41                                     dl_dlopen_minor_version :
20250509 201014.810 INFO             PET2 index=  42                                   dl_dlopen_release_version :
20250509 201014.811 INFO             PET2 index=  43                                               mpi_ft_enable : Enable UFLM MPI Fault Tolerance framework
20250509 201014.811 INFO             PET2 index=  44                                              mpi_ft_verbose : Verbosity level of the ULFM MPI Fault Tolerance framework
20250509 201014.811 INFO             PET2 index=  45                                       mpi_ft_reliable_bcast : Reliable Broadcast algorithm (1: Binomial Graph Diffusion; 2: N^2 full graph diffusion)
20250509 201014.811 INFO             PET2 index=  46                               mpi_ft_propagator_with_rbcast : Use the OMPI reliable broadcast failure propagator, or disable it and use only RTE propagation (slower)
20250509 201014.811 INFO             PET2 index=  47                                             mpi_ft_detector : Use the OMPI heartbeat based failure detector, or disable it and use only RTE and in-band detection (slower)
20250509 201014.811 INFO             PET2 index=  48                                      mpi_ft_detector_thread : Delegate failure detector to a separate thread
20250509 201014.811 INFO             PET2 index=  49                                      mpi_ft_detector_period : Period of heartbeat emission (s)
20250509 201014.811 INFO             PET2 index=  50                                     mpi_ft_detector_timeout : Timeout before we start suspecting a process after the last heartbeat reception (must be larger than 3*ompi_mpi_ft_detector_period)
20250509 201014.811 INFO             PET2 index=  51                              mpi_ft_detector_rdma_heartbeat : Use rdma put to deposit heartbeats into the observer memory
20250509 201014.811 INFO             PET2 index=  52                                             mpi_param_check : Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
20250509 201014.811 INFO             PET2 index=  53                                         mpi_yield_when_idle : Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
20250509 201014.814 INFO             PET2 index=  54                                         mpi_event_tick_rate : How often to progress TCP communications (0 = never, otherwise specified in microseconds)
20250509 201014.814 INFO             PET2 index=  55                                       mpi_show_handle_leaks : Whether MPI_FINALIZE shows all MPI handles that were not freed or not
20250509 201014.814 INFO             PET2 index=  56                                         mpi_no_free_handles : Whether to actually free MPI objects when their handles are freed
20250509 201014.814 INFO             PET2 index=  57                                mpi_show_mpi_alloc_mem_leaks : If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
20250509 201014.814 INFO             PET2 index=  58                                         mpi_show_mca_params : Whether to show all MCA parameter values during MPI_INIT or not (good for reproducibility of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
20250509 201014.814 INFO             PET2 index=  59                                    mpi_show_mca_params_file : If mpi_show_mca_params is true, setting this string to a valid filename tells 5.0.7 to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducibility of MPI jobs)
20250509 201014.814 INFO             PET2 index=  60                                          mpi_preconnect_mpi : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.814 INFO             PET2 index=  61                                          mpi_preconnect_all : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.815 INFO             PET2 index=  62                               mpi_have_sparse_group_storage : Whether this 5.0.7 installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
20250509 201014.815 INFO             PET2 index=  63                                mpi_use_sparse_group_storage : Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
20250509 201014.815 INFO             PET2 index=  64                                            mpi_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.815 INFO             PET2 index=  65                                 mpi_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.815 INFO             PET2 index=  66                                        mpi_add_procs_cutoff : Maximum world size for pre-allocating resources for all remote processes. Increasing this limit may improve communication performance at the cost of memory usage
20250509 201014.815 INFO             PET2 index=  67                                        mpi_dynamics_enabled : Is the MPI dynamic process functionality enabled (e.g., MPI_COMM_SPAWN)?  Default is yes, but certain transports and/or environments may disable it.
20250509 201014.815 INFO             PET2 index=  68                                              async_mpi_init : Do not perform a barrier at the end of MPI_Init
20250509 201014.815 INFO             PET2 index=  69                                          async_mpi_finalize : Do not perform a barrier at the beginning of MPI_Finalize
20250509 201014.815 INFO             PET2 index=  70                                             mpi_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.815 INFO             PET2 index=  71                                       mpi_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.815 INFO             PET2 index=  72                                             mpi_compat_mpi3 : A boolean value for whether Open MPI operates in MPI-3 compatibility mode; this changes the following behavior: in operations without a handle, errors are raised on (true) MPI_COMM_WORLD (MPI-3 behavior) or (false) MPI_COMM_SELF (MPI-4 behavior).
20250509 201014.815 INFO             PET2 index=  73                                    mpi_pmix_connect_timeout : Timeout(secs) for calls to PMIx_Connect. Default is no timeout.
20250509 201014.815 INFO             PET2 index=  74                                                 ompi_timing : Request that critical timing loops be measured
20250509 201014.815 INFO             PET2 index=  75                                       ompi_stream_buffering : Adjust buffering for stdout/stderr. (0) unbuffered, (1) line buffered, (2) fully buffered.
20250509 201014.815 INFO             PET2 index=  76                                            mpi_comm_verbose : Verbosity level for communicator management subsystem
20250509 201014.815 INFO             PET2 index=  77                                                          if : Default selection set of components for the if framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET2 index=  78                                             if_base_verbose : Verbosity level for the if framework (default: 0)
20250509 201014.815 INFO             PET2 index=  79                                      if_base_do_not_resolve : If nonzero, do not attempt to resolve interfaces
20250509 201014.815 INFO             PET2 index=  80                                     if_base_retain_loopback : If nonzero, retain loopback interfaces
20250509 201014.815 INFO             PET2 index=  81                                  if_bsdx_ipv6_major_version :
20250509 201014.815 INFO             PET2 index=  82                                  if_bsdx_ipv6_minor_version :
20250509 201014.815 INFO             PET2 index=  83                                if_bsdx_ipv6_release_version :
20250509 201014.815 INFO             PET2 index=  84                                 if_posix_ipv4_major_version :
20250509 201014.815 INFO             PET2 index=  85                                 if_posix_ipv4_minor_version :
20250509 201014.815 INFO             PET2 index=  86                               if_posix_ipv4_release_version :
20250509 201014.815 INFO             PET2 index=  87                                                     threads : Default selection set of components for the threads framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET2 index=  88                                        threads_base_verbose : Verbosity level for the threads framework (default: 0)
20250509 201014.815 INFO             PET2 index=  89                             threads_pthreads_yield_strategy : Pthread yield strategy to use
20250509 201014.815 INFO             PET2 index=  90                             threads_pthreads_nanosleep_time : Number of nanoseconds to sleep when using nanosleep as the pthread yield strategy
20250509 201014.815 INFO             PET2 index=  91                              threads_pthreads_major_version :
20250509 201014.815 INFO             PET2 index=  92                              threads_pthreads_minor_version :
20250509 201014.815 INFO             PET2 index=  93                            threads_pthreads_release_version :
20250509 201014.815 INFO             PET2 index=  94                                                       hwloc : Default selection set of components for the hwloc framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET2 index=  95                                          hwloc_base_verbose : Verbosity level for the hwloc framework (default: 0)
20250509 201014.815 INFO             PET2 index=  96                          hwloc_base_mem_bind_failure_action : What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
20250509 201014.815 INFO             PET2 index=  97                                                      memcpy : Default selection set of components for the memcpy framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET2 index=  98                                         memcpy_base_verbose : Verbosity level for the memcpy framework (default: 0)
20250509 201014.815 INFO             PET2 index=  99                                                  memchecker : Default selection set of components for the memchecker framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET2 index= 100                                     memchecker_base_verbose : Verbosity level for the memchecker framework (default: 0)
20250509 201014.815 INFO             PET2 index= 101                                                   backtrace : Default selection set of components for the backtrace framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET2 index= 102                                      backtrace_base_verbose : Verbosity level for the backtrace framework (default: 0)
20250509 201014.815 INFO             PET2 index= 103                            backtrace_execinfo_major_version :
20250509 201014.815 INFO             PET2 index= 104                            backtrace_execinfo_minor_version :
20250509 201014.815 INFO             PET2 index= 105                          backtrace_execinfo_release_version :
20250509 201014.816 INFO             PET2 index= 106                                                       timer : Default selection set of components for the timer framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET2 index= 107                                          timer_base_verbose : Verbosity level for the timer framework (default: 0)
20250509 201014.816 INFO             PET2 index= 108                                     timer_require_monotonic : Node-level monotonic timer required (default yes)
20250509 201014.816 INFO             PET2 index= 109                                  timer_darwin_major_version :
20250509 201014.816 INFO             PET2 index= 110                                  timer_darwin_minor_version :
20250509 201014.816 INFO             PET2 index= 111                                timer_darwin_release_version :
20250509 201014.816 INFO             PET2 index= 112                                                       shmem : Default selection set of components for the shmem framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET2 index= 113                                          shmem_base_verbose : Verbosity level for the shmem framework (default: 0)
20250509 201014.816 INFO             PET2 index= 114                               shmem_base_RUNTIME_QUERY_hint : Internal OMPI parameter used to provide a component selection hint to the shmem framework.  The value of this parameter is the name of the component that is available, selectable, and meets our run-time behavior requirements.
20250509 201014.816 INFO             PET2 index= 115                                         shmem_mmap_priority : Priority for shmem mmap component (default: 50)
20250509 201014.816 INFO             PET2 index= 116                               shmem_mmap_enable_nfs_warning : Enable the warning emitted when Open MPI detects that its shared memory backing file is located on a network filesystem (1 = enabled, 0 = disabled).
20250509 201014.816 INFO             PET2 index= 117                            shmem_mmap_relocate_backing_file : Whether to change the default placement of backing files or not (Negative = try to relocate backing files to an area rooted at the path specified by shmem_mmap_backing_file_base_dir, but continue with the default path if the relocation fails, 0 = do not relocate, Positive = same as the negative option, but will fail if the relocation fails.
20250509 201014.816 INFO             PET2 index= 118                            shmem_mmap_backing_file_base_dir : Specifies where backing files will be created when shmem_mmap_relocate_backing_file is in use.
20250509 201014.816 INFO             PET2 index= 119                                    shmem_mmap_major_version :
20250509 201014.816 INFO             PET2 index= 120                                    shmem_mmap_minor_version :
20250509 201014.816 INFO             PET2 index= 121                                  shmem_mmap_release_version :
20250509 201014.816 INFO             PET2 index= 130                                                   reachable : Default selection set of components for the reachable framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET2 index= 131                                      reachable_base_verbose : Verbosity level for the reachable framework (default: 0)
20250509 201014.817 INFO             PET2 index= 132                            reachable_weighted_major_version :
20250509 201014.817 INFO             PET2 index= 133                            reachable_weighted_minor_version :
20250509 201014.817 INFO             PET2 index= 134                          reachable_weighted_release_version :
20250509 201014.817 INFO             PET2 index= 135                                                        pmix : Default selection set of components for the pmix framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET2 index= 136                                           pmix_base_verbose : Verbosity level for the pmix framework (default: 0)
20250509 201014.817 INFO             PET2 index= 137                                       pmix_base_async_modex : Use asynchronous modex mode
20250509 201014.817 INFO             PET2 index= 138                                      pmix_base_collect_data : Collect all data during modex
20250509 201014.817 INFO             PET2 index= 139                                  pmix_base_exchange_timeout : Time (in seconds) to wait for a data exchange to complete
20250509 201014.817 INFO             PET2 index= 140                                                 accelerator : Default selection set of components for the accelerator framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET2 index= 141                                    accelerator_base_verbose : Verbosity level for the accelerator framework (default: 0)
20250509 201014.817 INFO             PET2 index= 142                              accelerator_null_major_version :
20250509 201014.817 INFO             PET2 index= 143                              accelerator_null_minor_version :
20250509 201014.817 INFO             PET2 index= 144                            accelerator_null_release_version :
20250509 201014.817 INFO             PET2 index= 145                                          opal_event_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.817 INFO             PET2 index= 146                                      event_external_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.817 INFO             PET2 index= 147                                          opal_event_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.817 INFO             PET2 index= 148                                          event_base_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.817 INFO             PET2 index= 149                                                        hook : Default selection set of components for the hook framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET2 index= 150                                           hook_base_verbose : Verbosity level for the hook framework (default: 0)
20250509 201014.817 INFO             PET2 index= 151                                    hook_comm_method_verbose :
20250509 201014.817 INFO             PET2 index= 152                                    hook_comm_method_display : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.817 INFO             PET2 index= 153                                           ompi_display_comm : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.817 INFO             PET2 index= 154                                        hook_comm_method_max : Number of hosts for which to print unabbreviated 2d table of comm methods.
20250509 201014.817 INFO             PET2 index= 155                                      hook_comm_method_brief : Only print the comm method summary, skip the 2d table.
20250509 201014.817 INFO             PET2 index= 156                                   hook_comm_method_fakefile : For debugging only: read comm methods from a file
20250509 201014.817 INFO             PET2 index= 157                              hook_comm_method_major_version :
20250509 201014.817 INFO             PET2 index= 158                              hook_comm_method_minor_version :
20250509 201014.817 INFO             PET2 index= 159                            hook_comm_method_release_version :
20250509 201014.817 INFO             PET2 index= 160                                                          op : Default selection set of components for the op framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET2 index= 161                                             op_base_verbose : Verbosity level for the op framework (default: 0)
20250509 201014.817 INFO             PET2 index= 162                               op_aarch64_hardware_available : Whether the Neon (1) or SVE (2) hardware is available
20250509 201014.817 INFO             PET2 index= 163                                 op_aarch64_double_supported : Whether the double precision data types are supported or not
20250509 201014.817 INFO             PET2 index= 164                                    op_aarch64_major_version :
20250509 201014.817 INFO             PET2 index= 165                                    op_aarch64_minor_version :
20250509 201014.817 INFO             PET2 index= 166                                  op_aarch64_release_version :
20250509 201014.817 INFO             PET2 index= 167                                                   allocator : Default selection set of components for the allocator framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET2 index= 168                                      allocator_base_verbose : Verbosity level for the allocator framework (default: 0)
20250509 201014.817 INFO             PET2 index= 169                               allocator_basic_major_version :
20250509 201014.817 INFO             PET2 index= 170                               allocator_basic_minor_version :
20250509 201014.817 INFO             PET2 index= 171                             allocator_basic_release_version :
20250509 201014.818 INFO             PET2 index= 172                                allocator_bucket_num_buckets :
20250509 201014.818 INFO             PET2 index= 173                              allocator_bucket_major_version :
20250509 201014.818 INFO             PET2 index= 174                              allocator_bucket_minor_version :
20250509 201014.818 INFO             PET2 index= 175                            allocator_bucket_release_version :
20250509 201014.818 INFO             PET2 index= 176                                                      rcache : Default selection set of components for the rcache framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET2 index= 177                                         rcache_base_verbose : Verbosity level for the rcache framework (default: 0)
20250509 201014.818 INFO             PET2 index= 178                                    rcache_grdma_print_stats : print registration cache usage statistics at the end of the run
20250509 201014.818 INFO             PET2 index= 179                                  rcache_grdma_major_version :
20250509 201014.818 INFO             PET2 index= 180                                  rcache_grdma_minor_version :
20250509 201014.818 INFO             PET2 index= 181                                rcache_grdma_release_version :
20250509 201014.818 INFO             PET2 index= 182                                                       mpool : Default selection set of components for the mpool framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET2 index= 183                                          mpool_base_verbose : Verbosity level for the mpool framework (default: 0)
20250509 201014.818 INFO             PET2 index= 184                                    mpool_base_default_hints : Hints to use when selecting the default memory pool
20250509 201014.818 INFO             PET2 index= 185                                 mpool_base_default_priority : Priority of the default mpool module
20250509 201014.818 INFO             PET2 index= 186                                     mpool_hugepage_priority : Default priority of the hugepage mpool component (default: 50)
20250509 201014.818 INFO             PET2 index= 187                                    mpool_hugepage_page_size : Default huge page size of the hugepage mpool component (default: 2M)
20250509 201014.818 INFO             PET2 index= 188                                mpool_hugepage_major_version :
20250509 201014.818 INFO             PET2 index= 189                                mpool_hugepage_minor_version :
20250509 201014.818 INFO             PET2 index= 190                              mpool_hugepage_release_version :
20250509 201014.818 INFO             PET2 index= 191                                                        smsc : Default selection set of components for the smsc framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET2 index= 192                                           smsc_base_verbose : Verbosity level for the smsc framework (default: 0)
20250509 201014.818 INFO             PET2 index= 193                                                         bml : Default selection set of components for the bml framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET2 index= 194                                            bml_base_verbose : Verbosity level for the bml framework (default: 0)
20250509 201014.818 INFO             PET2 index= 195                                  bml_r2_show_unreach_errors : Show error message when procs are unreachable
20250509 201014.818 INFO             PET2 index= 196                                        bml_r2_major_version :
20250509 201014.818 INFO             PET2 index= 197                                        bml_r2_minor_version :
20250509 201014.818 INFO             PET2 index= 198                                      bml_r2_release_version :
20250509 201014.818 INFO             PET2 index= 199                                                         btl : Default selection set of components for the btl framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET2 index= 200                                            btl_base_verbose : Verbosity level for the btl framework (default: 0)
20250509 201014.818 INFO             PET2 index= 201                           btl_base_thread_multiple_override : Enable BTLs that are not normally enabled when MPI_THREAD_MULTIPLE is enabled (THIS IS FOR DEVELOPERS ONLY!  SHOULD NOT BE USED BY END USERS!)
20250509 201014.818 INFO             PET2 index= 202                                            btl_base_include :
20250509 201014.818 INFO             PET2 index= 203                                            btl_base_exclude :
20250509 201014.818 INFO             PET2 index= 204                                    btl_base_warn_peer_error : This parameter is used to turn on warning messages when peers disconnect unexpectedly
20250509 201014.818 INFO             PET2 index= 205                              btl_base_warn_component_unused : This parameter is used to turn on warning messages when certain NICs are not used
20250509 201014.818 INFO             PET2 index= 206                                      btl_self_free_list_num : Number of fragments by default
20250509 201014.818 INFO             PET2 index= 207                                      btl_self_free_list_max : Maximum number of fragments
20250509 201014.818 INFO             PET2 index= 208                                      btl_self_free_list_inc : Increment by this number of fragments
20250509 201014.818 INFO             PET2 index= 209                                        btl_self_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.818 INFO             PET2 index= 210                                              btl_self_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET2 index= 211                                       btl_self_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET2 index= 212                                   btl_self_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.819 INFO             PET2 index= 213                                        btl_self_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET2 index= 214                                          btl_self_get_limit : Maximum size (in bytes) for btl get
20250509 201014.819 INFO             PET2 index= 215                                      btl_self_get_alignment : Alignment required for btl get
20250509 201014.819 INFO             PET2 index= 216                                          btl_self_put_limit : Maximum size (in bytes) for btl put
20250509 201014.819 INFO             PET2 index= 217                                      btl_self_put_alignment : Alignment required for btl put
20250509 201014.819 INFO             PET2 index= 218                          btl_self_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.819 INFO             PET2 index= 219                                      btl_self_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.819 INFO             PET2 index= 220                          btl_self_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET2 index= 221                            btl_self_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET2 index= 222                             btl_self_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET2 index= 223                                            btl_self_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.819 INFO             PET2 index= 224                                          btl_self_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.819 INFO             PET2 index= 225                                      btl_self_major_version :
20250509 201014.819 INFO             PET2 index= 226                                      btl_self_minor_version :
20250509 201014.819 INFO             PET2 index= 227                                    btl_self_release_version :
20250509 201014.819 INFO             PET2 index= 228                                        btl_sm_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET2 index= 229                                     btl_vader_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET2 index= 230                                        btl_sm_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET2 index= 231                                     btl_vader_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.819 INFO             PET2 index= 232                                        btl_sm_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.819 INFO             PET2 index= 233                                     btl_vader_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.819 INFO             PET2 index= 234                                         btl_sm_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.819 INFO             PET2 index= 235                                      btl_vader_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.819 INFO             PET2 index= 236                                         btl_sm_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.819 INFO             PET2 index= 237                                      btl_vader_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.819 INFO             PET2 index= 238                                      btl_sm_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.819 INFO             PET2 index= 239                                   btl_vader_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.819 INFO             PET2 index= 240                                       btl_sm_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.819 INFO             PET2 index= 241                                    btl_vader_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.819 INFO             PET2 index= 242                                             btl_sm_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.819 INFO             PET2 index= 243                                          btl_vader_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.819 INFO             PET2 index= 244                                            btl_sm_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.819 INFO             PET2 index= 245                                         btl_vader_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.819 INFO             PET2 index= 246                                    btl_sm_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.819 INFO             PET2 index= 247                                 btl_vader_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.819 INFO             PET2 index= 248                                          btl_sm_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET2 index= 249                                       btl_vader_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET2 index= 250                                                btl_sm_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET2 index= 251                                             btl_vader_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET2 index= 252                                         btl_sm_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET2 index= 253                                      btl_vader_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET2 index= 254                                     btl_sm_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET2 index= 255                                  btl_vader_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET2 index= 256                                          btl_sm_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET2 index= 257                                       btl_vader_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET2 index= 258                            btl_sm_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET2 index= 259                         btl_vader_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET2 index= 260                                        btl_sm_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET2 index= 261                                     btl_vader_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET2 index= 262                                        btl_sm_major_version :
20250509 201014.820 INFO             PET2 index= 263                                     btl_vader_major_version :
20250509 201014.820 INFO             PET2 index= 264                                        btl_sm_minor_version :
20250509 201014.820 INFO             PET2 index= 265                                     btl_vader_minor_version :
20250509 201014.820 INFO             PET2 index= 266                                      btl_sm_release_version :
20250509 201014.820 INFO             PET2 index= 267                                   btl_vader_release_version :
20250509 201014.820 INFO             PET2 index= 268                                               btl_tcp_links :
20250509 201014.820 INFO             PET2 index= 269                                          btl_tcp_if_include : Comma-delimited list of devices and/or CIDR notation of networks to use for MPI communication (e.g., "eth0,192.168.0.0/16").  Mutually exclusive with btl_tcp_if_exclude.
20250509 201014.820 INFO             PET2 index= 270                                          btl_tcp_if_exclude : Comma-delimited list of devices and/or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,192.168.0.0/16").  If set to a non-default value, it is mutually exclusive with btl_tcp_if_include.
20250509 201014.820 INFO             PET2 index= 271                                       btl_tcp_free_list_num :
20250509 201014.820 INFO             PET2 index= 272                                       btl_tcp_free_list_max :
20250509 201014.820 INFO             PET2 index= 273                                       btl_tcp_free_list_inc :
20250509 201014.820 INFO             PET2 index= 274                                              btl_tcp_sndbuf : The size of the send buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a send buffer size.
20250509 201014.820 INFO             PET2 index= 275                                              btl_tcp_rcvbuf : The size of the receive buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a receive buffer size.
20250509 201014.820 INFO             PET2 index= 276                                      btl_tcp_endpoint_cache : The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
20250509 201014.820 INFO             PET2 index= 277                                           btl_tcp_use_nagle : Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
20250509 201014.820 INFO             PET2 index= 278                                         btl_tcp_port_min_v4 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.820 INFO             PET2 index= 279                                       btl_tcp_port_range_v4 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.820 INFO             PET2 index= 280                                         btl_tcp_port_min_v6 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.820 INFO             PET2 index= 281                                       btl_tcp_port_range_v6 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.820 INFO             PET2 index= 282                                     btl_tcp_progress_thread :
20250509 201014.820 INFO             PET2 index= 283                         btl_tcp_warn_all_unfound_interfaces : Issue a warning for all unfound interfaces included in if_exclude
20250509 201014.820 INFO             PET2 index= 284                                         btl_tcp_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET2 index= 285                                               btl_tcp_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET2 index= 286                                        btl_tcp_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET2 index= 287                                    btl_tcp_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET2 index= 288                                         btl_tcp_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET2 index= 289                                           btl_tcp_put_limit : Maximum size (in bytes) for btl put
20250509 201014.820 INFO             PET2 index= 290                                       btl_tcp_put_alignment : Alignment required for btl put
20250509 201014.820 INFO             PET2 index= 291                           btl_tcp_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET2 index= 292                                       btl_tcp_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET2 index= 293                           btl_tcp_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET2 index= 294                             btl_tcp_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET2 index= 295                              btl_tcp_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET2 index= 296                                             btl_tcp_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.821 INFO             PET2 index= 297                                           btl_tcp_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.821 INFO             PET2 index= 298                                      btl_tcp_disable_family :
20250509 201014.821 INFO             PET2 index= 299                                       btl_tcp_major_version :
20250509 201014.821 INFO             PET2 index= 300                                       btl_tcp_minor_version :
20250509 201014.821 INFO             PET2 index= 301                                     btl_tcp_release_version :
20250509 201014.821 INFO             PET2 index= 302                                                         pml : Default selection set of components for the pml framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET2 index= 303                                            pml_base_verbose : Verbosity level for the pml framework (default: 0)
20250509 201014.821 INFO             PET2 index= 304                                    pml_base_bsend_allocator :
20250509 201014.821 INFO             PET2 index= 305                                            pml_base_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.821 INFO             PET2 index= 306                                                 pml_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.821 INFO             PET2 index= 307                                          pml_base_check_pml : Whether to check the pml selections to ensure they all match
20250509 201014.821 INFO             PET2 index= 320                                             pml_ob1_verbose :
20250509 201014.821 INFO             PET2 index= 321                                       pml_ob1_free_list_num :
20250509 201014.821 INFO             PET2 index= 322                                       pml_ob1_free_list_max :
20250509 201014.821 INFO             PET2 index= 323                                       pml_ob1_free_list_inc :
20250509 201014.821 INFO             PET2 index= 324                                            pml_ob1_priority :
20250509 201014.821 INFO             PET2 index= 325                                 pml_ob1_send_pipeline_depth :
20250509 201014.821 INFO             PET2 index= 326                                 pml_ob1_recv_pipeline_depth :
20250509 201014.821 INFO             PET2 index= 327                                pml_ob1_max_rdma_per_request :
20250509 201014.821 INFO             PET2 index= 328                                  pml_ob1_max_send_per_range :
20250509 201014.821 INFO             PET2 index= 329                                    pml_ob1_unexpected_limit :
20250509 201014.821 INFO             PET2 index= 330                                        pml_ob1_use_all_rdma : Use all available RDMA btls for the RDMA and RDMA pipeline protocols (default: false)
20250509 201014.821 INFO             PET2 index= 331                                           pml_ob1_allocator : Name of allocator component for unexpected messages
20250509 201014.821 INFO             PET2 index= 332                              pml_ob1_accelerator_events_max : Number of events created by the ob1 component internally
20250509 201014.821 INFO             PET2 index= 333                                       pml_ob1_major_version :
20250509 201014.821 INFO             PET2 index= 334                                       pml_ob1_minor_version :
20250509 201014.821 INFO             PET2 index= 335                                     pml_ob1_release_version :
20250509 201014.821 INFO             PET2 index= 339                                                   vprotocol : Specify a specific vprotocol to use
20250509 201014.821 INFO             PET2 index= 343                                                         mtl : Default selection set of components for the mtl framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET2 index= 344                                            mtl_base_verbose : Verbosity level for the mtl framework (default: 0)
20250509 201014.821 INFO             PET2 index= 345                                      vprotocol_base_verbose : Verbosity level for the vprotocol framework (default: 0)
20250509 201014.821 INFO             PET2 index= 346                                vprotocol_pessimist_priority :
20250509 201014.821 INFO             PET2 index= 347                           vprotocol_pessimist_free_list_num :
20250509 201014.821 INFO             PET2 index= 348                           vprotocol_pessimist_free_list_max :
20250509 201014.821 INFO             PET2 index= 349                           vprotocol_pessimist_free_list_inc :
20250509 201014.821 INFO             PET2 index= 350                      vprotocol_pessimist_sender_based_chunk :
20250509 201014.821 INFO             PET2 index= 351                       vprotocol_pessimist_event_buffer_size :
20250509 201014.821 INFO             PET2 index= 352                       vprotocol_pessimist_sender_based_file :
20250509 201014.821 INFO             PET2 index= 353                   vprotocol_pessimist_allow_thread_multiple : Allow the PML V to work even when the MPI library is initialized with MPI_THREAD_MULTIPLE support. By default the PML V is disabled in such instances, to protect applications that are not send deterministic.
20250509 201014.821 INFO             PET2 index= 354                           vprotocol_pessimist_major_version :
20250509 201014.821 INFO             PET2 index= 355                           vprotocol_pessimist_minor_version :
20250509 201014.821 INFO             PET2 index= 356                         vprotocol_pessimist_release_version :
20250509 201014.821 INFO             PET2 index= 357                                                        coll : Default selection set of components for the coll framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET2 index= 358                                           coll_base_verbose : Verbosity level for the coll framework (default: 0)
20250509 201014.822 INFO             PET2 index= 359                                         coll_adapt_priority : Priority of the adapt coll component
20250509 201014.822 INFO             PET2 index= 360                                          coll_adapt_verbose : Verbose level (default set to the collective framework verbosity)
20250509 201014.822 INFO             PET2 index= 361                            coll_adapt_context_free_list_min : Minimum number of segments in context free list
20250509 201014.822 INFO             PET2 index= 362                            coll_adapt_context_free_list_max : Maximum number of segments in context free list
20250509 201014.822 INFO             PET2 index= 363                            coll_adapt_context_free_list_inc : Increasement number of segments in context free list
20250509 201014.822 INFO             PET2 index= 364                                  coll_adapt_bcast_algorithm : Algorithm of broadcast, 0: tuned, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.822 INFO             PET2 index= 365                               coll_adapt_bcast_segment_size : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET2 index= 366                          coll_adapt_bcast_max_send_requests : Maximum number of send requests
20250509 201014.822 INFO             PET2 index= 367                          coll_adapt_bcast_max_recv_requests : Maximum number of receive requests
20250509 201014.822 INFO             PET2 index= 368                           coll_adapt_bcast_synchronous_send : Whether to use synchronous send operations during setup of bcast operations
20250509 201014.822 INFO             PET2 index= 369                                 coll_adapt_reduce_algorithm : Algorithm of reduce, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.822 INFO             PET2 index= 370                              coll_adapt_reduce_segment_size : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET2 index= 371                         coll_adapt_reduce_max_send_requests : Maximum number of send requests
20250509 201014.822 INFO             PET2 index= 372                         coll_adapt_reduce_max_recv_requests : Maximum number of receive requests per peer
20250509 201014.822 INFO             PET2 index= 373                              coll_adapt_inbuf_free_list_min : Minimum number of segment in inbuf free list
20250509 201014.822 INFO             PET2 index= 374                              coll_adapt_inbuf_free_list_max : Maximum number of segment in inbuf free list
20250509 201014.822 INFO             PET2 index= 375                              coll_adapt_inbuf_free_list_inc : Number of segments to allocate when growing the inbuf free list
20250509 201014.822 INFO             PET2 index= 376                          coll_adapt_reduce_synchronous_send : Whether to use synchronous send operations during setup of reduce operations
20250509 201014.822 INFO             PET2 index= 377                                    coll_adapt_major_version :
20250509 201014.822 INFO             PET2 index= 378                                    coll_adapt_minor_version :
20250509 201014.822 INFO             PET2 index= 379                                  coll_adapt_release_version :
20250509 201014.822 INFO             PET2 index= 380                                         coll_basic_priority : Priority of the basic coll component
20250509 201014.822 INFO             PET2 index= 381                                        coll_basic_crossover : Minimum number of processes in a communicator before using the logarithmic algorithms
20250509 201014.822 INFO             PET2 index= 382                                    coll_basic_major_version :
20250509 201014.822 INFO             PET2 index= 383                                    coll_basic_minor_version :
20250509 201014.822 INFO             PET2 index= 384                                  coll_basic_release_version :
20250509 201014.822 INFO             PET2 index= 385                                           coll_han_priority : Priority of the HAN coll component
20250509 201014.822 INFO             PET2 index= 386                                            coll_han_verbose : Verbosity of the HAN coll component (use coll base verbosity if not set)
20250509 201014.822 INFO             PET2 index= 387                                      coll_han_bcast_segsize : segment size for bcast
20250509 201014.822 INFO             PET2 index= 388                                    coll_han_bcast_up_module : up level module for bcast, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET2 index= 389                                   coll_han_bcast_low_module : low level module for bcast, 0 tuned, 1 sm
20250509 201014.822 INFO             PET2 index= 390                                     coll_han_reduce_segsize : segment size for reduce
20250509 201014.822 INFO             PET2 index= 391                                   coll_han_reduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET2 index= 392                                  coll_han_reduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.822 INFO             PET2 index= 393                                  coll_han_allreduce_segsize : segment size for allreduce
20250509 201014.822 INFO             PET2 index= 394                                coll_han_allreduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET2 index= 395                               coll_han_allreduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.822 INFO             PET2 index= 396                                coll_han_allgather_up_module : up level module for allgather, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET2 index= 397                               coll_han_allgather_low_module : low level module for allgather, 0 tuned, 1 sm
20250509 201014.822 INFO             PET2 index= 398                                   coll_han_gather_up_module : up level module for gather, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET2 index= 399                                  coll_han_gather_low_module : low level module for gather, 0 tuned, 1 sm
20250509 201014.822 INFO             PET2 index= 400                                  coll_han_scatter_up_module : up level module for scatter, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET2 index= 401                                 coll_han_scatter_low_module : low level module for scatter, 0 tuned, 1 sm
20250509 201014.822 INFO             PET2 index= 402                                       coll_han_reproducible : whether we need reproducible results (enabling this disables optimisations using topology)0 disable 1 enable, default 0
20250509 201014.822 INFO             PET2 index= 403                            coll_han_use_allgather_algorithm : which han algorithm is used for allgather
20250509 201014.822 INFO             PET2 index= 404                            coll_han_use_allreduce_algorithm : which han algorithm is used for allreduce
20250509 201014.822 INFO             PET2 index= 405                              coll_han_use_barrier_algorithm : which han algorithm is used for barrier
20250509 201014.823 INFO             PET2 index= 406                                coll_han_use_bcast_algorithm : which han algorithm is used for bcast
20250509 201014.823 INFO             PET2 index= 407                               coll_han_use_gather_algorithm : which han algorithm is used for gather
20250509 201014.823 INFO             PET2 index= 408                               coll_han_use_reduce_algorithm : which han algorithm is used for reduce
20250509 201014.823 INFO             PET2 index= 409                              coll_han_use_scatter_algorithm : which han algorithm is used for scatter
20250509 201014.823 INFO             PET2 index= 410                               coll_han_use_simple_allgather : whether to enable simple algorithm for allgather. Prefer use_allgather_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET2 index= 411                               coll_han_use_simple_allreduce : whether to enable simple algorithm for allreduce. Prefer use_allreduce_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET2 index= 412                                   coll_han_use_simple_bcast : whether to enable simple algorithm for bcast. Prefer use_bcast_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET2 index= 413                                  coll_han_use_simple_gather : whether to enable simple algorithm for gather. Prefer use_gather_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET2 index= 414                                  coll_han_use_simple_reduce : whether to enable simple algorithm for reduce. Prefer use_reduce_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET2 index= 415                                 coll_han_use_simple_scatter : whether to enable simple algorithm for scatter. Prefer use_scatter_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET2 index= 416                coll_han_allgather_dynamic_intra_node_module : Collective module to use for allgather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 417                coll_han_allgather_dynamic_inter_node_module : Collective module to use for allgather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 418       coll_han_allgather_dynamic_global_communicator_module : Collective module to use for allgather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 419               coll_han_allgatherv_dynamic_intra_node_module : Collective module to use for allgatherv on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 420               coll_han_allgatherv_dynamic_inter_node_module : Collective module to use for allgatherv on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 421      coll_han_allgatherv_dynamic_global_communicator_module : Collective module to use for allgatherv on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 422                coll_han_allreduce_dynamic_intra_node_module : Collective module to use for allreduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 423                coll_han_allreduce_dynamic_inter_node_module : Collective module to use for allreduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 424       coll_han_allreduce_dynamic_global_communicator_module : Collective module to use for allreduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 425                  coll_han_barrier_dynamic_intra_node_module : Collective module to use for barrier on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 426                  coll_han_barrier_dynamic_inter_node_module : Collective module to use for barrier on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 427         coll_han_barrier_dynamic_global_communicator_module : Collective module to use for barrier on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 428                    coll_han_bcast_dynamic_intra_node_module : Collective module to use for bcast on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 429                    coll_han_bcast_dynamic_inter_node_module : Collective module to use for bcast on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 430           coll_han_bcast_dynamic_global_communicator_module : Collective module to use for bcast on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 431                   coll_han_gather_dynamic_intra_node_module : Collective module to use for gather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 432                   coll_han_gather_dynamic_inter_node_module : Collective module to use for gather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 433          coll_han_gather_dynamic_global_communicator_module : Collective module to use for gather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 434                   coll_han_reduce_dynamic_intra_node_module : Collective module to use for reduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 435                   coll_han_reduce_dynamic_inter_node_module : Collective module to use for reduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 436          coll_han_reduce_dynamic_global_communicator_module : Collective module to use for reduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 437                  coll_han_scatter_dynamic_intra_node_module : Collective module to use for scatter on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 438                  coll_han_scatter_dynamic_inter_node_module : Collective module to use for scatter on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET2 index= 439         coll_han_scatter_dynamic_global_communicator_module : Collective module to use for scatter on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET2 index= 440                             coll_han_use_dynamic_file_rules : Enable the dynamic selection provided via the dynamic_rules_filename MCA
20250509 201014.823 INFO             PET2 index= 441                             coll_han_dynamic_rules_filename : Configuration file containing the dynamic selection rules
20250509 201014.823 INFO             PET2 index= 442                                 coll_han_dump_dynamic_rules : Switch used to decide if we dump  dynamic rules provided by configuration file
20250509 201014.823 INFO             PET2 index= 443                                 coll_han_max_dynamic_errors : Number of dynamic rules module/function errors printed on rank 0 with a 0 verbosity.Useless if coll_base_verbose is 30 or more.
20250509 201014.823 INFO             PET2 index= 444                                      coll_han_major_version :
20250509 201014.824 INFO             PET2 index= 445                                      coll_han_minor_version :
20250509 201014.824 INFO             PET2 index= 446                                    coll_han_release_version :
20250509 201014.824 INFO             PET2 index= 447                                         coll_inter_priority : Priority of the inter coll component
20250509 201014.824 INFO             PET2 index= 448                                          coll_inter_verbose : Turn verbose message of the inter coll component on/off
20250509 201014.824 INFO             PET2 index= 449                                    coll_inter_major_version :
20250509 201014.824 INFO             PET2 index= 450                                    coll_inter_minor_version :
20250509 201014.824 INFO             PET2 index= 451                                  coll_inter_release_version :
20250509 201014.824 INFO             PET2 index= 452                                        coll_libnbc_priority : Priority of the libnbc coll component
20250509 201014.824 INFO             PET2 index= 453                         coll_libnbc_ibcast_skip_dt_decision : In ibcast only use size of communicator to choose algorithm, exclude data type signature. Set to 'false' to use data type signature in decision. WARNING: If you set this to 'false' then your application should not use non-uniform data type signatures in calls to ibcast.
20250509 201014.824 INFO             PET2 index= 454                            coll_libnbc_iallgather_algorithm : Which iallgather algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.824 INFO             PET2 index= 455                            coll_libnbc_iallreduce_algorithm : Which iallreduce algorithm is used: 0 ignore, 1 ring, 2 binomial, 3 rabenseifner, 4 recursive_doubling
20250509 201014.824 INFO             PET2 index= 456                                coll_libnbc_ibcast_algorithm : Which ibcast algorithm is used: 0 ignore, 1 linear, 2 binomial, 3 chain, 4 knomial
20250509 201014.824 INFO             PET2 index= 457                            coll_libnbc_ibcast_knomial_radix : k-nomial tree radix for the ibcast algorithm (radix > 1)
20250509 201014.824 INFO             PET2 index= 458                               coll_libnbc_iexscan_algorithm : Which iexscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.824 INFO             PET2 index= 459                               coll_libnbc_ireduce_algorithm : Which ireduce algorithm is used: 0 ignore, 1 chain, 2 binomial, 3 rabenseifner
20250509 201014.824 INFO             PET2 index= 460                                 coll_libnbc_iscan_algorithm : Which iscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.824 INFO             PET2 index= 461                                   coll_libnbc_major_version :
20250509 201014.824 INFO             PET2 index= 462                                   coll_libnbc_minor_version :
20250509 201014.824 INFO             PET2 index= 463                                 coll_libnbc_release_version :
20250509 201014.824 INFO             PET2 index= 464                                          coll_self_priority :
20250509 201014.824 INFO             PET2 index= 465                                     coll_self_major_version :
20250509 201014.824 INFO             PET2 index= 466                                     coll_self_minor_version :
20250509 201014.824 INFO             PET2 index= 467                                   coll_self_release_version :
20250509 201014.824 INFO             PET2 index= 468                                          coll_sync_priority : Priority of the sync coll component; only relevant if barrier_before or barrier_after is > 0
20250509 201014.824 INFO             PET2 index= 469                                    coll_sync_barrier_before : Do a synchronization before each Nth collective
20250509 201014.824 INFO             PET2 index= 470                                     coll_sync_barrier_after : Do a synchronization after each Nth collective
20250509 201014.824 INFO             PET2 index= 471                                     coll_sync_major_version :
20250509 201014.824 INFO             PET2 index= 472                                     coll_sync_minor_version :
20250509 201014.824 INFO             PET2 index= 473                                   coll_sync_release_version :
20250509 201014.824 INFO             PET2 index= 474                                         coll_tuned_priority : Priority of the tuned coll component
20250509 201014.824 INFO             PET2 index= 475                                 coll_tuned_init_tree_fanout : Initial fanout used in the tree topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.824 INFO             PET2 index= 476                                coll_tuned_init_chain_fanout : Initial fanout used in the chain (fanout followed by pipeline) topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.825 INFO             PET2 index= 477                               coll_tuned_alltoall_small_msg : threshold (if supported) to decide if small MSGs alltoall algorithm will be used
20250509 201014.825 INFO             PET2 index= 478                        coll_tuned_alltoall_intermediate_msg : threshold (if supported) to decide if intermediate MSGs alltoall algorithm will be used
20250509 201014.825 INFO             PET2 index= 479                                coll_tuned_use_dynamic_rules : Switch used to decide if we use static (compiled/if statements) or dynamic (built at runtime) decision function rules
20250509 201014.825 INFO             PET2 index= 480                           coll_tuned_dynamic_rules_filename : Filename of configuration file that contains the dynamic (@runtime) decision function rules
20250509 201014.825 INFO             PET2 index= 481                        coll_tuned_allreduce_algorithm_count : Number of allreduce algorithms available
20250509 201014.825 INFO             PET2 index= 482                              coll_tuned_allreduce_algorithm : Which allreduce algorithm is used. Can be locked down to any of: 0 ignore, 1 basic linear, 2 nonoverlapping (tuned reduce + tuned bcast), 3 recursive doubling, 4 ring, 5 segmented ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 483                  coll_tuned_allreduce_algorithm_segmentsize : Segment size in bytes used by default for allreduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET2 index= 484                  coll_tuned_allreduce_algorithm_tree_fanout : Fanout for n-tree used for allreduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET2 index= 485                 coll_tuned_allreduce_algorithm_chain_fanout : Fanout for chains used for allreduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET2 index= 486                         coll_tuned_alltoall_algorithm_count : Number of alltoall algorithms available
20250509 201014.825 INFO             PET2 index= 487                               coll_tuned_alltoall_algorithm : Which alltoall algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise, 3: modified bruck, 4: linear with sync, 5:two proc only. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 488                   coll_tuned_alltoall_algorithm_segmentsize : Segment size in bytes used by default for alltoall algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET2 index= 489                   coll_tuned_alltoall_algorithm_tree_fanout : Fanout for n-tree used for alltoall algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET2 index= 490                  coll_tuned_alltoall_algorithm_chain_fanout : Fanout for chains used for alltoall algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET2 index= 491                               coll_tuned_alltoall_large_msg : use pairwise exchange algorithm for messages larger than this value
20250509 201014.825 INFO             PET2 index= 492                               coll_tuned_alltoall_min_procs : use pairwise exchange algorithm for communicators larger than this value
20250509 201014.825 INFO             PET2 index= 493                  coll_tuned_alltoall_algorithm_max_requests : Maximum number of outstanding send or recv requests.  Only has meaning for synchronized algorithms.
20250509 201014.825 INFO             PET2 index= 494                        coll_tuned_allgather_algorithm_count : Number of allgather algorithms available
20250509 201014.825 INFO             PET2 index= 495                              coll_tuned_allgather_algorithm : Which allgather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 bruck, 3 recursive doubling, 4 ring, 5 neighbor exchange, 6: two proc only, 7: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 496                  coll_tuned_allgather_algorithm_segmentsize : Segment size in bytes used by default for allgather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET2 index= 497                  coll_tuned_allgather_algorithm_tree_fanout : Fanout for n-tree used for allgather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.825 INFO             PET2 index= 498                 coll_tuned_allgather_algorithm_chain_fanout : Fanout for chains used for allgather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET2 index= 499                       coll_tuned_allgatherv_algorithm_count : Number of allgatherv algorithms available
20250509 201014.825 INFO             PET2 index= 500                             coll_tuned_allgatherv_algorithm : Which allgatherv algorithm is used. Can be locked down to choice of: 0 ignore, 1 default (allgathervv + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5: two proc only, 6: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 501                 coll_tuned_allgatherv_algorithm_segmentsize : Segment size in bytes used by default for allgatherv algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET2 index= 502                 coll_tuned_allgatherv_algorithm_tree_fanout : Fanout for n-tree used for allgatherv algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.825 INFO             PET2 index= 503                coll_tuned_allgatherv_algorithm_chain_fanout : Fanout for chains used for allgatherv algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET2 index= 504                        coll_tuned_alltoallv_algorithm_count : Number of alltoallv algorithms available
20250509 201014.825 INFO             PET2 index= 505                              coll_tuned_alltoallv_algorithm : Which alltoallv algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 506                          coll_tuned_barrier_algorithm_count : Number of barrier algorithms available
20250509 201014.825 INFO             PET2 index= 507                                coll_tuned_barrier_algorithm : Which barrier algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 double ring, 3: recursive doubling 4: bruck, 5: two proc only, 6: tree. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 508                            coll_tuned_bcast_algorithm_count : Number of bcast algorithms available
20250509 201014.825 INFO             PET2 index= 509                                  coll_tuned_bcast_algorithm : Which bcast algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 chain, 3: pipeline, 4: split binary tree, 5: binary tree, 6: binomial tree, 7: knomial tree, 8: scatter_allgather, 9: scatter_allgather_ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET2 index= 510                      coll_tuned_bcast_algorithm_segmentsize : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET2 index= 511                      coll_tuned_bcast_algorithm_tree_fanout : Fanout for n-tree used for bcast algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET2 index= 512                     coll_tuned_bcast_algorithm_chain_fanout : Fanout for chains used for bcast algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET2 index= 513                    coll_tuned_bcast_algorithm_knomial_radix : k-nomial tree radix for the bcast algorithm (radix > 1).
20250509 201014.826 INFO             PET2 index= 514                           coll_tuned_reduce_algorithm_count : Number of reduce algorithms available
20250509 201014.826 INFO             PET2 index= 515                                 coll_tuned_reduce_algorithm : Which reduce algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 chain, 3 pipeline, 4 binary, 5 binomial, 6 in-order binary, 7 rabenseifner. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET2 index= 516                     coll_tuned_reduce_algorithm_segmentsize : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET2 index= 517                     coll_tuned_reduce_algorithm_tree_fanout : Fanout for n-tree used for reduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET2 index= 518                    coll_tuned_reduce_algorithm_chain_fanout : Fanout for chains used for reduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET2 index= 519                    coll_tuned_reduce_algorithm_max_requests : Maximum number of outstanding send requests on leaf nodes. 0 means no limit.
20250509 201014.826 INFO             PET2 index= 520                   coll_tuned_reduce_scatter_algorithm_count : Number of reduce_scatter algorithms available
20250509 201014.826 INFO             PET2 index= 521                         coll_tuned_reduce_scatter_algorithm : Which reduce reduce_scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 non-overlapping (Reduce + Scatterv), 2 recursive halving, 3 ring, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET2 index= 522             coll_tuned_reduce_scatter_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET2 index= 523             coll_tuned_reduce_scatter_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET2 index= 524            coll_tuned_reduce_scatter_algorithm_chain_fanout : Fanout for chains used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET2 index= 525             coll_tuned_reduce_scatter_block_algorithm_count : Number of reduce_scatter_block algorithms available
20250509 201014.826 INFO             PET2 index= 526                   coll_tuned_reduce_scatter_block_algorithm : Which reduce reduce_scatter_block algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic_linear, 2 recursive_doubling, 3 recursive_halving, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET2 index= 527       coll_tuned_reduce_scatter_block_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET2 index= 528       coll_tuned_reduce_scatter_block_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET2 index= 529                           coll_tuned_gather_algorithm_count : Number of gather algorithms available
20250509 201014.826 INFO             PET2 index= 530                                 coll_tuned_gather_algorithm : Which gather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 linear with synchronization. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET2 index= 531                     coll_tuned_gather_algorithm_segmentsize : Segment size in bytes used by default for gather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.826 INFO             PET2 index= 532                     coll_tuned_gather_algorithm_tree_fanout : Fanout for n-tree used for gather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.826 INFO             PET2 index= 533                    coll_tuned_gather_algorithm_chain_fanout : Fanout for chains used for gather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.826 INFO             PET2 index= 534                          coll_tuned_scatter_algorithm_count : Number of scatter algorithms available
20250509 201014.826 INFO             PET2 index= 535                                coll_tuned_scatter_algorithm : Which scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 non-blocking linear. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET2 index= 536                    coll_tuned_scatter_algorithm_segmentsize : Segment size in bytes used by default for scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.826 INFO             PET2 index= 537                    coll_tuned_scatter_algorithm_tree_fanout : Fanout for n-tree used for scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.826 INFO             PET2 index= 538                   coll_tuned_scatter_algorithm_chain_fanout : Fanout for chains used for scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.826 INFO             PET2 index= 539                                coll_tuned_scatter_min_procs : use basic linear algorithm for communicators larger than this value
20250509 201014.826 INFO             PET2 index= 540                   coll_tuned_scatter_algorithm_max_requests : Issue a blocking send every this many non-blocking requests. Only has meaning for non-blocking linear algorithm.
20250509 201014.826 INFO             PET2 index= 541                         coll_tuned_scatter_intermediate_msg : use non-blocking linear algorithm for messages larger than this value
20250509 201014.826 INFO             PET2 index= 542                                coll_tuned_scatter_large_msg : use linear algorithm for messages larger than this value
20250509 201014.826 INFO             PET2 index= 543                           coll_tuned_exscan_algorithm_count : Number of exscan algorithms available
20250509 201014.827 INFO             PET2 index= 544                                 coll_tuned_exscan_algorithm : Which exscan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET2 index= 545                             coll_tuned_scan_algorithm_count : Number of scan algorithms available
20250509 201014.827 INFO             PET2 index= 546                                   coll_tuned_scan_algorithm : Which scan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET2 index= 547                                    coll_tuned_major_version :
20250509 201014.827 INFO             PET2 index= 548                                    coll_tuned_minor_version :
20250509 201014.827 INFO             PET2 index= 549                                  coll_tuned_release_version :
20250509 201014.827 INFO             PET2 index= 550                                       coll_ftagree_priority : Priority of the ftagree coll component
20250509 201014.827 INFO             PET2 index= 551                                      coll_ftagree_agreement : Agreement algorithm 0: Allreduce (NOT FAULT TOLERANT); 1: Early Returning Consensus (era); 2: Early Terminating Consensus (eta)
20250509 201014.827 INFO             PET2 index= 552                                   coll_ftagree_era_topology : ERA topology 1: binary tree; 2: star tree; 3: string tree
20250509 201014.827 INFO             PET2 index= 553                                    coll_ftagree_era_rebuild : ERA rebuild/rebalance the tree in a first post-failure agreement 0: no rebalancing; 1: rebalance all the time
20250509 201014.827 INFO             PET2 index= 554                                  coll_ftagree_major_version :
20250509 201014.827 INFO             PET2 index= 555                                  coll_ftagree_minor_version :
20250509 201014.827 INFO             PET2 index= 556                                coll_ftagree_release_version :
20250509 201014.827 INFO             PET2 index= 560                                            coll_sm_priority : Priority of the sm coll component
20250509 201014.827 INFO             PET2 index= 561                                        coll_sm_control_size : Length of the control data -- should usually be either the length of a cache line on most SMPs, or the size of a page on machines that support direct memory affinity page placement (in bytes)
20250509 201014.827 INFO             PET2 index= 562                                       coll_sm_fragment_size : Fragment size (in bytes) used for passing data through shared memory (will be rounded up to the nearest control_size size)
20250509 201014.827 INFO             PET2 index= 563                                   coll_sm_comm_in_use_flags : Number of "in use" flags, used to mark a message passing area segment as currently being used or not (must be >= 2 and <= comm_num_segments)
20250509 201014.827 INFO             PET2 index= 564                                   coll_sm_comm_num_segments : Number of segments in each communicator's shared memory message passing area (must be >= 2, and must be a multiple of comm_in_use_flags)
20250509 201014.827 INFO             PET2 index= 565                                         coll_sm_tree_degree : Degree of the tree for tree-based operations (must be => 1 and <= min(control_size, 255))
20250509 201014.827 INFO             PET2 index= 566                                      coll_sm_info_num_procs : Number of processes to use for the calculation of the shared_mem_size MCA information parameter (must be => 2)
20250509 201014.827 INFO             PET2 index= 567                                coll_sm_shared_mem_used_data : Amount of shared memory used, per communicator, in the shared memory data area for info_num_procs processes (in bytes)
20250509 201014.827 INFO             PET2 index= 568                                       coll_sm_major_version :
20250509 201014.827 INFO             PET2 index= 569                                       coll_sm_minor_version :
20250509 201014.827 INFO             PET2 index= 570                                     coll_sm_release_version :
20250509 201014.827 INFO             PET2 index= 571                                                         osc : Default selection set of components for the osc framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET2 index= 572                                            osc_base_verbose : Verbosity level for the osc framework (default: 0)
20250509 201014.827 INFO             PET2 index= 573                                    osc_sm_backing_directory : Directory to place backing files for shared memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.827 INFO             PET2 index= 574                                             osc_sm_priority : Priority of the osc/sm component (default: 100)
20250509 201014.827 INFO             PET2 index= 575                                        osc_sm_major_version :
20250509 201014.827 INFO             PET2 index= 576                                        osc_sm_minor_version :
20250509 201014.827 INFO             PET2 index= 577                                      osc_sm_release_version :
20250509 201014.827 INFO             PET2 index= 581                                           osc_rdma_no_locks : Enable optimizations available only if MPI_LOCK is not used. Info key of same name overrides this value (default: false)
20250509 201014.827 INFO             PET2 index= 582                               osc_rdma_acc_single_intrinsic : Enable optimizations for MPI_Fetch_and_op, MPI_Accumulate, etc for codes that will not use anything more than a single predefined datatype (default: false)
20250509 201014.827 INFO             PET2 index= 583                                        osc_rdma_acc_use_amo : Enable the use of network atomic memory operations when using single intrinsic optimizations. If not set network compare-and-swap will be used instead (default: true)
20250509 201014.827 INFO             PET2 index= 584                                        osc_rdma_buffer_size : Size of temporary buffers (default: 32768)
20250509 201014.827 INFO             PET2 index= 585                                         osc_rdma_max_attach : Maximum number of buffers that can be attached to a dynamic window. Keep in mind that each attached buffer will use a potentially limited resource (default: 64)
20250509 201014.827 INFO             PET2 index= 586                                           osc_rdma_priority : Priority of the osc/rdma component (default: 20)
20250509 201014.827 INFO             PET2 index= 587                                       osc_rdma_locking_mode : Locking mode to use for passive-target synchronization (default: two_level)
20250509 201014.827 INFO             PET2 index= 588                                               osc_rdma_btls : Comma-delimited list of BTL component names to allow without verifying connectivity. Do not add a BTL to to this list unless it can reach all processes in any communicator used with an MPI window (default: ugni,uct,ofi)
20250509 201014.827 INFO             PET2 index= 589                                  osc_rdma_backing_directory : Directory to place backing files for memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.827 INFO             PET2 index= 590                                    osc_rdma_network_max_amo : Maximum predefined datatype count for which network atomic operations will be used. Accumulate operations larger than this count will use a get/op/put protocol. The optimal value is dictated by the network injection rate for the interconnect. Generally a smaller number will yield better larger accumulate performance. (default: 32)
20250509 201014.828 INFO             PET2 index= 591                           osc_rdma_minimum_memory_alignment : The minimum memory alignment used to allocate local window memory (default: 16384). This is a best effort approach. Alignments larger than the page size may not be supported.
20250509 201014.828 INFO             PET2 index= 592                                      osc_rdma_major_version :
20250509 201014.828 INFO             PET2 index= 593                                      osc_rdma_minor_version :
20250509 201014.828 INFO             PET2 index= 594                                    osc_rdma_release_version :
20250509 201014.828 INFO             PET2 index= 595                                       btl_tcp_bandwidth_en0 :
20250509 201014.828 INFO             PET2 index= 596                                         btl_tcp_latency_en0 :
20250509 201014.828 INFO             PET2 index= 597                                     btl_tcp_bandwidth_en0:0 :
20250509 201014.828 INFO             PET2 index= 598                                       btl_tcp_latency_en0:0 :
20250509 201014.828 INFO             PET2 index= 599                                                        part : Default selection set of components for the part framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET2 index= 600                                           part_base_verbose : Verbosity level for the part framework (default: 0)
20250509 201014.828 INFO             PET2 index= 601                                  part_persist_free_list_num : Initial size of request free lists
20250509 201014.828 INFO             PET2 index= 602                                  part_persist_free_list_max : Maximum size of request free lists
20250509 201014.828 INFO             PET2 index= 603                                  part_persist_free_list_inc : Number of elements to add when growing request free lists
20250509 201014.828 INFO             PET2 index= 604                                  part_persist_major_version :
20250509 201014.828 INFO             PET2 index= 605                                  part_persist_minor_version :
20250509 201014.828 INFO             PET2 index= 606                                part_persist_release_version :
20250509 201014.828 INFO             PET2 index= 607                                                      memory : Default selection set of components for the memory framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET2 index= 608                                         memory_base_verbose : Verbosity level for the memory framework (default: 0)
20250509 201014.828 INFO             PET2 index= 609                                                     patcher : Default selection set of components for the patcher framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET2 index= 610                                        patcher_base_verbose : Verbosity level for the patcher framework (default: 0)
20250509 201014.828 INFO             PET2 index= 611                                  patcher_overwrite_priority : Priority of the overwrite binary patcher component
20250509 201014.828 INFO             PET2 index= 612                             patcher_overwrite_major_version :
20250509 201014.828 INFO             PET2 index= 613                             patcher_overwrite_minor_version :
20250509 201014.828 INFO             PET2 index= 614                           patcher_overwrite_release_version :
20250509 201014.828 INFO             PET2 index= 615                                                        fbtl : Default selection set of components for the fbtl framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET2 index= 616                                           fbtl_base_verbose : Verbosity level for the fbtl framework (default: 0)
20250509 201014.828 INFO             PET2 index= 617                                         fbtl_posix_priority : Priority of the fbtl posix component
20250509 201014.828 INFO             PET2 index= 618                                   fbtl_posix_max_block_size : Maximum average size in bytes of a data block in an iovec for data sieving. An average block size larger than this parameter will disable data sieving. Default: 1048576 bytes.
20250509 201014.828 INFO             PET2 index= 619                                     fbtl_posix_max_gap_size : Maximum average gap size between two blocks in an iovec for data sieving. An average gap size larger than this parameter will disable data sieving. Default: 4096 bytes.
20250509 201014.828 INFO             PET2 index= 620                                  fbtl_posix_max_tmpbuf_size : Maximum size of the temporary buffer used for data sieving in bytes. Default: 67108864 (64MB).
20250509 201014.828 INFO             PET2 index= 621                                 fbtl_posix_read_datasieving : Parameter indicating whether to perform data sieving for read operations. Default: true.
20250509 201014.828 INFO             PET2 index= 622                                fbtl_posix_write_datasieving : Parameter indicating whether to perform data sieving for write operations. Default: true.
20250509 201014.828 INFO             PET2 index= 623                                    fbtl_posix_major_version :
20250509 201014.828 INFO             PET2 index= 624                                    fbtl_posix_minor_version :
20250509 201014.828 INFO             PET2 index= 625                                  fbtl_posix_release_version :
20250509 201014.828 INFO             PET2 index= 626                                                       fcoll : Default selection set of components for the fcoll framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET2 index= 627                                          fcoll_base_verbose : Verbosity level for the fcoll framework (default: 0)
20250509 201014.828 INFO             PET2 index= 628                                      fcoll_dynamic_priority : Priority of the dynamic fcoll component
20250509 201014.828 INFO             PET2 index= 629                                 fcoll_dynamic_major_version :
20250509 201014.828 INFO             PET2 index= 630                                 fcoll_dynamic_minor_version :
20250509 201014.828 INFO             PET2 index= 631                               fcoll_dynamic_release_version :
20250509 201014.828 INFO             PET2 index= 632                                 fcoll_dynamic_gen2_priority : Priority of the dynamic_gen2 fcoll component
20250509 201014.828 INFO             PET2 index= 633                               fcoll_dynamic_gen2_num_groups : Number of subgroups created by the dynamic_gen2 component
20250509 201014.828 INFO             PET2 index= 634                            fcoll_dynamic_gen2_major_version :
20250509 201014.828 INFO             PET2 index= 635                            fcoll_dynamic_gen2_minor_version :
20250509 201014.828 INFO             PET2 index= 636                          fcoll_dynamic_gen2_release_version :
20250509 201014.828 INFO             PET2 index= 637                                   fcoll_individual_priority : Priority of the individual fcoll component
20250509 201014.828 INFO             PET2 index= 638                              fcoll_individual_major_version :
20250509 201014.828 INFO             PET2 index= 639                              fcoll_individual_minor_version :
20250509 201014.828 INFO             PET2 index= 640                            fcoll_individual_release_version :
20250509 201014.828 INFO             PET2 index= 641                                       fcoll_vulcan_priority : Priority of the vulcan fcoll component
20250509 201014.829 INFO             PET2 index= 642                                     fcoll_vulcan_num_groups : Number of subgroups created by the vulcan component
20250509 201014.829 INFO             PET2 index= 643                                fcoll_vulcan_write_chunksize : Chunk size written at once. Default: stripe_size of the file system
20250509 201014.829 INFO             PET2 index= 644                                       fcoll_vulcan_async_io : Asynchronous I/O support options. 0: Automatic choice (default) 1: Asynchronous I/O only. 2: Synchronous I/O only.
20250509 201014.829 INFO             PET2 index= 645                                  fcoll_vulcan_major_version :
20250509 201014.829 INFO             PET2 index= 646                                  fcoll_vulcan_minor_version :
20250509 201014.829 INFO             PET2 index= 647                                fcoll_vulcan_release_version :
20250509 201014.829 INFO             PET2 index= 648                                                          fs : Default selection set of components for the fs framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET2 index= 649                                             fs_base_verbose : Verbosity level for the fs framework (default: 0)
20250509 201014.829 INFO             PET2 index= 650                                             fs_ufs_priority : Priority of the fs ufs component
20250509 201014.829 INFO             PET2 index= 651                                       fs_ufs_lock_algorithm : Locking algorithm used by the fs ufs component.  0: auto (default), 1: skip locking, 2: always lock entire file, 3: lock only specific ranges
20250509 201014.829 INFO             PET2 index= 652                                        fs_ufs_major_version :
20250509 201014.829 INFO             PET2 index= 653                                        fs_ufs_minor_version :
20250509 201014.829 INFO             PET2 index= 654                                      fs_ufs_release_version :
20250509 201014.829 INFO             PET2 index= 655                                                          io : Default selection set of components for the io framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET2 index= 656                                             io_base_verbose : Verbosity level for the io framework (default: 0)
20250509 201014.829 INFO             PET2 index= 657                                           io_ompio_priority : Priority of the io ompio component
20250509 201014.829 INFO             PET2 index= 658                                    io_ompio_delete_priority : Delete priority of the io ompio component
20250509 201014.829 INFO             PET2 index= 659                            io_ompio_record_file_offset_info : The information of the file offset/length
20250509 201014.829 INFO             PET2 index= 660                                   io_ompio_coll_timing_info : Enable collective algorithm timing information
20250509 201014.829 INFO             PET2 index= 661                                  io_ompio_cycle_buffer_size : Data size issued by individual reads/writes per call
20250509 201014.829 INFO             PET2 index= 662                               io_ompio_pipeline_buffer_size : Size of temporary buffer used by individual reads/writes in the pipeline protocol
20250509 201014.829 INFO             PET2 index= 663                                      io_ompio_bytes_per_agg : Size of temporary buffer for collective I/O operations
20250509 201014.829 INFO             PET2 index= 664                                    io_ompio_num_aggregators : number of aggregators for collective I/O operations
20250509 201014.829 INFO             PET2 index= 665                                    io_ompio_grouping_option : Option for grouping of processes in the aggregator selection 1: Data volume based grouping 2: maximizing group size uniformity 3: maximimze data contiguity 4: hybrid optimization  5: simple (default) 6: skip refinement step 7: simple+: grouping based on default file view
20250509 201014.829 INFO             PET2 index= 666                              io_ompio_max_aggregators_ratio : Maximum number of processes that can be an aggregator expressed as the ratio to the number of process used to open the file i.e 1 out of n processes can be an aggregator, with n being specified by this mca parameter.
20250509 201014.829 INFO             PET2 index= 667                       io_ompio_aggregators_cutoff_threshold : Relative cutoff threshold for incrementing the number of aggregators in the simple aggregator selection algorithm (5). Lower value for this parameter will lead to higher no. of aggregators.
20250509 201014.829 INFO             PET2 index= 668                                    io_ompio_overwrite_amode : Overwrite WRONLY amode to RDWR to enable data sieving 1: allow overwrite (default) 0: do not overwrite amode provided by application
20250509 201014.829 INFO             PET2 index= 669                               io_ompio_verbose_info_parsing : Provide visual output when parsing info objects 0: no verbose output (default) 1: verbose output by rank 0 2: verbose output by all ranks
20250509 201014.829 INFO             PET2 index= 670                                      io_ompio_major_version :
20250509 201014.829 INFO             PET2 index= 671                                      io_ompio_minor_version :
20250509 201014.829 INFO             PET2 index= 672                                    io_ompio_release_version :
20250509 201014.829 INFO             PET2 index= 673                                        io_romio341_priority : Priority of the io romio component
20250509 201014.829 INFO             PET2 index= 674                                 io_romio341_delete_priority : Delete priority of the io romio component
20250509 201014.829 INFO             PET2 index= 675                                         io_romio341_version : Version of ROMIO
20250509 201014.829 INFO             PET2 index= 676                           io_romio341_user_configure_params : User-specified command line parameters passed to ROMIO's configure script
20250509 201014.829 INFO             PET2 index= 677                       io_romio341_complete_configure_params : Complete set of command line parameters passed to ROMIO's configure script
20250509 201014.829 INFO             PET2 index= 678                                   io_romio341_major_version :
20250509 201014.829 INFO             PET2 index= 679                                   io_romio341_minor_version :
20250509 201014.829 INFO             PET2 index= 680                                 io_romio341_release_version :
20250509 201014.829 INFO             PET2 index= 681                                                    sharedfp : Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET2 index= 682                                       sharedfp_base_verbose : Verbosity level for the sharedfp framework (default: 0)
20250509 201014.829 INFO             PET2 index= 683                                sharedfp_individual_priority : Priority of the individual sharedfp component
20250509 201014.829 INFO             PET2 index= 684                                 sharedfp_individual_verbose : Verbosity of the individual sharedfp component
20250509 201014.829 INFO             PET2 index= 685                           sharedfp_individual_major_version :
20250509 201014.829 INFO             PET2 index= 686                           sharedfp_individual_minor_version :
20250509 201014.829 INFO             PET2 index= 687                         sharedfp_individual_release_version :
20250509 201014.829 INFO             PET2 index= 688                                sharedfp_lockedfile_priority : Priority of the lockedfile sharedfp component
20250509 201014.829 INFO             PET2 index= 689                                 sharedfp_lockedfile_verbose : Verbosity of the lockedfile sharedfp component
20250509 201014.829 INFO             PET2 index= 690                           sharedfp_lockedfile_major_version :
20250509 201014.829 INFO             PET2 index= 691                           sharedfp_lockedfile_minor_version :
20250509 201014.829 INFO             PET2 index= 692                         sharedfp_lockedfile_release_version :
20250509 201014.830 INFO             PET2 index= 693                                        sharedfp_sm_priority : Priority of the sm sharedfp component
20250509 201014.830 INFO             PET2 index= 694                                         sharedfp_sm_verbose : Verbosity of the sm sharedfp component
20250509 201014.830 INFO             PET2 index= 695                                   sharedfp_sm_major_version :
20250509 201014.830 INFO             PET2 index= 696                                   sharedfp_sm_minor_version :
20250509 201014.830 INFO             PET2 index= 697                                 sharedfp_sm_release_version :
20250509 201014.830 INFO             PET2 index= 698                                                        topo : Default selection set of components for the topo framework (<none> means use all components that can be found)
20250509 201014.830 INFO             PET2 index= 699                                           topo_base_verbose : Verbosity level for the topo framework (default: 0)
20250509 201014.830 INFO             PET2 index= 700                                    topo_basic_major_version :
20250509 201014.830 INFO             PET2 index= 701                                    topo_basic_minor_version :
20250509 201014.830 INFO             PET2 index= 702                                  topo_basic_release_version :
20250509 201014.830 INFO             PET2 index= 703                                 topo_treematch_reorder_mode : If set the reordering will be done in a partially distributed way (default=0). If partially-distributed only local knowledge will be used, possibly leading to less accurate reordering.
20250509 201014.830 INFO             PET2 index= 704                                topo_treematch_major_version :
20250509 201014.830 INFO             PET2 index= 705                                topo_treematch_minor_version :
20250509 201014.830 INFO             PET2 index= 706                              topo_treematch_release_version :
20250509 201014.830 INFO             PET2 --- VMK::logSystem() end ---------------------------------
20250509 201014.830 INFO             PET2 main: --- VMK::log() start -------------------------------------
20250509 201014.830 INFO             PET2 main: vm located at: 0x154605f70
20250509 201014.830 INFO             PET2 main: mpionly=1 threadsflag=0
20250509 201014.830 INFO             PET2 main: ssiCount=1 localSsi=0
20250509 201014.830 INFO             PET2 main: devCount=0 ssiLocalDevCount=0
20250509 201014.830 INFO             PET2 main: petCount=6 ssiLocalPetCount=6
20250509 201014.830 INFO             PET2 main: localPet=2 mypthid=0x202a94f40 ssiLocalPet=2 currentSsiPe=-1
20250509 201014.830 INFO             PET2 main: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.830 INFO             PET2 main: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.830 INFO             PET2 main:  PE=0 SSI=0 SSIPE=0
20250509 201014.830 INFO             PET2 main: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.830 INFO             PET2 main:  PE=1 SSI=0 SSIPE=1
20250509 201014.830 INFO             PET2 main: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.830 INFO             PET2 main:  PE=2 SSI=0 SSIPE=2
20250509 201014.830 INFO             PET2 main: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.830 INFO             PET2 main:  PE=3 SSI=0 SSIPE=3
20250509 201014.830 INFO             PET2 main: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.830 INFO             PET2 main:  PE=4 SSI=0 SSIPE=4
20250509 201014.830 INFO             PET2 main: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.830 INFO             PET2 main:  PE=5 SSI=0 SSIPE=5
20250509 201014.830 INFO             PET2 main: --- VMK::log() end ---------------------------------------
20250509 201014.831 INFO             PET2 Executing 'userm1_setvm'
20250509 201014.831 INFO             PET2 Executing 'userm1_register'
20250509 201014.831 INFO             PET2 Executing 'userm2_setvm'
20250509 201014.831 DEBUG            PET2 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.831 DEBUG            PET2 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.832 INFO             PET2 model1: --- VMK::log() start -------------------------------------
20250509 201014.832 INFO             PET2 model1: vm located at: 0x124606100
20250509 201014.832 INFO             PET2 model1: mpionly=1 threadsflag=0
20250509 201014.832 INFO             PET2 model1: ssiCount=1 localSsi=0
20250509 201014.832 INFO             PET2 model1: devCount=0 ssiLocalDevCount=0
20250509 201014.832 INFO             PET2 model1: petCount=6 ssiLocalPetCount=6
20250509 201014.832 INFO             PET2 model1: localPet=2 mypthid=0x202a94f40 ssiLocalPet=2 currentSsiPe=-1
20250509 201014.832 INFO             PET2 model1: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.832 INFO             PET2 model1: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.832 INFO             PET2 model1:  PE=0 SSI=0 SSIPE=0
20250509 201014.832 INFO             PET2 model1: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.832 INFO             PET2 model1:  PE=1 SSI=0 SSIPE=1
20250509 201014.832 INFO             PET2 model1: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.832 INFO             PET2 model1:  PE=2 SSI=0 SSIPE=2
20250509 201014.832 INFO             PET2 model1: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.832 INFO             PET2 model1:  PE=3 SSI=0 SSIPE=3
20250509 201014.832 INFO             PET2 model1: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.832 INFO             PET2 model1:  PE=4 SSI=0 SSIPE=4
20250509 201014.832 INFO             PET2 model1: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.832 INFO             PET2 model1:  PE=5 SSI=0 SSIPE=5
20250509 201014.832 INFO             PET2 model1: --- VMK::log() end ---------------------------------------
20250509 201014.837 INFO             PET2 Entering 'user1_run'
20250509 201014.837 INFO             PET2  user1_run: on SSIPE:           -1  Filling data lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201017.621 INFO             PET2  user1_run: on SSIPE:           -1  Filling data lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201019.441 INFO             PET2  user1_run: on SSIPE:           -1  Filling data lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201021.936 INFO             PET2  user1_run: on SSIPE:           -1  Filling data lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201024.246 INFO             PET2  user1_run: on SSIPE:           -1  Filling data lbound:        3335           1           1  ubound:        5001        1200          10
20250509 201027.045 INFO             PET2 Exiting 'user1_run'
20250509 201046.306 INFO             PET2  NUMBER_OF_PROCESSORS           6
20250509 201046.307 INFO             PET2  PASS  System Test ESMF_FieldSharedDeSSISTest, ESMF_FieldSharedDeSSISTest.F90, line 276
20250509 201046.307 INFO             PET2  Finalizing ESMF
20250509 201014.761 INFO             PET3 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.789 INFO             PET3 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250509 201014.789 INFO             PET3 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250509 201014.789 INFO             PET3 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250509 201014.789 INFO             PET3 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250509 201014.789 INFO             PET3 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.789 INFO             PET3 Running with ESMF Version   : v8.9.0b08-9-gea72ab2180
20250509 201014.789 INFO             PET3 ESMF library build date/time: "May  9 2025" "19:17:42"
20250509 201014.789 INFO             PET3 ESMF library build location : /Users/sacks/projects/scratch/esmf-testing/gfortranclang_12.2.0_14.0.0_openmpi_g_develop/esmf
20250509 201014.789 INFO             PET3 ESMF_COMM                   : openmpi
20250509 201014.790 INFO             PET3 ESMF_MOAB                   : enabled
20250509 201014.790 INFO             PET3 ESMF_LAPACK                 : enabled
20250509 201014.790 INFO             PET3 ESMF_NETCDF                 : enabled
20250509 201014.790 INFO             PET3 ESMF_PNETCDF                : disabled
20250509 201014.790 INFO             PET3 ESMF_PIO                    : enabled
20250509 201014.790 INFO             PET3 ESMF_YAMLCPP                : enabled
20250509 201014.800 INFO             PET3 --- VMK::logSystem() start -------------------------------
20250509 201014.800 INFO             PET3 esmfComm=openmpi
20250509 201014.800 INFO             PET3 isPthreadsEnabled=1
20250509 201014.800 INFO             PET3 isOpenMPEnabled=0
20250509 201014.800 INFO             PET3 isOpenACCEnabled=0
20250509 201014.800 INFO             PET3 isSsiSharedMemoryEnabled=1
20250509 201014.800 INFO             PET3 isNvmlEnabled=0
20250509 201014.801 INFO             PET3 isNumaEnabled=0
20250509 201014.801 INFO             PET3 ssiCount=1 peCount=6
20250509 201014.801 INFO             PET3 PE=0 SSI=0 SSIPE=0
20250509 201014.801 INFO             PET3 PE=1 SSI=0 SSIPE=1
20250509 201014.801 INFO             PET3 PE=2 SSI=0 SSIPE=2
20250509 201014.801 INFO             PET3 PE=3 SSI=0 SSIPE=3
20250509 201014.802 INFO             PET3 PE=4 SSI=0 SSIPE=4
20250509 201014.802 INFO             PET3 PE=5 SSI=0 SSIPE=5
20250509 201014.802 INFO             PET3 ndevs=0 ndevsSSI=0
20250509 201014.803 INFO             PET3 
20250509 201014.803 INFO             PET3 --- VMK::logSystem() MPI Layer ---------------------------
20250509 201014.803 INFO             PET3 MPI_VERSION=3
20250509 201014.803 INFO             PET3 MPI_SUBVERSION=1
20250509 201014.807 INFO             PET3 mpi_t_okay=1
20250509 201014.810 INFO             PET3 --- VMK::logSystem() MPI Tool Interface Control Vars ---
20250509 201014.810 INFO             PET3 index=   0                                         base_help_aggregate : If opal_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message. Default: true.
20250509 201014.810 INFO             PET3 index=   1                                        mca_base_param_files : Path for MCA configuration files containing variable values
20250509 201014.810 INFO             PET3 index=   2                                             mca_param_files : Path for MCA configuration files containing variable values
20250509 201014.810 INFO             PET3 index=   3                                mca_base_override_param_file : Variables set in this file will override any value set inthe environment or another configuration file
20250509 201014.810 INFO             PET3 index=   4                          mca_base_suppress_override_warning : Suppress warnings when attempting to set an overridden value (default: false)
20250509 201014.811 INFO             PET3 index=   5                                  mca_base_param_file_prefix : Aggregate MCA parameter file sets
20250509 201014.811 INFO             PET3 index=   6                                  mca_base_envar_file_prefix : Aggregate MCA parameter file set for env variables
20250509 201014.811 INFO             PET3 index=   7                                    mca_base_param_file_path : Aggregate MCA parameter Search path
20250509 201014.811 INFO             PET3 index=   8                              mca_base_param_file_path_force : Forced Aggregate MCA parameter Search path
20250509 201014.811 INFO             PET3 index=   9                                                 opal_signal : Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
20250509 201014.811 INFO             PET3 index=  10                                      opal_stacktrace_output : Specifies where the stack trace output stream goes.  Accepts one of the following: none (disabled), stderr (default), stdout, file[:filename].   If 'filename' is not specified, a default filename of 'stacktrace' is used.  The 'filename' is appended with either '.PID' or '.RANK.PID', if RANK is available.  The 'filename' can be an absolute path or a relative path to the current working directory.
20250509 201014.812 INFO             PET3 index=  11                                       opal_net_private_ipv4 : Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
20250509 201014.812 INFO             PET3 index=  12                                     opal_set_max_sys_limits : Set the specified system-imposed limits to the specified value, including "unlimited".Supported params: core, filesize, maxmem, openfiles, stacksize, maxchildren
20250509 201014.812 INFO             PET3 index=  13                                         opal_var_dump_color : The colors to use when dumping MCA vars with color (e.g. ompi_info). The format is a comma-delimited key=value list, where the key is the attribute whose color to adjust, and the value is the ANSI color code (see the ANSI X3.64 CSI SGR sequence). Available keys: name,value,valid_values.
20250509 201014.812 INFO             PET3 index=  14                                opal_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.813 INFO             PET3 index=  15                                           opal_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.813 INFO             PET3 index=  16                                opal_warn_on_missing_libcuda : Whether to print a message when CUDA support is enabled but libcuda is not found
20250509 201014.813 INFO             PET3 index=  17                                            mpi_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.813 INFO             PET3 index=  18                                           opal_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.813 INFO             PET3 index=  19                                   mpi_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.815 INFO             PET3 index=  20                                  opal_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.815 INFO             PET3 index=  21                                            mpi_warn_on_fork : If nonzero, issue a warning if program forks under conditions that could cause system errors
20250509 201014.815 INFO             PET3 index=  22                                            opal_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.815 INFO             PET3 index=  23                                      opal_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.815 INFO             PET3 index=  24                                           mca_base_env_list : Set SHELL env variables
20250509 201014.815 INFO             PET3 index=  25                                 mca_base_env_list_delimiter : Set SHELL env variables delimiter. Default: semicolon ';'
20250509 201014.815 INFO             PET3 index=  26                                  mca_base_env_list_internal : Store SHELL env variables from amca conf file
20250509 201014.815 INFO             PET3 index=  27                                 opal_max_thread_in_progress : Number of thread allowed in opal_progress. Default: 1
20250509 201014.815 INFO             PET3 index=  28                                     mca_base_component_path : Path where to look for additional components
20250509 201014.815 INFO             PET3 index=  29                                          mca_component_path : Path where to look for additional components
20250509 201014.815 INFO             PET3 index=  30                         mca_base_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.815 INFO             PET3 index=  31                              mca_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.815 INFO             PET3 index=  32                        mca_base_component_track_load_errors : Whether to track errors for components that failed to load or not
20250509 201014.815 INFO             PET3 index=  33                           mca_base_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.815 INFO             PET3 index=  34                                mca_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.815 INFO             PET3 index=  35                                            mca_base_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.815 INFO             PET3 index=  36                                                 mca_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.815 INFO             PET3 index=  37                                                          dl : Default selection set of components for the dl framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET3 index=  38                                             dl_base_verbose : Verbosity level for the dl framework (default: 0)
20250509 201014.815 INFO             PET3 index=  39                                 dl_dlopen_filename_suffixes : Comma-delimited list of filename suffixes that the dlopen component will try
20250509 201014.815 INFO             PET3 index=  40                                     dl_dlopen_major_version :
20250509 201014.815 INFO             PET3 index=  41                                     dl_dlopen_minor_version :
20250509 201014.815 INFO             PET3 index=  42                                   dl_dlopen_release_version :
20250509 201014.815 INFO             PET3 index=  43                                               mpi_ft_enable : Enable UFLM MPI Fault Tolerance framework
20250509 201014.815 INFO             PET3 index=  44                                              mpi_ft_verbose : Verbosity level of the ULFM MPI Fault Tolerance framework
20250509 201014.815 INFO             PET3 index=  45                                       mpi_ft_reliable_bcast : Reliable Broadcast algorithm (1: Binomial Graph Diffusion; 2: N^2 full graph diffusion)
20250509 201014.815 INFO             PET3 index=  46                               mpi_ft_propagator_with_rbcast : Use the OMPI reliable broadcast failure propagator, or disable it and use only RTE propagation (slower)
20250509 201014.815 INFO             PET3 index=  47                                             mpi_ft_detector : Use the OMPI heartbeat based failure detector, or disable it and use only RTE and in-band detection (slower)
20250509 201014.815 INFO             PET3 index=  48                                      mpi_ft_detector_thread : Delegate failure detector to a separate thread
20250509 201014.815 INFO             PET3 index=  49                                      mpi_ft_detector_period : Period of heartbeat emission (s)
20250509 201014.815 INFO             PET3 index=  50                                     mpi_ft_detector_timeout : Timeout before we start suspecting a process after the last heartbeat reception (must be larger than 3*ompi_mpi_ft_detector_period)
20250509 201014.815 INFO             PET3 index=  51                              mpi_ft_detector_rdma_heartbeat : Use rdma put to deposit heartbeats into the observer memory
20250509 201014.816 INFO             PET3 index=  52                                             mpi_param_check : Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
20250509 201014.816 INFO             PET3 index=  53                                         mpi_yield_when_idle : Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
20250509 201014.816 INFO             PET3 index=  54                                         mpi_event_tick_rate : How often to progress TCP communications (0 = never, otherwise specified in microseconds)
20250509 201014.816 INFO             PET3 index=  55                                       mpi_show_handle_leaks : Whether MPI_FINALIZE shows all MPI handles that were not freed or not
20250509 201014.816 INFO             PET3 index=  56                                         mpi_no_free_handles : Whether to actually free MPI objects when their handles are freed
20250509 201014.816 INFO             PET3 index=  57                                mpi_show_mpi_alloc_mem_leaks : If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
20250509 201014.816 INFO             PET3 index=  58                                         mpi_show_mca_params : Whether to show all MCA parameter values during MPI_INIT or not (good for reproducibility of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
20250509 201014.816 INFO             PET3 index=  59                                    mpi_show_mca_params_file : If mpi_show_mca_params is true, setting this string to a valid filename tells 5.0.7 to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducibility of MPI jobs)
20250509 201014.816 INFO             PET3 index=  60                                          mpi_preconnect_mpi : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.816 INFO             PET3 index=  61                                          mpi_preconnect_all : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.816 INFO             PET3 index=  62                               mpi_have_sparse_group_storage : Whether this 5.0.7 installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
20250509 201014.816 INFO             PET3 index=  63                                mpi_use_sparse_group_storage : Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
20250509 201014.816 INFO             PET3 index=  64                                            mpi_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.816 INFO             PET3 index=  65                                 mpi_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.816 INFO             PET3 index=  66                                        mpi_add_procs_cutoff : Maximum world size for pre-allocating resources for all remote processes. Increasing this limit may improve communication performance at the cost of memory usage
20250509 201014.816 INFO             PET3 index=  67                                        mpi_dynamics_enabled : Is the MPI dynamic process functionality enabled (e.g., MPI_COMM_SPAWN)?  Default is yes, but certain transports and/or environments may disable it.
20250509 201014.816 INFO             PET3 index=  68                                              async_mpi_init : Do not perform a barrier at the end of MPI_Init
20250509 201014.816 INFO             PET3 index=  69                                          async_mpi_finalize : Do not perform a barrier at the beginning of MPI_Finalize
20250509 201014.816 INFO             PET3 index=  70                                             mpi_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.816 INFO             PET3 index=  71                                       mpi_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.816 INFO             PET3 index=  72                                             mpi_compat_mpi3 : A boolean value for whether Open MPI operates in MPI-3 compatibility mode; this changes the following behavior: in operations without a handle, errors are raised on (true) MPI_COMM_WORLD (MPI-3 behavior) or (false) MPI_COMM_SELF (MPI-4 behavior).
20250509 201014.816 INFO             PET3 index=  73                                    mpi_pmix_connect_timeout : Timeout(secs) for calls to PMIx_Connect. Default is no timeout.
20250509 201014.816 INFO             PET3 index=  74                                                 ompi_timing : Request that critical timing loops be measured
20250509 201014.816 INFO             PET3 index=  75                                       ompi_stream_buffering : Adjust buffering for stdout/stderr. (0) unbuffered, (1) line buffered, (2) fully buffered.
20250509 201014.816 INFO             PET3 index=  76                                            mpi_comm_verbose : Verbosity level for communicator management subsystem
20250509 201014.816 INFO             PET3 index=  77                                                          if : Default selection set of components for the if framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET3 index=  78                                             if_base_verbose : Verbosity level for the if framework (default: 0)
20250509 201014.817 INFO             PET3 index=  79                                      if_base_do_not_resolve : If nonzero, do not attempt to resolve interfaces
20250509 201014.817 INFO             PET3 index=  80                                     if_base_retain_loopback : If nonzero, retain loopback interfaces
20250509 201014.817 INFO             PET3 index=  81                                  if_bsdx_ipv6_major_version :
20250509 201014.817 INFO             PET3 index=  82                                  if_bsdx_ipv6_minor_version :
20250509 201014.817 INFO             PET3 index=  83                                if_bsdx_ipv6_release_version :
20250509 201014.817 INFO             PET3 index=  84                                 if_posix_ipv4_major_version :
20250509 201014.817 INFO             PET3 index=  85                                 if_posix_ipv4_minor_version :
20250509 201014.817 INFO             PET3 index=  86                               if_posix_ipv4_release_version :
20250509 201014.817 INFO             PET3 index=  87                                                     threads : Default selection set of components for the threads framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index=  88                                        threads_base_verbose : Verbosity level for the threads framework (default: 0)
20250509 201014.817 INFO             PET3 index=  89                             threads_pthreads_yield_strategy : Pthread yield strategy to use
20250509 201014.817 INFO             PET3 index=  90                             threads_pthreads_nanosleep_time : Number of nanoseconds to sleep when using nanosleep as the pthread yield strategy
20250509 201014.817 INFO             PET3 index=  91                              threads_pthreads_major_version :
20250509 201014.817 INFO             PET3 index=  92                              threads_pthreads_minor_version :
20250509 201014.817 INFO             PET3 index=  93                            threads_pthreads_release_version :
20250509 201014.817 INFO             PET3 index=  94                                                       hwloc : Default selection set of components for the hwloc framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index=  95                                          hwloc_base_verbose : Verbosity level for the hwloc framework (default: 0)
20250509 201014.817 INFO             PET3 index=  96                          hwloc_base_mem_bind_failure_action : What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
20250509 201014.817 INFO             PET3 index=  97                                                      memcpy : Default selection set of components for the memcpy framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index=  98                                         memcpy_base_verbose : Verbosity level for the memcpy framework (default: 0)
20250509 201014.817 INFO             PET3 index=  99                                                  memchecker : Default selection set of components for the memchecker framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index= 100                                     memchecker_base_verbose : Verbosity level for the memchecker framework (default: 0)
20250509 201014.817 INFO             PET3 index= 101                                                   backtrace : Default selection set of components for the backtrace framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index= 102                                      backtrace_base_verbose : Verbosity level for the backtrace framework (default: 0)
20250509 201014.817 INFO             PET3 index= 103                            backtrace_execinfo_major_version :
20250509 201014.817 INFO             PET3 index= 104                            backtrace_execinfo_minor_version :
20250509 201014.817 INFO             PET3 index= 105                          backtrace_execinfo_release_version :
20250509 201014.817 INFO             PET3 index= 106                                                       timer : Default selection set of components for the timer framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index= 107                                          timer_base_verbose : Verbosity level for the timer framework (default: 0)
20250509 201014.817 INFO             PET3 index= 108                                     timer_require_monotonic : Node-level monotonic timer required (default yes)
20250509 201014.817 INFO             PET3 index= 109                                  timer_darwin_major_version :
20250509 201014.817 INFO             PET3 index= 110                                  timer_darwin_minor_version :
20250509 201014.817 INFO             PET3 index= 111                                timer_darwin_release_version :
20250509 201014.817 INFO             PET3 index= 112                                                       shmem : Default selection set of components for the shmem framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET3 index= 113                                          shmem_base_verbose : Verbosity level for the shmem framework (default: 0)
20250509 201014.817 INFO             PET3 index= 114                               shmem_base_RUNTIME_QUERY_hint : Internal OMPI parameter used to provide a component selection hint to the shmem framework.  The value of this parameter is the name of the component that is available, selectable, and meets our run-time behavior requirements.
20250509 201014.817 INFO             PET3 index= 115                                         shmem_mmap_priority : Priority for shmem mmap component (default: 50)
20250509 201014.817 INFO             PET3 index= 116                               shmem_mmap_enable_nfs_warning : Enable the warning emitted when Open MPI detects that its shared memory backing file is located on a network filesystem (1 = enabled, 0 = disabled).
20250509 201014.817 INFO             PET3 index= 117                            shmem_mmap_relocate_backing_file : Whether to change the default placement of backing files or not (Negative = try to relocate backing files to an area rooted at the path specified by shmem_mmap_backing_file_base_dir, but continue with the default path if the relocation fails, 0 = do not relocate, Positive = same as the negative option, but will fail if the relocation fails.
20250509 201014.817 INFO             PET3 index= 118                            shmem_mmap_backing_file_base_dir : Specifies where backing files will be created when shmem_mmap_relocate_backing_file is in use.
20250509 201014.817 INFO             PET3 index= 119                                    shmem_mmap_major_version :
20250509 201014.817 INFO             PET3 index= 120                                    shmem_mmap_minor_version :
20250509 201014.817 INFO             PET3 index= 121                                  shmem_mmap_release_version :
20250509 201014.817 INFO             PET3 index= 130                                                   reachable : Default selection set of components for the reachable framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET3 index= 131                                      reachable_base_verbose : Verbosity level for the reachable framework (default: 0)
20250509 201014.818 INFO             PET3 index= 132                            reachable_weighted_major_version :
20250509 201014.818 INFO             PET3 index= 133                            reachable_weighted_minor_version :
20250509 201014.818 INFO             PET3 index= 134                          reachable_weighted_release_version :
20250509 201014.818 INFO             PET3 index= 135                                                        pmix : Default selection set of components for the pmix framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET3 index= 136                                           pmix_base_verbose : Verbosity level for the pmix framework (default: 0)
20250509 201014.818 INFO             PET3 index= 137                                       pmix_base_async_modex : Use asynchronous modex mode
20250509 201014.818 INFO             PET3 index= 138                                      pmix_base_collect_data : Collect all data during modex
20250509 201014.818 INFO             PET3 index= 139                                  pmix_base_exchange_timeout : Time (in seconds) to wait for a data exchange to complete
20250509 201014.818 INFO             PET3 index= 140                                                 accelerator : Default selection set of components for the accelerator framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET3 index= 141                                    accelerator_base_verbose : Verbosity level for the accelerator framework (default: 0)
20250509 201014.818 INFO             PET3 index= 142                              accelerator_null_major_version :
20250509 201014.818 INFO             PET3 index= 143                              accelerator_null_minor_version :
20250509 201014.818 INFO             PET3 index= 144                            accelerator_null_release_version :
20250509 201014.818 INFO             PET3 index= 145                                          opal_event_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.818 INFO             PET3 index= 146                                      event_external_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.818 INFO             PET3 index= 147                                          opal_event_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.818 INFO             PET3 index= 148                                          event_base_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.818 INFO             PET3 index= 149                                                        hook : Default selection set of components for the hook framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET3 index= 150                                           hook_base_verbose : Verbosity level for the hook framework (default: 0)
20250509 201014.818 INFO             PET3 index= 151                                    hook_comm_method_verbose :
20250509 201014.818 INFO             PET3 index= 152                                    hook_comm_method_display : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.818 INFO             PET3 index= 153                                           ompi_display_comm : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.818 INFO             PET3 index= 154                                        hook_comm_method_max : Number of hosts for which to print unabbreviated 2d table of comm methods.
20250509 201014.818 INFO             PET3 index= 155                                      hook_comm_method_brief : Only print the comm method summary, skip the 2d table.
20250509 201014.818 INFO             PET3 index= 156                                   hook_comm_method_fakefile : For debugging only: read comm methods from a file
20250509 201014.818 INFO             PET3 index= 157                              hook_comm_method_major_version :
20250509 201014.818 INFO             PET3 index= 158                              hook_comm_method_minor_version :
20250509 201014.818 INFO             PET3 index= 159                            hook_comm_method_release_version :
20250509 201014.818 INFO             PET3 index= 160                                                          op : Default selection set of components for the op framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET3 index= 161                                             op_base_verbose : Verbosity level for the op framework (default: 0)
20250509 201014.818 INFO             PET3 index= 162                               op_aarch64_hardware_available : Whether the Neon (1) or SVE (2) hardware is available
20250509 201014.818 INFO             PET3 index= 163                                 op_aarch64_double_supported : Whether the double precision data types are supported or not
20250509 201014.818 INFO             PET3 index= 164                                    op_aarch64_major_version :
20250509 201014.818 INFO             PET3 index= 165                                    op_aarch64_minor_version :
20250509 201014.818 INFO             PET3 index= 166                                  op_aarch64_release_version :
20250509 201014.818 INFO             PET3 index= 167                                                   allocator : Default selection set of components for the allocator framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET3 index= 168                                      allocator_base_verbose : Verbosity level for the allocator framework (default: 0)
20250509 201014.818 INFO             PET3 index= 169                               allocator_basic_major_version :
20250509 201014.818 INFO             PET3 index= 170                               allocator_basic_minor_version :
20250509 201014.818 INFO             PET3 index= 171                             allocator_basic_release_version :
20250509 201014.818 INFO             PET3 index= 172                                allocator_bucket_num_buckets :
20250509 201014.818 INFO             PET3 index= 173                              allocator_bucket_major_version :
20250509 201014.819 INFO             PET3 index= 174                              allocator_bucket_minor_version :
20250509 201014.819 INFO             PET3 index= 175                            allocator_bucket_release_version :
20250509 201014.819 INFO             PET3 index= 176                                                      rcache : Default selection set of components for the rcache framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET3 index= 177                                         rcache_base_verbose : Verbosity level for the rcache framework (default: 0)
20250509 201014.819 INFO             PET3 index= 178                                    rcache_grdma_print_stats : print registration cache usage statistics at the end of the run
20250509 201014.819 INFO             PET3 index= 179                                  rcache_grdma_major_version :
20250509 201014.819 INFO             PET3 index= 180                                  rcache_grdma_minor_version :
20250509 201014.819 INFO             PET3 index= 181                                rcache_grdma_release_version :
20250509 201014.819 INFO             PET3 index= 182                                                       mpool : Default selection set of components for the mpool framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET3 index= 183                                          mpool_base_verbose : Verbosity level for the mpool framework (default: 0)
20250509 201014.819 INFO             PET3 index= 184                                    mpool_base_default_hints : Hints to use when selecting the default memory pool
20250509 201014.819 INFO             PET3 index= 185                                 mpool_base_default_priority : Priority of the default mpool module
20250509 201014.819 INFO             PET3 index= 186                                     mpool_hugepage_priority : Default priority of the hugepage mpool component (default: 50)
20250509 201014.819 INFO             PET3 index= 187                                    mpool_hugepage_page_size : Default huge page size of the hugepage mpool component (default: 2M)
20250509 201014.819 INFO             PET3 index= 188                                mpool_hugepage_major_version :
20250509 201014.819 INFO             PET3 index= 189                                mpool_hugepage_minor_version :
20250509 201014.819 INFO             PET3 index= 190                              mpool_hugepage_release_version :
20250509 201014.819 INFO             PET3 index= 191                                                        smsc : Default selection set of components for the smsc framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET3 index= 192                                           smsc_base_verbose : Verbosity level for the smsc framework (default: 0)
20250509 201014.819 INFO             PET3 index= 193                                                         bml : Default selection set of components for the bml framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET3 index= 194                                            bml_base_verbose : Verbosity level for the bml framework (default: 0)
20250509 201014.819 INFO             PET3 index= 195                                  bml_r2_show_unreach_errors : Show error message when procs are unreachable
20250509 201014.819 INFO             PET3 index= 196                                        bml_r2_major_version :
20250509 201014.819 INFO             PET3 index= 197                                        bml_r2_minor_version :
20250509 201014.819 INFO             PET3 index= 198                                      bml_r2_release_version :
20250509 201014.819 INFO             PET3 index= 199                                                         btl : Default selection set of components for the btl framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET3 index= 200                                            btl_base_verbose : Verbosity level for the btl framework (default: 0)
20250509 201014.819 INFO             PET3 index= 201                           btl_base_thread_multiple_override : Enable BTLs that are not normally enabled when MPI_THREAD_MULTIPLE is enabled (THIS IS FOR DEVELOPERS ONLY!  SHOULD NOT BE USED BY END USERS!)
20250509 201014.819 INFO             PET3 index= 202                                            btl_base_include :
20250509 201014.819 INFO             PET3 index= 203                                            btl_base_exclude :
20250509 201014.819 INFO             PET3 index= 204                                    btl_base_warn_peer_error : This parameter is used to turn on warning messages when peers disconnect unexpectedly
20250509 201014.819 INFO             PET3 index= 205                              btl_base_warn_component_unused : This parameter is used to turn on warning messages when certain NICs are not used
20250509 201014.819 INFO             PET3 index= 206                                      btl_self_free_list_num : Number of fragments by default
20250509 201014.819 INFO             PET3 index= 207                                      btl_self_free_list_max : Maximum number of fragments
20250509 201014.819 INFO             PET3 index= 208                                      btl_self_free_list_inc : Increment by this number of fragments
20250509 201014.819 INFO             PET3 index= 209                                        btl_self_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET3 index= 210                                              btl_self_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET3 index= 211                                       btl_self_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET3 index= 212                                   btl_self_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.819 INFO             PET3 index= 213                                        btl_self_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET3 index= 214                                          btl_self_get_limit : Maximum size (in bytes) for btl get
20250509 201014.819 INFO             PET3 index= 215                                      btl_self_get_alignment : Alignment required for btl get
20250509 201014.819 INFO             PET3 index= 216                                          btl_self_put_limit : Maximum size (in bytes) for btl put
20250509 201014.819 INFO             PET3 index= 217                                      btl_self_put_alignment : Alignment required for btl put
20250509 201014.819 INFO             PET3 index= 218                          btl_self_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET3 index= 219                                      btl_self_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET3 index= 220                          btl_self_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET3 index= 221                            btl_self_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET3 index= 222                             btl_self_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET3 index= 223                                            btl_self_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.820 INFO             PET3 index= 224                                          btl_self_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.820 INFO             PET3 index= 225                                      btl_self_major_version :
20250509 201014.820 INFO             PET3 index= 226                                      btl_self_minor_version :
20250509 201014.820 INFO             PET3 index= 227                                    btl_self_release_version :
20250509 201014.820 INFO             PET3 index= 228                                        btl_sm_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.820 INFO             PET3 index= 229                                     btl_vader_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.820 INFO             PET3 index= 230                                        btl_sm_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.820 INFO             PET3 index= 231                                     btl_vader_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.820 INFO             PET3 index= 232                                        btl_sm_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.820 INFO             PET3 index= 233                                     btl_vader_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.820 INFO             PET3 index= 234                                         btl_sm_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.820 INFO             PET3 index= 235                                      btl_vader_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.820 INFO             PET3 index= 236                                         btl_sm_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.820 INFO             PET3 index= 237                                      btl_vader_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.820 INFO             PET3 index= 238                                      btl_sm_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.820 INFO             PET3 index= 239                                   btl_vader_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.820 INFO             PET3 index= 240                                       btl_sm_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.820 INFO             PET3 index= 241                                    btl_vader_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.820 INFO             PET3 index= 242                                             btl_sm_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.820 INFO             PET3 index= 243                                          btl_vader_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.820 INFO             PET3 index= 244                                            btl_sm_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.820 INFO             PET3 index= 245                                         btl_vader_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.820 INFO             PET3 index= 246                                    btl_sm_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.820 INFO             PET3 index= 247                                 btl_vader_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.820 INFO             PET3 index= 248                                          btl_sm_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET3 index= 249                                       btl_vader_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET3 index= 250                                                btl_sm_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET3 index= 251                                             btl_vader_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET3 index= 252                                         btl_sm_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET3 index= 253                                      btl_vader_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET3 index= 254                                     btl_sm_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET3 index= 255                                  btl_vader_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET3 index= 256                                          btl_sm_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET3 index= 257                                       btl_vader_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET3 index= 258                            btl_sm_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET3 index= 259                         btl_vader_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET3 index= 260                                        btl_sm_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET3 index= 261                                     btl_vader_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET3 index= 262                                        btl_sm_major_version :
20250509 201014.820 INFO             PET3 index= 263                                     btl_vader_major_version :
20250509 201014.820 INFO             PET3 index= 264                                        btl_sm_minor_version :
20250509 201014.820 INFO             PET3 index= 265                                     btl_vader_minor_version :
20250509 201014.820 INFO             PET3 index= 266                                      btl_sm_release_version :
20250509 201014.820 INFO             PET3 index= 267                                   btl_vader_release_version :
20250509 201014.820 INFO             PET3 index= 268                                               btl_tcp_links :
20250509 201014.821 INFO             PET3 index= 269                                          btl_tcp_if_include : Comma-delimited list of devices and/or CIDR notation of networks to use for MPI communication (e.g., "eth0,192.168.0.0/16").  Mutually exclusive with btl_tcp_if_exclude.
20250509 201014.821 INFO             PET3 index= 270                                          btl_tcp_if_exclude : Comma-delimited list of devices and/or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,192.168.0.0/16").  If set to a non-default value, it is mutually exclusive with btl_tcp_if_include.
20250509 201014.821 INFO             PET3 index= 271                                       btl_tcp_free_list_num :
20250509 201014.821 INFO             PET3 index= 272                                       btl_tcp_free_list_max :
20250509 201014.821 INFO             PET3 index= 273                                       btl_tcp_free_list_inc :
20250509 201014.821 INFO             PET3 index= 274                                              btl_tcp_sndbuf : The size of the send buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a send buffer size.
20250509 201014.821 INFO             PET3 index= 275                                              btl_tcp_rcvbuf : The size of the receive buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a receive buffer size.
20250509 201014.821 INFO             PET3 index= 276                                      btl_tcp_endpoint_cache : The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
20250509 201014.821 INFO             PET3 index= 277                                           btl_tcp_use_nagle : Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
20250509 201014.821 INFO             PET3 index= 278                                         btl_tcp_port_min_v4 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.821 INFO             PET3 index= 279                                       btl_tcp_port_range_v4 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.821 INFO             PET3 index= 280                                         btl_tcp_port_min_v6 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.821 INFO             PET3 index= 281                                       btl_tcp_port_range_v6 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.821 INFO             PET3 index= 282                                     btl_tcp_progress_thread :
20250509 201014.821 INFO             PET3 index= 283                         btl_tcp_warn_all_unfound_interfaces : Issue a warning for all unfound interfaces included in if_exclude
20250509 201014.821 INFO             PET3 index= 284                                         btl_tcp_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.821 INFO             PET3 index= 285                                               btl_tcp_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.821 INFO             PET3 index= 286                                        btl_tcp_atomic_flags : BTL atomic support flags
20250509 201014.821 INFO             PET3 index= 287                                    btl_tcp_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.821 INFO             PET3 index= 288                                         btl_tcp_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.821 INFO             PET3 index= 289                                           btl_tcp_put_limit : Maximum size (in bytes) for btl put
20250509 201014.821 INFO             PET3 index= 290                                       btl_tcp_put_alignment : Alignment required for btl put
20250509 201014.821 INFO             PET3 index= 291                           btl_tcp_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.821 INFO             PET3 index= 292                                       btl_tcp_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.821 INFO             PET3 index= 293                           btl_tcp_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET3 index= 294                             btl_tcp_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET3 index= 295                              btl_tcp_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.821 INFO             PET3 index= 296                                             btl_tcp_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.821 INFO             PET3 index= 297                                           btl_tcp_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.821 INFO             PET3 index= 298                                      btl_tcp_disable_family :
20250509 201014.821 INFO             PET3 index= 299                                       btl_tcp_major_version :
20250509 201014.821 INFO             PET3 index= 300                                       btl_tcp_minor_version :
20250509 201014.821 INFO             PET3 index= 301                                     btl_tcp_release_version :
20250509 201014.821 INFO             PET3 index= 302                                                         pml : Default selection set of components for the pml framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET3 index= 303                                            pml_base_verbose : Verbosity level for the pml framework (default: 0)
20250509 201014.821 INFO             PET3 index= 304                                    pml_base_bsend_allocator :
20250509 201014.821 INFO             PET3 index= 305                                            pml_base_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.821 INFO             PET3 index= 306                                                 pml_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.821 INFO             PET3 index= 307                                          pml_base_check_pml : Whether to check the pml selections to ensure they all match
20250509 201014.821 INFO             PET3 index= 320                                             pml_ob1_verbose :
20250509 201014.821 INFO             PET3 index= 321                                       pml_ob1_free_list_num :
20250509 201014.821 INFO             PET3 index= 322                                       pml_ob1_free_list_max :
20250509 201014.821 INFO             PET3 index= 323                                       pml_ob1_free_list_inc :
20250509 201014.821 INFO             PET3 index= 324                                            pml_ob1_priority :
20250509 201014.821 INFO             PET3 index= 325                                 pml_ob1_send_pipeline_depth :
20250509 201014.822 INFO             PET3 index= 326                                 pml_ob1_recv_pipeline_depth :
20250509 201014.822 INFO             PET3 index= 327                                pml_ob1_max_rdma_per_request :
20250509 201014.822 INFO             PET3 index= 328                                  pml_ob1_max_send_per_range :
20250509 201014.822 INFO             PET3 index= 329                                    pml_ob1_unexpected_limit :
20250509 201014.822 INFO             PET3 index= 330                                        pml_ob1_use_all_rdma : Use all available RDMA btls for the RDMA and RDMA pipeline protocols (default: false)
20250509 201014.822 INFO             PET3 index= 331                                           pml_ob1_allocator : Name of allocator component for unexpected messages
20250509 201014.822 INFO             PET3 index= 332                              pml_ob1_accelerator_events_max : Number of events created by the ob1 component internally
20250509 201014.822 INFO             PET3 index= 333                                       pml_ob1_major_version :
20250509 201014.822 INFO             PET3 index= 334                                       pml_ob1_minor_version :
20250509 201014.822 INFO             PET3 index= 335                                     pml_ob1_release_version :
20250509 201014.822 INFO             PET3 index= 339                                                   vprotocol : Specify a specific vprotocol to use
20250509 201014.822 INFO             PET3 index= 343                                                         mtl : Default selection set of components for the mtl framework (<none> means use all components that can be found)
20250509 201014.822 INFO             PET3 index= 344                                            mtl_base_verbose : Verbosity level for the mtl framework (default: 0)
20250509 201014.822 INFO             PET3 index= 345                                      vprotocol_base_verbose : Verbosity level for the vprotocol framework (default: 0)
20250509 201014.822 INFO             PET3 index= 346                                vprotocol_pessimist_priority :
20250509 201014.822 INFO             PET3 index= 347                           vprotocol_pessimist_free_list_num :
20250509 201014.822 INFO             PET3 index= 348                           vprotocol_pessimist_free_list_max :
20250509 201014.822 INFO             PET3 index= 349                           vprotocol_pessimist_free_list_inc :
20250509 201014.822 INFO             PET3 index= 350                      vprotocol_pessimist_sender_based_chunk :
20250509 201014.822 INFO             PET3 index= 351                       vprotocol_pessimist_event_buffer_size :
20250509 201014.822 INFO             PET3 index= 352                       vprotocol_pessimist_sender_based_file :
20250509 201014.822 INFO             PET3 index= 353                   vprotocol_pessimist_allow_thread_multiple : Allow the PML V to work even when the MPI library is initialized with MPI_THREAD_MULTIPLE support. By default the PML V is disabled in such instances, to protect applications that are not send deterministic.
20250509 201014.822 INFO             PET3 index= 354                           vprotocol_pessimist_major_version :
20250509 201014.822 INFO             PET3 index= 355                           vprotocol_pessimist_minor_version :
20250509 201014.822 INFO             PET3 index= 356                         vprotocol_pessimist_release_version :
20250509 201014.822 INFO             PET3 index= 357                                                        coll : Default selection set of components for the coll framework (<none> means use all components that can be found)
20250509 201014.822 INFO             PET3 index= 358                                           coll_base_verbose : Verbosity level for the coll framework (default: 0)
20250509 201014.822 INFO             PET3 index= 359                                         coll_adapt_priority : Priority of the adapt coll component
20250509 201014.822 INFO             PET3 index= 360                                          coll_adapt_verbose : Verbose level (default set to the collective framework verbosity)
20250509 201014.822 INFO             PET3 index= 361                            coll_adapt_context_free_list_min : Minimum number of segments in context free list
20250509 201014.822 INFO             PET3 index= 362                            coll_adapt_context_free_list_max : Maximum number of segments in context free list
20250509 201014.822 INFO             PET3 index= 363                            coll_adapt_context_free_list_inc : Increasement number of segments in context free list
20250509 201014.822 INFO             PET3 index= 364                                  coll_adapt_bcast_algorithm : Algorithm of broadcast, 0: tuned, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.822 INFO             PET3 index= 365                               coll_adapt_bcast_segment_size : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET3 index= 366                          coll_adapt_bcast_max_send_requests : Maximum number of send requests
20250509 201014.822 INFO             PET3 index= 367                          coll_adapt_bcast_max_recv_requests : Maximum number of receive requests
20250509 201014.822 INFO             PET3 index= 368                           coll_adapt_bcast_synchronous_send : Whether to use synchronous send operations during setup of bcast operations
20250509 201014.822 INFO             PET3 index= 369                                 coll_adapt_reduce_algorithm : Algorithm of reduce, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.822 INFO             PET3 index= 370                              coll_adapt_reduce_segment_size : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.822 INFO             PET3 index= 371                         coll_adapt_reduce_max_send_requests : Maximum number of send requests
20250509 201014.822 INFO             PET3 index= 372                         coll_adapt_reduce_max_recv_requests : Maximum number of receive requests per peer
20250509 201014.822 INFO             PET3 index= 373                              coll_adapt_inbuf_free_list_min : Minimum number of segment in inbuf free list
20250509 201014.822 INFO             PET3 index= 374                              coll_adapt_inbuf_free_list_max : Maximum number of segment in inbuf free list
20250509 201014.822 INFO             PET3 index= 375                              coll_adapt_inbuf_free_list_inc : Number of segments to allocate when growing the inbuf free list
20250509 201014.822 INFO             PET3 index= 376                          coll_adapt_reduce_synchronous_send : Whether to use synchronous send operations during setup of reduce operations
20250509 201014.822 INFO             PET3 index= 377                                    coll_adapt_major_version :
20250509 201014.822 INFO             PET3 index= 378                                    coll_adapt_minor_version :
20250509 201014.822 INFO             PET3 index= 379                                  coll_adapt_release_version :
20250509 201014.823 INFO             PET3 index= 380                                         coll_basic_priority : Priority of the basic coll component
20250509 201014.823 INFO             PET3 index= 381                                        coll_basic_crossover : Minimum number of processes in a communicator before using the logarithmic algorithms
20250509 201014.823 INFO             PET3 index= 382                                    coll_basic_major_version :
20250509 201014.823 INFO             PET3 index= 383                                    coll_basic_minor_version :
20250509 201014.823 INFO             PET3 index= 384                                  coll_basic_release_version :
20250509 201014.823 INFO             PET3 index= 385                                           coll_han_priority : Priority of the HAN coll component
20250509 201014.823 INFO             PET3 index= 386                                            coll_han_verbose : Verbosity of the HAN coll component (use coll base verbosity if not set)
20250509 201014.823 INFO             PET3 index= 387                                      coll_han_bcast_segsize : segment size for bcast
20250509 201014.823 INFO             PET3 index= 388                                    coll_han_bcast_up_module : up level module for bcast, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET3 index= 389                                   coll_han_bcast_low_module : low level module for bcast, 0 tuned, 1 sm
20250509 201014.823 INFO             PET3 index= 390                                     coll_han_reduce_segsize : segment size for reduce
20250509 201014.823 INFO             PET3 index= 391                                   coll_han_reduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET3 index= 392                                  coll_han_reduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.823 INFO             PET3 index= 393                                  coll_han_allreduce_segsize : segment size for allreduce
20250509 201014.823 INFO             PET3 index= 394                                coll_han_allreduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET3 index= 395                               coll_han_allreduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.823 INFO             PET3 index= 396                                coll_han_allgather_up_module : up level module for allgather, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET3 index= 397                               coll_han_allgather_low_module : low level module for allgather, 0 tuned, 1 sm
20250509 201014.823 INFO             PET3 index= 398                                   coll_han_gather_up_module : up level module for gather, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET3 index= 399                                  coll_han_gather_low_module : low level module for gather, 0 tuned, 1 sm
20250509 201014.823 INFO             PET3 index= 400                                  coll_han_scatter_up_module : up level module for scatter, 0 libnbc, 1 adapt
20250509 201014.823 INFO             PET3 index= 401                                 coll_han_scatter_low_module : low level module for scatter, 0 tuned, 1 sm
20250509 201014.823 INFO             PET3 index= 402                                       coll_han_reproducible : whether we need reproducible results (enabling this disables optimisations using topology)0 disable 1 enable, default 0
20250509 201014.823 INFO             PET3 index= 403                            coll_han_use_allgather_algorithm : which han algorithm is used for allgather
20250509 201014.823 INFO             PET3 index= 404                            coll_han_use_allreduce_algorithm : which han algorithm is used for allreduce
20250509 201014.823 INFO             PET3 index= 405                              coll_han_use_barrier_algorithm : which han algorithm is used for barrier
20250509 201014.823 INFO             PET3 index= 406                                coll_han_use_bcast_algorithm : which han algorithm is used for bcast
20250509 201014.823 INFO             PET3 index= 407                               coll_han_use_gather_algorithm : which han algorithm is used for gather
20250509 201014.823 INFO             PET3 index= 408                               coll_han_use_reduce_algorithm : which han algorithm is used for reduce
20250509 201014.823 INFO             PET3 index= 409                              coll_han_use_scatter_algorithm : which han algorithm is used for scatter
20250509 201014.823 INFO             PET3 index= 410                               coll_han_use_simple_allgather : whether to enable simple algorithm for allgather. Prefer use_allgather_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET3 index= 411                               coll_han_use_simple_allreduce : whether to enable simple algorithm for allreduce. Prefer use_allreduce_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET3 index= 412                                   coll_han_use_simple_bcast : whether to enable simple algorithm for bcast. Prefer use_bcast_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET3 index= 413                                  coll_han_use_simple_gather : whether to enable simple algorithm for gather. Prefer use_gather_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET3 index= 414                                  coll_han_use_simple_reduce : whether to enable simple algorithm for reduce. Prefer use_reduce_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET3 index= 415                                 coll_han_use_simple_scatter : whether to enable simple algorithm for scatter. Prefer use_scatter_algorithm=simple or configuration file instead.
20250509 201014.823 INFO             PET3 index= 416                coll_han_allgather_dynamic_intra_node_module : Collective module to use for allgather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 417                coll_han_allgather_dynamic_inter_node_module : Collective module to use for allgather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 418       coll_han_allgather_dynamic_global_communicator_module : Collective module to use for allgather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET3 index= 419               coll_han_allgatherv_dynamic_intra_node_module : Collective module to use for allgatherv on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 420               coll_han_allgatherv_dynamic_inter_node_module : Collective module to use for allgatherv on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 421      coll_han_allgatherv_dynamic_global_communicator_module : Collective module to use for allgatherv on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET3 index= 422                coll_han_allreduce_dynamic_intra_node_module : Collective module to use for allreduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 423                coll_han_allreduce_dynamic_inter_node_module : Collective module to use for allreduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 424       coll_han_allreduce_dynamic_global_communicator_module : Collective module to use for allreduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET3 index= 425                  coll_han_barrier_dynamic_intra_node_module : Collective module to use for barrier on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 426                  coll_han_barrier_dynamic_inter_node_module : Collective module to use for barrier on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET3 index= 427         coll_han_barrier_dynamic_global_communicator_module : Collective module to use for barrier on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET3 index= 428                    coll_han_bcast_dynamic_intra_node_module : Collective module to use for bcast on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 429                    coll_han_bcast_dynamic_inter_node_module : Collective module to use for bcast on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 430           coll_han_bcast_dynamic_global_communicator_module : Collective module to use for bcast on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET3 index= 431                   coll_han_gather_dynamic_intra_node_module : Collective module to use for gather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 432                   coll_han_gather_dynamic_inter_node_module : Collective module to use for gather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 433          coll_han_gather_dynamic_global_communicator_module : Collective module to use for gather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET3 index= 434                   coll_han_reduce_dynamic_intra_node_module : Collective module to use for reduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 435                   coll_han_reduce_dynamic_inter_node_module : Collective module to use for reduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 436          coll_han_reduce_dynamic_global_communicator_module : Collective module to use for reduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET3 index= 437                  coll_han_scatter_dynamic_intra_node_module : Collective module to use for scatter on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 438                  coll_han_scatter_dynamic_inter_node_module : Collective module to use for scatter on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.824 INFO             PET3 index= 439         coll_han_scatter_dynamic_global_communicator_module : Collective module to use for scatter on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.824 INFO             PET3 index= 440                             coll_han_use_dynamic_file_rules : Enable the dynamic selection provided via the dynamic_rules_filename MCA
20250509 201014.824 INFO             PET3 index= 441                             coll_han_dynamic_rules_filename : Configuration file containing the dynamic selection rules
20250509 201014.824 INFO             PET3 index= 442                                 coll_han_dump_dynamic_rules : Switch used to decide if we dump  dynamic rules provided by configuration file
20250509 201014.824 INFO             PET3 index= 443                                 coll_han_max_dynamic_errors : Number of dynamic rules module/function errors printed on rank 0 with a 0 verbosity.Useless if coll_base_verbose is 30 or more.
20250509 201014.824 INFO             PET3 index= 444                                      coll_han_major_version :
20250509 201014.824 INFO             PET3 index= 445                                      coll_han_minor_version :
20250509 201014.824 INFO             PET3 index= 446                                    coll_han_release_version :
20250509 201014.824 INFO             PET3 index= 447                                         coll_inter_priority : Priority of the inter coll component
20250509 201014.824 INFO             PET3 index= 448                                          coll_inter_verbose : Turn verbose message of the inter coll component on/off
20250509 201014.824 INFO             PET3 index= 449                                    coll_inter_major_version :
20250509 201014.825 INFO             PET3 index= 450                                    coll_inter_minor_version :
20250509 201014.825 INFO             PET3 index= 451                                  coll_inter_release_version :
20250509 201014.825 INFO             PET3 index= 452                                        coll_libnbc_priority : Priority of the libnbc coll component
20250509 201014.825 INFO             PET3 index= 453                         coll_libnbc_ibcast_skip_dt_decision : In ibcast only use size of communicator to choose algorithm, exclude data type signature. Set to 'false' to use data type signature in decision. WARNING: If you set this to 'false' then your application should not use non-uniform data type signatures in calls to ibcast.
20250509 201014.825 INFO             PET3 index= 454                            coll_libnbc_iallgather_algorithm : Which iallgather algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.825 INFO             PET3 index= 455                            coll_libnbc_iallreduce_algorithm : Which iallreduce algorithm is used: 0 ignore, 1 ring, 2 binomial, 3 rabenseifner, 4 recursive_doubling
20250509 201014.825 INFO             PET3 index= 456                                coll_libnbc_ibcast_algorithm : Which ibcast algorithm is used: 0 ignore, 1 linear, 2 binomial, 3 chain, 4 knomial
20250509 201014.825 INFO             PET3 index= 457                            coll_libnbc_ibcast_knomial_radix : k-nomial tree radix for the ibcast algorithm (radix > 1)
20250509 201014.825 INFO             PET3 index= 458                               coll_libnbc_iexscan_algorithm : Which iexscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.825 INFO             PET3 index= 459                               coll_libnbc_ireduce_algorithm : Which ireduce algorithm is used: 0 ignore, 1 chain, 2 binomial, 3 rabenseifner
20250509 201014.825 INFO             PET3 index= 460                                 coll_libnbc_iscan_algorithm : Which iscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.825 INFO             PET3 index= 461                                   coll_libnbc_major_version :
20250509 201014.825 INFO             PET3 index= 462                                   coll_libnbc_minor_version :
20250509 201014.825 INFO             PET3 index= 463                                 coll_libnbc_release_version :
20250509 201014.825 INFO             PET3 index= 464                                          coll_self_priority :
20250509 201014.825 INFO             PET3 index= 465                                     coll_self_major_version :
20250509 201014.825 INFO             PET3 index= 466                                     coll_self_minor_version :
20250509 201014.825 INFO             PET3 index= 467                                   coll_self_release_version :
20250509 201014.825 INFO             PET3 index= 468                                          coll_sync_priority : Priority of the sync coll component; only relevant if barrier_before or barrier_after is > 0
20250509 201014.825 INFO             PET3 index= 469                                    coll_sync_barrier_before : Do a synchronization before each Nth collective
20250509 201014.825 INFO             PET3 index= 470                                     coll_sync_barrier_after : Do a synchronization after each Nth collective
20250509 201014.825 INFO             PET3 index= 471                                     coll_sync_major_version :
20250509 201014.825 INFO             PET3 index= 472                                     coll_sync_minor_version :
20250509 201014.825 INFO             PET3 index= 473                                   coll_sync_release_version :
20250509 201014.825 INFO             PET3 index= 474                                         coll_tuned_priority : Priority of the tuned coll component
20250509 201014.825 INFO             PET3 index= 475                                 coll_tuned_init_tree_fanout : Initial fanout used in the tree topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.825 INFO             PET3 index= 476                                coll_tuned_init_chain_fanout : Initial fanout used in the chain (fanout followed by pipeline) topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.825 INFO             PET3 index= 477                               coll_tuned_alltoall_small_msg : threshold (if supported) to decide if small MSGs alltoall algorithm will be used
20250509 201014.825 INFO             PET3 index= 478                        coll_tuned_alltoall_intermediate_msg : threshold (if supported) to decide if intermediate MSGs alltoall algorithm will be used
20250509 201014.825 INFO             PET3 index= 479                                coll_tuned_use_dynamic_rules : Switch used to decide if we use static (compiled/if statements) or dynamic (built at runtime) decision function rules
20250509 201014.825 INFO             PET3 index= 480                           coll_tuned_dynamic_rules_filename : Filename of configuration file that contains the dynamic (@runtime) decision function rules
20250509 201014.825 INFO             PET3 index= 481                        coll_tuned_allreduce_algorithm_count : Number of allreduce algorithms available
20250509 201014.825 INFO             PET3 index= 482                              coll_tuned_allreduce_algorithm : Which allreduce algorithm is used. Can be locked down to any of: 0 ignore, 1 basic linear, 2 nonoverlapping (tuned reduce + tuned bcast), 3 recursive doubling, 4 ring, 5 segmented ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET3 index= 483                  coll_tuned_allreduce_algorithm_segmentsize : Segment size in bytes used by default for allreduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET3 index= 484                  coll_tuned_allreduce_algorithm_tree_fanout : Fanout for n-tree used for allreduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET3 index= 485                 coll_tuned_allreduce_algorithm_chain_fanout : Fanout for chains used for allreduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET3 index= 486                         coll_tuned_alltoall_algorithm_count : Number of alltoall algorithms available
20250509 201014.826 INFO             PET3 index= 487                               coll_tuned_alltoall_algorithm : Which alltoall algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise, 3: modified bruck, 4: linear with sync, 5:two proc only. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET3 index= 488                   coll_tuned_alltoall_algorithm_segmentsize : Segment size in bytes used by default for alltoall algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.826 INFO             PET3 index= 489                   coll_tuned_alltoall_algorithm_tree_fanout : Fanout for n-tree used for alltoall algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.826 INFO             PET3 index= 490                  coll_tuned_alltoall_algorithm_chain_fanout : Fanout for chains used for alltoall algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.826 INFO             PET3 index= 491                               coll_tuned_alltoall_large_msg : use pairwise exchange algorithm for messages larger than this value
20250509 201014.826 INFO             PET3 index= 492                               coll_tuned_alltoall_min_procs : use pairwise exchange algorithm for communicators larger than this value
20250509 201014.826 INFO             PET3 index= 493                  coll_tuned_alltoall_algorithm_max_requests : Maximum number of outstanding send or recv requests.  Only has meaning for synchronized algorithms.
20250509 201014.826 INFO             PET3 index= 494                        coll_tuned_allgather_algorithm_count : Number of allgather algorithms available
20250509 201014.826 INFO             PET3 index= 495                              coll_tuned_allgather_algorithm : Which allgather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 bruck, 3 recursive doubling, 4 ring, 5 neighbor exchange, 6: two proc only, 7: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET3 index= 496                  coll_tuned_allgather_algorithm_segmentsize : Segment size in bytes used by default for allgather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.826 INFO             PET3 index= 497                  coll_tuned_allgather_algorithm_tree_fanout : Fanout for n-tree used for allgather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.826 INFO             PET3 index= 498                 coll_tuned_allgather_algorithm_chain_fanout : Fanout for chains used for allgather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.826 INFO             PET3 index= 499                       coll_tuned_allgatherv_algorithm_count : Number of allgatherv algorithms available
20250509 201014.826 INFO             PET3 index= 500                             coll_tuned_allgatherv_algorithm : Which allgatherv algorithm is used. Can be locked down to choice of: 0 ignore, 1 default (allgathervv + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5: two proc only, 6: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET3 index= 501                 coll_tuned_allgatherv_algorithm_segmentsize : Segment size in bytes used by default for allgatherv algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.826 INFO             PET3 index= 502                 coll_tuned_allgatherv_algorithm_tree_fanout : Fanout for n-tree used for allgatherv algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.826 INFO             PET3 index= 503                coll_tuned_allgatherv_algorithm_chain_fanout : Fanout for chains used for allgatherv algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.826 INFO             PET3 index= 504                        coll_tuned_alltoallv_algorithm_count : Number of alltoallv algorithms available
20250509 201014.826 INFO             PET3 index= 505                              coll_tuned_alltoallv_algorithm : Which alltoallv algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET3 index= 506                          coll_tuned_barrier_algorithm_count : Number of barrier algorithms available
20250509 201014.826 INFO             PET3 index= 507                                coll_tuned_barrier_algorithm : Which barrier algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 double ring, 3: recursive doubling 4: bruck, 5: two proc only, 6: tree. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET3 index= 508                            coll_tuned_bcast_algorithm_count : Number of bcast algorithms available
20250509 201014.827 INFO             PET3 index= 509                                  coll_tuned_bcast_algorithm : Which bcast algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 chain, 3: pipeline, 4: split binary tree, 5: binary tree, 6: binomial tree, 7: knomial tree, 8: scatter_allgather, 9: scatter_allgather_ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 510                      coll_tuned_bcast_algorithm_segmentsize : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.827 INFO             PET3 index= 511                      coll_tuned_bcast_algorithm_tree_fanout : Fanout for n-tree used for bcast algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.827 INFO             PET3 index= 512                     coll_tuned_bcast_algorithm_chain_fanout : Fanout for chains used for bcast algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.827 INFO             PET3 index= 513                    coll_tuned_bcast_algorithm_knomial_radix : k-nomial tree radix for the bcast algorithm (radix > 1).
20250509 201014.827 INFO             PET3 index= 514                           coll_tuned_reduce_algorithm_count : Number of reduce algorithms available
20250509 201014.827 INFO             PET3 index= 515                                 coll_tuned_reduce_algorithm : Which reduce algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 chain, 3 pipeline, 4 binary, 5 binomial, 6 in-order binary, 7 rabenseifner. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 516                     coll_tuned_reduce_algorithm_segmentsize : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.827 INFO             PET3 index= 517                     coll_tuned_reduce_algorithm_tree_fanout : Fanout for n-tree used for reduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.827 INFO             PET3 index= 518                    coll_tuned_reduce_algorithm_chain_fanout : Fanout for chains used for reduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.827 INFO             PET3 index= 519                    coll_tuned_reduce_algorithm_max_requests : Maximum number of outstanding send requests on leaf nodes. 0 means no limit.
20250509 201014.827 INFO             PET3 index= 520                   coll_tuned_reduce_scatter_algorithm_count : Number of reduce_scatter algorithms available
20250509 201014.827 INFO             PET3 index= 521                         coll_tuned_reduce_scatter_algorithm : Which reduce reduce_scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 non-overlapping (Reduce + Scatterv), 2 recursive halving, 3 ring, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 522             coll_tuned_reduce_scatter_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.827 INFO             PET3 index= 523             coll_tuned_reduce_scatter_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.827 INFO             PET3 index= 524            coll_tuned_reduce_scatter_algorithm_chain_fanout : Fanout for chains used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.827 INFO             PET3 index= 525             coll_tuned_reduce_scatter_block_algorithm_count : Number of reduce_scatter_block algorithms available
20250509 201014.827 INFO             PET3 index= 526                   coll_tuned_reduce_scatter_block_algorithm : Which reduce reduce_scatter_block algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic_linear, 2 recursive_doubling, 3 recursive_halving, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 527       coll_tuned_reduce_scatter_block_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.827 INFO             PET3 index= 528       coll_tuned_reduce_scatter_block_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.827 INFO             PET3 index= 529                           coll_tuned_gather_algorithm_count : Number of gather algorithms available
20250509 201014.827 INFO             PET3 index= 530                                 coll_tuned_gather_algorithm : Which gather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 linear with synchronization. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 531                     coll_tuned_gather_algorithm_segmentsize : Segment size in bytes used by default for gather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.827 INFO             PET3 index= 532                     coll_tuned_gather_algorithm_tree_fanout : Fanout for n-tree used for gather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.827 INFO             PET3 index= 533                    coll_tuned_gather_algorithm_chain_fanout : Fanout for chains used for gather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.827 INFO             PET3 index= 534                          coll_tuned_scatter_algorithm_count : Number of scatter algorithms available
20250509 201014.827 INFO             PET3 index= 535                                coll_tuned_scatter_algorithm : Which scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 non-blocking linear. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 536                    coll_tuned_scatter_algorithm_segmentsize : Segment size in bytes used by default for scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.827 INFO             PET3 index= 537                    coll_tuned_scatter_algorithm_tree_fanout : Fanout for n-tree used for scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.827 INFO             PET3 index= 538                   coll_tuned_scatter_algorithm_chain_fanout : Fanout for chains used for scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.827 INFO             PET3 index= 539                                coll_tuned_scatter_min_procs : use basic linear algorithm for communicators larger than this value
20250509 201014.827 INFO             PET3 index= 540                   coll_tuned_scatter_algorithm_max_requests : Issue a blocking send every this many non-blocking requests. Only has meaning for non-blocking linear algorithm.
20250509 201014.827 INFO             PET3 index= 541                         coll_tuned_scatter_intermediate_msg : use non-blocking linear algorithm for messages larger than this value
20250509 201014.827 INFO             PET3 index= 542                                coll_tuned_scatter_large_msg : use linear algorithm for messages larger than this value
20250509 201014.827 INFO             PET3 index= 543                           coll_tuned_exscan_algorithm_count : Number of exscan algorithms available
20250509 201014.827 INFO             PET3 index= 544                                 coll_tuned_exscan_algorithm : Which exscan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 545                             coll_tuned_scan_algorithm_count : Number of scan algorithms available
20250509 201014.827 INFO             PET3 index= 546                                   coll_tuned_scan_algorithm : Which scan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.827 INFO             PET3 index= 547                                    coll_tuned_major_version :
20250509 201014.827 INFO             PET3 index= 548                                    coll_tuned_minor_version :
20250509 201014.827 INFO             PET3 index= 549                                  coll_tuned_release_version :
20250509 201014.827 INFO             PET3 index= 550                                       coll_ftagree_priority : Priority of the ftagree coll component
20250509 201014.828 INFO             PET3 index= 551                                      coll_ftagree_agreement : Agreement algorithm 0: Allreduce (NOT FAULT TOLERANT); 1: Early Returning Consensus (era); 2: Early Terminating Consensus (eta)
20250509 201014.828 INFO             PET3 index= 552                                   coll_ftagree_era_topology : ERA topology 1: binary tree; 2: star tree; 3: string tree
20250509 201014.828 INFO             PET3 index= 553                                    coll_ftagree_era_rebuild : ERA rebuild/rebalance the tree in a first post-failure agreement 0: no rebalancing; 1: rebalance all the time
20250509 201014.828 INFO             PET3 index= 554                                  coll_ftagree_major_version :
20250509 201014.828 INFO             PET3 index= 555                                  coll_ftagree_minor_version :
20250509 201014.828 INFO             PET3 index= 556                                coll_ftagree_release_version :
20250509 201014.828 INFO             PET3 index= 560                                            coll_sm_priority : Priority of the sm coll component
20250509 201014.828 INFO             PET3 index= 561                                        coll_sm_control_size : Length of the control data -- should usually be either the length of a cache line on most SMPs, or the size of a page on machines that support direct memory affinity page placement (in bytes)
20250509 201014.828 INFO             PET3 index= 562                                       coll_sm_fragment_size : Fragment size (in bytes) used for passing data through shared memory (will be rounded up to the nearest control_size size)
20250509 201014.828 INFO             PET3 index= 563                                   coll_sm_comm_in_use_flags : Number of "in use" flags, used to mark a message passing area segment as currently being used or not (must be >= 2 and <= comm_num_segments)
20250509 201014.828 INFO             PET3 index= 564                                   coll_sm_comm_num_segments : Number of segments in each communicator's shared memory message passing area (must be >= 2, and must be a multiple of comm_in_use_flags)
20250509 201014.828 INFO             PET3 index= 565                                         coll_sm_tree_degree : Degree of the tree for tree-based operations (must be => 1 and <= min(control_size, 255))
20250509 201014.828 INFO             PET3 index= 566                                      coll_sm_info_num_procs : Number of processes to use for the calculation of the shared_mem_size MCA information parameter (must be => 2)
20250509 201014.828 INFO             PET3 index= 567                                coll_sm_shared_mem_used_data : Amount of shared memory used, per communicator, in the shared memory data area for info_num_procs processes (in bytes)
20250509 201014.828 INFO             PET3 index= 568                                       coll_sm_major_version :
20250509 201014.828 INFO             PET3 index= 569                                       coll_sm_minor_version :
20250509 201014.828 INFO             PET3 index= 570                                     coll_sm_release_version :
20250509 201014.828 INFO             PET3 index= 571                                                         osc : Default selection set of components for the osc framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET3 index= 572                                            osc_base_verbose : Verbosity level for the osc framework (default: 0)
20250509 201014.828 INFO             PET3 index= 573                                    osc_sm_backing_directory : Directory to place backing files for shared memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.828 INFO             PET3 index= 574                                             osc_sm_priority : Priority of the osc/sm component (default: 100)
20250509 201014.828 INFO             PET3 index= 575                                        osc_sm_major_version :
20250509 201014.828 INFO             PET3 index= 576                                        osc_sm_minor_version :
20250509 201014.828 INFO             PET3 index= 577                                      osc_sm_release_version :
20250509 201014.828 INFO             PET3 index= 581                                           osc_rdma_no_locks : Enable optimizations available only if MPI_LOCK is not used. Info key of same name overrides this value (default: false)
20250509 201014.828 INFO             PET3 index= 582                               osc_rdma_acc_single_intrinsic : Enable optimizations for MPI_Fetch_and_op, MPI_Accumulate, etc for codes that will not use anything more than a single predefined datatype (default: false)
20250509 201014.828 INFO             PET3 index= 583                                        osc_rdma_acc_use_amo : Enable the use of network atomic memory operations when using single intrinsic optimizations. If not set network compare-and-swap will be used instead (default: true)
20250509 201014.828 INFO             PET3 index= 584                                        osc_rdma_buffer_size : Size of temporary buffers (default: 32768)
20250509 201014.828 INFO             PET3 index= 585                                         osc_rdma_max_attach : Maximum number of buffers that can be attached to a dynamic window. Keep in mind that each attached buffer will use a potentially limited resource (default: 64)
20250509 201014.828 INFO             PET3 index= 586                                           osc_rdma_priority : Priority of the osc/rdma component (default: 20)
20250509 201014.828 INFO             PET3 index= 587                                       osc_rdma_locking_mode : Locking mode to use for passive-target synchronization (default: two_level)
20250509 201014.828 INFO             PET3 index= 588                                               osc_rdma_btls : Comma-delimited list of BTL component names to allow without verifying connectivity. Do not add a BTL to to this list unless it can reach all processes in any communicator used with an MPI window (default: ugni,uct,ofi)
20250509 201014.828 INFO             PET3 index= 589                                  osc_rdma_backing_directory : Directory to place backing files for memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.828 INFO             PET3 index= 590                                    osc_rdma_network_max_amo : Maximum predefined datatype count for which network atomic operations will be used. Accumulate operations larger than this count will use a get/op/put protocol. The optimal value is dictated by the network injection rate for the interconnect. Generally a smaller number will yield better larger accumulate performance. (default: 32)
20250509 201014.828 INFO             PET3 index= 591                           osc_rdma_minimum_memory_alignment : The minimum memory alignment used to allocate local window memory (default: 16384). This is a best effort approach. Alignments larger than the page size may not be supported.
20250509 201014.828 INFO             PET3 index= 592                                      osc_rdma_major_version :
20250509 201014.828 INFO             PET3 index= 593                                      osc_rdma_minor_version :
20250509 201014.828 INFO             PET3 index= 594                                    osc_rdma_release_version :
20250509 201014.828 INFO             PET3 index= 595                                       btl_tcp_bandwidth_en0 :
20250509 201014.828 INFO             PET3 index= 596                                         btl_tcp_latency_en0 :
20250509 201014.828 INFO             PET3 index= 597                                     btl_tcp_bandwidth_en0:0 :
20250509 201014.828 INFO             PET3 index= 598                                       btl_tcp_latency_en0:0 :
20250509 201014.828 INFO             PET3 index= 599                                                        part : Default selection set of components for the part framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET3 index= 600                                           part_base_verbose : Verbosity level for the part framework (default: 0)
20250509 201014.828 INFO             PET3 index= 601                                  part_persist_free_list_num : Initial size of request free lists
20250509 201014.828 INFO             PET3 index= 602                                  part_persist_free_list_max : Maximum size of request free lists
20250509 201014.828 INFO             PET3 index= 603                                  part_persist_free_list_inc : Number of elements to add when growing request free lists
20250509 201014.828 INFO             PET3 index= 604                                  part_persist_major_version :
20250509 201014.828 INFO             PET3 index= 605                                  part_persist_minor_version :
20250509 201014.829 INFO             PET3 index= 606                                part_persist_release_version :
20250509 201014.829 INFO             PET3 index= 607                                                      memory : Default selection set of components for the memory framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET3 index= 608                                         memory_base_verbose : Verbosity level for the memory framework (default: 0)
20250509 201014.829 INFO             PET3 index= 609                                                     patcher : Default selection set of components for the patcher framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET3 index= 610                                        patcher_base_verbose : Verbosity level for the patcher framework (default: 0)
20250509 201014.829 INFO             PET3 index= 611                                  patcher_overwrite_priority : Priority of the overwrite binary patcher component
20250509 201014.829 INFO             PET3 index= 612                             patcher_overwrite_major_version :
20250509 201014.829 INFO             PET3 index= 613                             patcher_overwrite_minor_version :
20250509 201014.829 INFO             PET3 index= 614                           patcher_overwrite_release_version :
20250509 201014.829 INFO             PET3 index= 615                                                        fbtl : Default selection set of components for the fbtl framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET3 index= 616                                           fbtl_base_verbose : Verbosity level for the fbtl framework (default: 0)
20250509 201014.829 INFO             PET3 index= 617                                         fbtl_posix_priority : Priority of the fbtl posix component
20250509 201014.829 INFO             PET3 index= 618                                   fbtl_posix_max_block_size : Maximum average size in bytes of a data block in an iovec for data sieving. An average block size larger than this parameter will disable data sieving. Default: 1048576 bytes.
20250509 201014.829 INFO             PET3 index= 619                                     fbtl_posix_max_gap_size : Maximum average gap size between two blocks in an iovec for data sieving. An average gap size larger than this parameter will disable data sieving. Default: 4096 bytes.
20250509 201014.829 INFO             PET3 index= 620                                  fbtl_posix_max_tmpbuf_size : Maximum size of the temporary buffer used for data sieving in bytes. Default: 67108864 (64MB).
20250509 201014.829 INFO             PET3 index= 621                                 fbtl_posix_read_datasieving : Parameter indicating whether to perform data sieving for read operations. Default: true.
20250509 201014.829 INFO             PET3 index= 622                                fbtl_posix_write_datasieving : Parameter indicating whether to perform data sieving for write operations. Default: true.
20250509 201014.829 INFO             PET3 index= 623                                    fbtl_posix_major_version :
20250509 201014.829 INFO             PET3 index= 624                                    fbtl_posix_minor_version :
20250509 201014.829 INFO             PET3 index= 625                                  fbtl_posix_release_version :
20250509 201014.829 INFO             PET3 index= 626                                                       fcoll : Default selection set of components for the fcoll framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET3 index= 627                                          fcoll_base_verbose : Verbosity level for the fcoll framework (default: 0)
20250509 201014.829 INFO             PET3 index= 628                                      fcoll_dynamic_priority : Priority of the dynamic fcoll component
20250509 201014.829 INFO             PET3 index= 629                                 fcoll_dynamic_major_version :
20250509 201014.829 INFO             PET3 index= 630                                 fcoll_dynamic_minor_version :
20250509 201014.829 INFO             PET3 index= 631                               fcoll_dynamic_release_version :
20250509 201014.829 INFO             PET3 index= 632                                 fcoll_dynamic_gen2_priority : Priority of the dynamic_gen2 fcoll component
20250509 201014.829 INFO             PET3 index= 633                               fcoll_dynamic_gen2_num_groups : Number of subgroups created by the dynamic_gen2 component
20250509 201014.829 INFO             PET3 index= 634                            fcoll_dynamic_gen2_major_version :
20250509 201014.829 INFO             PET3 index= 635                            fcoll_dynamic_gen2_minor_version :
20250509 201014.829 INFO             PET3 index= 636                          fcoll_dynamic_gen2_release_version :
20250509 201014.829 INFO             PET3 index= 637                                   fcoll_individual_priority : Priority of the individual fcoll component
20250509 201014.829 INFO             PET3 index= 638                              fcoll_individual_major_version :
20250509 201014.829 INFO             PET3 index= 639                              fcoll_individual_minor_version :
20250509 201014.829 INFO             PET3 index= 640                            fcoll_individual_release_version :
20250509 201014.829 INFO             PET3 index= 641                                       fcoll_vulcan_priority : Priority of the vulcan fcoll component
20250509 201014.829 INFO             PET3 index= 642                                     fcoll_vulcan_num_groups : Number of subgroups created by the vulcan component
20250509 201014.829 INFO             PET3 index= 643                                fcoll_vulcan_write_chunksize : Chunk size written at once. Default: stripe_size of the file system
20250509 201014.829 INFO             PET3 index= 644                                       fcoll_vulcan_async_io : Asynchronous I/O support options. 0: Automatic choice (default) 1: Asynchronous I/O only. 2: Synchronous I/O only.
20250509 201014.829 INFO             PET3 index= 645                                  fcoll_vulcan_major_version :
20250509 201014.829 INFO             PET3 index= 646                                  fcoll_vulcan_minor_version :
20250509 201014.829 INFO             PET3 index= 647                                fcoll_vulcan_release_version :
20250509 201014.829 INFO             PET3 index= 648                                                          fs : Default selection set of components for the fs framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET3 index= 649                                             fs_base_verbose : Verbosity level for the fs framework (default: 0)
20250509 201014.829 INFO             PET3 index= 650                                             fs_ufs_priority : Priority of the fs ufs component
20250509 201014.829 INFO             PET3 index= 651                                       fs_ufs_lock_algorithm : Locking algorithm used by the fs ufs component.  0: auto (default), 1: skip locking, 2: always lock entire file, 3: lock only specific ranges
20250509 201014.829 INFO             PET3 index= 652                                        fs_ufs_major_version :
20250509 201014.829 INFO             PET3 index= 653                                        fs_ufs_minor_version :
20250509 201014.829 INFO             PET3 index= 654                                      fs_ufs_release_version :
20250509 201014.829 INFO             PET3 index= 655                                                          io : Default selection set of components for the io framework (<none> means use all components that can be found)
20250509 201014.830 INFO             PET3 index= 656                                             io_base_verbose : Verbosity level for the io framework (default: 0)
20250509 201014.830 INFO             PET3 index= 657                                           io_ompio_priority : Priority of the io ompio component
20250509 201014.830 INFO             PET3 index= 658                                    io_ompio_delete_priority : Delete priority of the io ompio component
20250509 201014.830 INFO             PET3 index= 659                            io_ompio_record_file_offset_info : The information of the file offset/length
20250509 201014.830 INFO             PET3 index= 660                                   io_ompio_coll_timing_info : Enable collective algorithm timing information
20250509 201014.830 INFO             PET3 index= 661                                  io_ompio_cycle_buffer_size : Data size issued by individual reads/writes per call
20250509 201014.830 INFO             PET3 index= 662                               io_ompio_pipeline_buffer_size : Size of temporary buffer used by individual reads/writes in the pipeline protocol
20250509 201014.830 INFO             PET3 index= 663                                      io_ompio_bytes_per_agg : Size of temporary buffer for collective I/O operations
20250509 201014.830 INFO             PET3 index= 664                                    io_ompio_num_aggregators : number of aggregators for collective I/O operations
20250509 201014.830 INFO             PET3 index= 665                                    io_ompio_grouping_option : Option for grouping of processes in the aggregator selection 1: Data volume based grouping 2: maximizing group size uniformity 3: maximimze data contiguity 4: hybrid optimization  5: simple (default) 6: skip refinement step 7: simple+: grouping based on default file view
20250509 201014.830 INFO             PET3 index= 666                              io_ompio_max_aggregators_ratio : Maximum number of processes that can be an aggregator expressed as the ratio to the number of process used to open the file i.e 1 out of n processes can be an aggregator, with n being specified by this mca parameter.
20250509 201014.830 INFO             PET3 index= 667                       io_ompio_aggregators_cutoff_threshold : Relative cutoff threshold for incrementing the number of aggregators in the simple aggregator selection algorithm (5). Lower value for this parameter will lead to higher no. of aggregators.
20250509 201014.830 INFO             PET3 index= 668                                    io_ompio_overwrite_amode : Overwrite WRONLY amode to RDWR to enable data sieving 1: allow overwrite (default) 0: do not overwrite amode provided by application
20250509 201014.830 INFO             PET3 index= 669                               io_ompio_verbose_info_parsing : Provide visual output when parsing info objects 0: no verbose output (default) 1: verbose output by rank 0 2: verbose output by all ranks
20250509 201014.830 INFO             PET3 index= 670                                      io_ompio_major_version :
20250509 201014.830 INFO             PET3 index= 671                                      io_ompio_minor_version :
20250509 201014.830 INFO             PET3 index= 672                                    io_ompio_release_version :
20250509 201014.830 INFO             PET3 index= 673                                        io_romio341_priority : Priority of the io romio component
20250509 201014.830 INFO             PET3 index= 674                                 io_romio341_delete_priority : Delete priority of the io romio component
20250509 201014.830 INFO             PET3 index= 675                                         io_romio341_version : Version of ROMIO
20250509 201014.830 INFO             PET3 index= 676                           io_romio341_user_configure_params : User-specified command line parameters passed to ROMIO's configure script
20250509 201014.830 INFO             PET3 index= 677                       io_romio341_complete_configure_params : Complete set of command line parameters passed to ROMIO's configure script
20250509 201014.830 INFO             PET3 index= 678                                   io_romio341_major_version :
20250509 201014.830 INFO             PET3 index= 679                                   io_romio341_minor_version :
20250509 201014.830 INFO             PET3 index= 680                                 io_romio341_release_version :
20250509 201014.830 INFO             PET3 index= 681                                                    sharedfp : Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
20250509 201014.830 INFO             PET3 index= 682                                       sharedfp_base_verbose : Verbosity level for the sharedfp framework (default: 0)
20250509 201014.830 INFO             PET3 index= 683                                sharedfp_individual_priority : Priority of the individual sharedfp component
20250509 201014.830 INFO             PET3 index= 684                                 sharedfp_individual_verbose : Verbosity of the individual sharedfp component
20250509 201014.830 INFO             PET3 index= 685                           sharedfp_individual_major_version :
20250509 201014.830 INFO             PET3 index= 686                           sharedfp_individual_minor_version :
20250509 201014.830 INFO             PET3 index= 687                         sharedfp_individual_release_version :
20250509 201014.830 INFO             PET3 index= 688                                sharedfp_lockedfile_priority : Priority of the lockedfile sharedfp component
20250509 201014.830 INFO             PET3 index= 689                                 sharedfp_lockedfile_verbose : Verbosity of the lockedfile sharedfp component
20250509 201014.830 INFO             PET3 index= 690                           sharedfp_lockedfile_major_version :
20250509 201014.830 INFO             PET3 index= 691                           sharedfp_lockedfile_minor_version :
20250509 201014.830 INFO             PET3 index= 692                         sharedfp_lockedfile_release_version :
20250509 201014.830 INFO             PET3 index= 693                                        sharedfp_sm_priority : Priority of the sm sharedfp component
20250509 201014.830 INFO             PET3 index= 694                                         sharedfp_sm_verbose : Verbosity of the sm sharedfp component
20250509 201014.830 INFO             PET3 index= 695                                   sharedfp_sm_major_version :
20250509 201014.830 INFO             PET3 index= 696                                   sharedfp_sm_minor_version :
20250509 201014.830 INFO             PET3 index= 697                                 sharedfp_sm_release_version :
20250509 201014.830 INFO             PET3 index= 698                                                        topo : Default selection set of components for the topo framework (<none> means use all components that can be found)
20250509 201014.830 INFO             PET3 index= 699                                           topo_base_verbose : Verbosity level for the topo framework (default: 0)
20250509 201014.830 INFO             PET3 index= 700                                    topo_basic_major_version :
20250509 201014.830 INFO             PET3 index= 701                                    topo_basic_minor_version :
20250509 201014.830 INFO             PET3 index= 702                                  topo_basic_release_version :
20250509 201014.830 INFO             PET3 index= 703                                 topo_treematch_reorder_mode : If set the reordering will be done in a partially distributed way (default=0). If partially-distributed only local knowledge will be used, possibly leading to less accurate reordering.
20250509 201014.830 INFO             PET3 index= 704                                topo_treematch_major_version :
20250509 201014.830 INFO             PET3 index= 705                                topo_treematch_minor_version :
20250509 201014.830 INFO             PET3 index= 706                              topo_treematch_release_version :
20250509 201014.830 INFO             PET3 --- VMK::logSystem() end ---------------------------------
20250509 201014.830 INFO             PET3 main: --- VMK::log() start -------------------------------------
20250509 201014.830 INFO             PET3 main: vm located at: 0x125f04b90
20250509 201014.830 INFO             PET3 main: mpionly=1 threadsflag=0
20250509 201014.830 INFO             PET3 main: ssiCount=1 localSsi=0
20250509 201014.830 INFO             PET3 main: devCount=0 ssiLocalDevCount=0
20250509 201014.830 INFO             PET3 main: petCount=6 ssiLocalPetCount=6
20250509 201014.830 INFO             PET3 main: localPet=3 mypthid=0x202a94f40 ssiLocalPet=3 currentSsiPe=-1
20250509 201014.830 INFO             PET3 main: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.830 INFO             PET3 main: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.830 INFO             PET3 main:  PE=0 SSI=0 SSIPE=0
20250509 201014.830 INFO             PET3 main: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.830 INFO             PET3 main:  PE=1 SSI=0 SSIPE=1
20250509 201014.830 INFO             PET3 main: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.830 INFO             PET3 main:  PE=2 SSI=0 SSIPE=2
20250509 201014.830 INFO             PET3 main: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.830 INFO             PET3 main:  PE=3 SSI=0 SSIPE=3
20250509 201014.830 INFO             PET3 main: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.830 INFO             PET3 main:  PE=4 SSI=0 SSIPE=4
20250509 201014.830 INFO             PET3 main: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.830 INFO             PET3 main:  PE=5 SSI=0 SSIPE=5
20250509 201014.830 INFO             PET3 main: --- VMK::log() end ---------------------------------------
20250509 201014.831 INFO             PET3 Executing 'userm1_setvm'
20250509 201014.831 INFO             PET3 Executing 'userm1_register'
20250509 201014.831 INFO             PET3 Executing 'userm2_setvm'
20250509 201014.831 DEBUG            PET3 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.831 DEBUG            PET3 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.832 INFO             PET3 model1: --- VMK::log() start -------------------------------------
20250509 201014.832 INFO             PET3 model1: vm located at: 0x1008066c0
20250509 201014.832 INFO             PET3 model1: mpionly=1 threadsflag=0
20250509 201014.832 INFO             PET3 model1: ssiCount=1 localSsi=0
20250509 201014.832 INFO             PET3 model1: devCount=0 ssiLocalDevCount=0
20250509 201014.832 INFO             PET3 model1: petCount=6 ssiLocalPetCount=6
20250509 201014.832 INFO             PET3 model1: localPet=3 mypthid=0x202a94f40 ssiLocalPet=3 currentSsiPe=-1
20250509 201014.832 INFO             PET3 model1: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.832 INFO             PET3 model1: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.832 INFO             PET3 model1:  PE=0 SSI=0 SSIPE=0
20250509 201014.832 INFO             PET3 model1: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.832 INFO             PET3 model1:  PE=1 SSI=0 SSIPE=1
20250509 201014.832 INFO             PET3 model1: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.832 INFO             PET3 model1:  PE=2 SSI=0 SSIPE=2
20250509 201014.832 INFO             PET3 model1: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.832 INFO             PET3 model1:  PE=3 SSI=0 SSIPE=3
20250509 201014.832 INFO             PET3 model1: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.832 INFO             PET3 model1:  PE=4 SSI=0 SSIPE=4
20250509 201014.832 INFO             PET3 model1: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.832 INFO             PET3 model1:  PE=5 SSI=0 SSIPE=5
20250509 201014.832 INFO             PET3 model1: --- VMK::log() end ---------------------------------------
20250509 201014.837 INFO             PET3 Entering 'user1_run'
20250509 201014.837 INFO             PET3  user1_run: on SSIPE:           -1  Filling data lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201017.632 INFO             PET3  user1_run: on SSIPE:           -1  Filling data lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201019.438 INFO             PET3  user1_run: on SSIPE:           -1  Filling data lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201021.925 INFO             PET3  user1_run: on SSIPE:           -1  Filling data lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201024.241 INFO             PET3  user1_run: on SSIPE:           -1  Filling data lbound:        5002           1           1  ubound:        6668        1200          10
20250509 201026.778 INFO             PET3 Exiting 'user1_run'
20250509 201046.306 INFO             PET3  NUMBER_OF_PROCESSORS           6
20250509 201046.307 INFO             PET3  PASS  System Test ESMF_FieldSharedDeSSISTest, ESMF_FieldSharedDeSSISTest.F90, line 276
20250509 201046.307 INFO             PET3  Finalizing ESMF
20250509 201014.759 INFO             PET4 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.790 INFO             PET4 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250509 201014.790 INFO             PET4 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250509 201014.790 INFO             PET4 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250509 201014.790 INFO             PET4 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250509 201014.790 INFO             PET4 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.790 INFO             PET4 Running with ESMF Version   : v8.9.0b08-9-gea72ab2180
20250509 201014.790 INFO             PET4 ESMF library build date/time: "May  9 2025" "19:17:42"
20250509 201014.790 INFO             PET4 ESMF library build location : /Users/sacks/projects/scratch/esmf-testing/gfortranclang_12.2.0_14.0.0_openmpi_g_develop/esmf
20250509 201014.790 INFO             PET4 ESMF_COMM                   : openmpi
20250509 201014.790 INFO             PET4 ESMF_MOAB                   : enabled
20250509 201014.790 INFO             PET4 ESMF_LAPACK                 : enabled
20250509 201014.790 INFO             PET4 ESMF_NETCDF                 : enabled
20250509 201014.790 INFO             PET4 ESMF_PNETCDF                : disabled
20250509 201014.790 INFO             PET4 ESMF_PIO                    : enabled
20250509 201014.790 INFO             PET4 ESMF_YAMLCPP                : enabled
20250509 201014.800 INFO             PET4 --- VMK::logSystem() start -------------------------------
20250509 201014.801 INFO             PET4 esmfComm=openmpi
20250509 201014.801 INFO             PET4 isPthreadsEnabled=1
20250509 201014.801 INFO             PET4 isOpenMPEnabled=0
20250509 201014.801 INFO             PET4 isOpenACCEnabled=0
20250509 201014.801 INFO             PET4 isSsiSharedMemoryEnabled=1
20250509 201014.804 INFO             PET4 isNvmlEnabled=0
20250509 201014.804 INFO             PET4 isNumaEnabled=0
20250509 201014.804 INFO             PET4 ssiCount=1 peCount=6
20250509 201014.804 INFO             PET4 PE=0 SSI=0 SSIPE=0
20250509 201014.804 INFO             PET4 PE=1 SSI=0 SSIPE=1
20250509 201014.804 INFO             PET4 PE=2 SSI=0 SSIPE=2
20250509 201014.804 INFO             PET4 PE=3 SSI=0 SSIPE=3
20250509 201014.804 INFO             PET4 PE=4 SSI=0 SSIPE=4
20250509 201014.804 INFO             PET4 PE=5 SSI=0 SSIPE=5
20250509 201014.804 INFO             PET4 ndevs=0 ndevsSSI=0
20250509 201014.804 INFO             PET4 
20250509 201014.804 INFO             PET4 --- VMK::logSystem() MPI Layer ---------------------------
20250509 201014.804 INFO             PET4 MPI_VERSION=3
20250509 201014.805 INFO             PET4 MPI_SUBVERSION=1
20250509 201014.805 INFO             PET4 mpi_t_okay=1
20250509 201014.805 INFO             PET4 --- VMK::logSystem() MPI Tool Interface Control Vars ---
20250509 201014.805 INFO             PET4 index=   0                                         base_help_aggregate : If opal_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message. Default: true.
20250509 201014.805 INFO             PET4 index=   1                                        mca_base_param_files : Path for MCA configuration files containing variable values
20250509 201014.805 INFO             PET4 index=   2                                             mca_param_files : Path for MCA configuration files containing variable values
20250509 201014.805 INFO             PET4 index=   3                                mca_base_override_param_file : Variables set in this file will override any value set inthe environment or another configuration file
20250509 201014.805 INFO             PET4 index=   4                          mca_base_suppress_override_warning : Suppress warnings when attempting to set an overridden value (default: false)
20250509 201014.805 INFO             PET4 index=   5                                  mca_base_param_file_prefix : Aggregate MCA parameter file sets
20250509 201014.805 INFO             PET4 index=   6                                  mca_base_envar_file_prefix : Aggregate MCA parameter file set for env variables
20250509 201014.805 INFO             PET4 index=   7                                    mca_base_param_file_path : Aggregate MCA parameter Search path
20250509 201014.805 INFO             PET4 index=   8                              mca_base_param_file_path_force : Forced Aggregate MCA parameter Search path
20250509 201014.805 INFO             PET4 index=   9                                                 opal_signal : Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
20250509 201014.806 INFO             PET4 index=  10                                      opal_stacktrace_output : Specifies where the stack trace output stream goes.  Accepts one of the following: none (disabled), stderr (default), stdout, file[:filename].   If 'filename' is not specified, a default filename of 'stacktrace' is used.  The 'filename' is appended with either '.PID' or '.RANK.PID', if RANK is available.  The 'filename' can be an absolute path or a relative path to the current working directory.
20250509 201014.806 INFO             PET4 index=  11                                       opal_net_private_ipv4 : Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
20250509 201014.806 INFO             PET4 index=  12                                     opal_set_max_sys_limits : Set the specified system-imposed limits to the specified value, including "unlimited".Supported params: core, filesize, maxmem, openfiles, stacksize, maxchildren
20250509 201014.806 INFO             PET4 index=  13                                         opal_var_dump_color : The colors to use when dumping MCA vars with color (e.g. ompi_info). The format is a comma-delimited key=value list, where the key is the attribute whose color to adjust, and the value is the ANSI color code (see the ANSI X3.64 CSI SGR sequence). Available keys: name,value,valid_values.
20250509 201014.806 INFO             PET4 index=  14                                opal_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.806 INFO             PET4 index=  15                                           opal_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.806 INFO             PET4 index=  16                                opal_warn_on_missing_libcuda : Whether to print a message when CUDA support is enabled but libcuda is not found
20250509 201014.806 INFO             PET4 index=  17                                            mpi_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.806 INFO             PET4 index=  18                                           opal_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.806 INFO             PET4 index=  19                                   mpi_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.806 INFO             PET4 index=  20                                  opal_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.806 INFO             PET4 index=  21                                            mpi_warn_on_fork : If nonzero, issue a warning if program forks under conditions that could cause system errors
20250509 201014.806 INFO             PET4 index=  22                                            opal_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.806 INFO             PET4 index=  23                                      opal_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.806 INFO             PET4 index=  24                                           mca_base_env_list : Set SHELL env variables
20250509 201014.806 INFO             PET4 index=  25                                 mca_base_env_list_delimiter : Set SHELL env variables delimiter. Default: semicolon ';'
20250509 201014.806 INFO             PET4 index=  26                                  mca_base_env_list_internal : Store SHELL env variables from amca conf file
20250509 201014.806 INFO             PET4 index=  27                                 opal_max_thread_in_progress : Number of thread allowed in opal_progress. Default: 1
20250509 201014.806 INFO             PET4 index=  28                                     mca_base_component_path : Path where to look for additional components
20250509 201014.806 INFO             PET4 index=  29                                          mca_component_path : Path where to look for additional components
20250509 201014.806 INFO             PET4 index=  30                         mca_base_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.806 INFO             PET4 index=  31                              mca_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.806 INFO             PET4 index=  32                        mca_base_component_track_load_errors : Whether to track errors for components that failed to load or not
20250509 201014.806 INFO             PET4 index=  33                           mca_base_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.806 INFO             PET4 index=  34                                mca_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.806 INFO             PET4 index=  35                                            mca_base_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.806 INFO             PET4 index=  36                                                 mca_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.806 INFO             PET4 index=  37                                                          dl : Default selection set of components for the dl framework (<none> means use all components that can be found)
20250509 201014.806 INFO             PET4 index=  38                                             dl_base_verbose : Verbosity level for the dl framework (default: 0)
20250509 201014.806 INFO             PET4 index=  39                                 dl_dlopen_filename_suffixes : Comma-delimited list of filename suffixes that the dlopen component will try
20250509 201014.806 INFO             PET4 index=  40                                     dl_dlopen_major_version :
20250509 201014.806 INFO             PET4 index=  41                                     dl_dlopen_minor_version :
20250509 201014.806 INFO             PET4 index=  42                                   dl_dlopen_release_version :
20250509 201014.807 INFO             PET4 index=  43                                               mpi_ft_enable : Enable UFLM MPI Fault Tolerance framework
20250509 201014.809 INFO             PET4 index=  44                                              mpi_ft_verbose : Verbosity level of the ULFM MPI Fault Tolerance framework
20250509 201014.809 INFO             PET4 index=  45                                       mpi_ft_reliable_bcast : Reliable Broadcast algorithm (1: Binomial Graph Diffusion; 2: N^2 full graph diffusion)
20250509 201014.809 INFO             PET4 index=  46                               mpi_ft_propagator_with_rbcast : Use the OMPI reliable broadcast failure propagator, or disable it and use only RTE propagation (slower)
20250509 201014.809 INFO             PET4 index=  47                                             mpi_ft_detector : Use the OMPI heartbeat based failure detector, or disable it and use only RTE and in-band detection (slower)
20250509 201014.809 INFO             PET4 index=  48                                      mpi_ft_detector_thread : Delegate failure detector to a separate thread
20250509 201014.809 INFO             PET4 index=  49                                      mpi_ft_detector_period : Period of heartbeat emission (s)
20250509 201014.809 INFO             PET4 index=  50                                     mpi_ft_detector_timeout : Timeout before we start suspecting a process after the last heartbeat reception (must be larger than 3*ompi_mpi_ft_detector_period)
20250509 201014.809 INFO             PET4 index=  51                              mpi_ft_detector_rdma_heartbeat : Use rdma put to deposit heartbeats into the observer memory
20250509 201014.811 INFO             PET4 index=  52                                             mpi_param_check : Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
20250509 201014.811 INFO             PET4 index=  53                                         mpi_yield_when_idle : Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
20250509 201014.811 INFO             PET4 index=  54                                         mpi_event_tick_rate : How often to progress TCP communications (0 = never, otherwise specified in microseconds)
20250509 201014.811 INFO             PET4 index=  55                                       mpi_show_handle_leaks : Whether MPI_FINALIZE shows all MPI handles that were not freed or not
20250509 201014.813 INFO             PET4 index=  56                                         mpi_no_free_handles : Whether to actually free MPI objects when their handles are freed
20250509 201014.813 INFO             PET4 index=  57                                mpi_show_mpi_alloc_mem_leaks : If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
20250509 201014.813 INFO             PET4 index=  58                                         mpi_show_mca_params : Whether to show all MCA parameter values during MPI_INIT or not (good for reproducibility of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
20250509 201014.813 INFO             PET4 index=  59                                    mpi_show_mca_params_file : If mpi_show_mca_params is true, setting this string to a valid filename tells 5.0.7 to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducibility of MPI jobs)
20250509 201014.813 INFO             PET4 index=  60                                          mpi_preconnect_mpi : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.813 INFO             PET4 index=  61                                          mpi_preconnect_all : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.813 INFO             PET4 index=  62                               mpi_have_sparse_group_storage : Whether this 5.0.7 installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
20250509 201014.813 INFO             PET4 index=  63                                mpi_use_sparse_group_storage : Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
20250509 201014.813 INFO             PET4 index=  64                                            mpi_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.813 INFO             PET4 index=  65                                 mpi_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.813 INFO             PET4 index=  66                                        mpi_add_procs_cutoff : Maximum world size for pre-allocating resources for all remote processes. Increasing this limit may improve communication performance at the cost of memory usage
20250509 201014.813 INFO             PET4 index=  67                                        mpi_dynamics_enabled : Is the MPI dynamic process functionality enabled (e.g., MPI_COMM_SPAWN)?  Default is yes, but certain transports and/or environments may disable it.
20250509 201014.813 INFO             PET4 index=  68                                              async_mpi_init : Do not perform a barrier at the end of MPI_Init
20250509 201014.813 INFO             PET4 index=  69                                          async_mpi_finalize : Do not perform a barrier at the beginning of MPI_Finalize
20250509 201014.813 INFO             PET4 index=  70                                             mpi_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.813 INFO             PET4 index=  71                                       mpi_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.813 INFO             PET4 index=  72                                             mpi_compat_mpi3 : A boolean value for whether Open MPI operates in MPI-3 compatibility mode; this changes the following behavior: in operations without a handle, errors are raised on (true) MPI_COMM_WORLD (MPI-3 behavior) or (false) MPI_COMM_SELF (MPI-4 behavior).
20250509 201014.813 INFO             PET4 index=  73                                    mpi_pmix_connect_timeout : Timeout(secs) for calls to PMIx_Connect. Default is no timeout.
20250509 201014.813 INFO             PET4 index=  74                                                 ompi_timing : Request that critical timing loops be measured
20250509 201014.813 INFO             PET4 index=  75                                       ompi_stream_buffering : Adjust buffering for stdout/stderr. (0) unbuffered, (1) line buffered, (2) fully buffered.
20250509 201014.813 INFO             PET4 index=  76                                            mpi_comm_verbose : Verbosity level for communicator management subsystem
20250509 201014.813 INFO             PET4 index=  77                                                          if : Default selection set of components for the if framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index=  78                                             if_base_verbose : Verbosity level for the if framework (default: 0)
20250509 201014.814 INFO             PET4 index=  79                                      if_base_do_not_resolve : If nonzero, do not attempt to resolve interfaces
20250509 201014.814 INFO             PET4 index=  80                                     if_base_retain_loopback : If nonzero, retain loopback interfaces
20250509 201014.814 INFO             PET4 index=  81                                  if_bsdx_ipv6_major_version :
20250509 201014.814 INFO             PET4 index=  82                                  if_bsdx_ipv6_minor_version :
20250509 201014.814 INFO             PET4 index=  83                                if_bsdx_ipv6_release_version :
20250509 201014.814 INFO             PET4 index=  84                                 if_posix_ipv4_major_version :
20250509 201014.814 INFO             PET4 index=  85                                 if_posix_ipv4_minor_version :
20250509 201014.814 INFO             PET4 index=  86                               if_posix_ipv4_release_version :
20250509 201014.814 INFO             PET4 index=  87                                                     threads : Default selection set of components for the threads framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index=  88                                        threads_base_verbose : Verbosity level for the threads framework (default: 0)
20250509 201014.814 INFO             PET4 index=  89                             threads_pthreads_yield_strategy : Pthread yield strategy to use
20250509 201014.814 INFO             PET4 index=  90                             threads_pthreads_nanosleep_time : Number of nanoseconds to sleep when using nanosleep as the pthread yield strategy
20250509 201014.814 INFO             PET4 index=  91                              threads_pthreads_major_version :
20250509 201014.814 INFO             PET4 index=  92                              threads_pthreads_minor_version :
20250509 201014.814 INFO             PET4 index=  93                            threads_pthreads_release_version :
20250509 201014.814 INFO             PET4 index=  94                                                       hwloc : Default selection set of components for the hwloc framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index=  95                                          hwloc_base_verbose : Verbosity level for the hwloc framework (default: 0)
20250509 201014.814 INFO             PET4 index=  96                          hwloc_base_mem_bind_failure_action : What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
20250509 201014.814 INFO             PET4 index=  97                                                      memcpy : Default selection set of components for the memcpy framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index=  98                                         memcpy_base_verbose : Verbosity level for the memcpy framework (default: 0)
20250509 201014.814 INFO             PET4 index=  99                                                  memchecker : Default selection set of components for the memchecker framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index= 100                                     memchecker_base_verbose : Verbosity level for the memchecker framework (default: 0)
20250509 201014.814 INFO             PET4 index= 101                                                   backtrace : Default selection set of components for the backtrace framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index= 102                                      backtrace_base_verbose : Verbosity level for the backtrace framework (default: 0)
20250509 201014.814 INFO             PET4 index= 103                            backtrace_execinfo_major_version :
20250509 201014.814 INFO             PET4 index= 104                            backtrace_execinfo_minor_version :
20250509 201014.814 INFO             PET4 index= 105                          backtrace_execinfo_release_version :
20250509 201014.814 INFO             PET4 index= 106                                                       timer : Default selection set of components for the timer framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index= 107                                          timer_base_verbose : Verbosity level for the timer framework (default: 0)
20250509 201014.814 INFO             PET4 index= 108                                     timer_require_monotonic : Node-level monotonic timer required (default yes)
20250509 201014.814 INFO             PET4 index= 109                                  timer_darwin_major_version :
20250509 201014.814 INFO             PET4 index= 110                                  timer_darwin_minor_version :
20250509 201014.814 INFO             PET4 index= 111                                timer_darwin_release_version :
20250509 201014.814 INFO             PET4 index= 112                                                       shmem : Default selection set of components for the shmem framework (<none> means use all components that can be found)
20250509 201014.814 INFO             PET4 index= 113                                          shmem_base_verbose : Verbosity level for the shmem framework (default: 0)
20250509 201014.814 INFO             PET4 index= 114                               shmem_base_RUNTIME_QUERY_hint : Internal OMPI parameter used to provide a component selection hint to the shmem framework.  The value of this parameter is the name of the component that is available, selectable, and meets our run-time behavior requirements.
20250509 201014.814 INFO             PET4 index= 115                                         shmem_mmap_priority : Priority for shmem mmap component (default: 50)
20250509 201014.814 INFO             PET4 index= 116                               shmem_mmap_enable_nfs_warning : Enable the warning emitted when Open MPI detects that its shared memory backing file is located on a network filesystem (1 = enabled, 0 = disabled).
20250509 201014.815 INFO             PET4 index= 117                            shmem_mmap_relocate_backing_file : Whether to change the default placement of backing files or not (Negative = try to relocate backing files to an area rooted at the path specified by shmem_mmap_backing_file_base_dir, but continue with the default path if the relocation fails, 0 = do not relocate, Positive = same as the negative option, but will fail if the relocation fails.
20250509 201014.815 INFO             PET4 index= 118                            shmem_mmap_backing_file_base_dir : Specifies where backing files will be created when shmem_mmap_relocate_backing_file is in use.
20250509 201014.815 INFO             PET4 index= 119                                    shmem_mmap_major_version :
20250509 201014.815 INFO             PET4 index= 120                                    shmem_mmap_minor_version :
20250509 201014.815 INFO             PET4 index= 121                                  shmem_mmap_release_version :
20250509 201014.815 INFO             PET4 index= 130                                                   reachable : Default selection set of components for the reachable framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET4 index= 131                                      reachable_base_verbose : Verbosity level for the reachable framework (default: 0)
20250509 201014.815 INFO             PET4 index= 132                            reachable_weighted_major_version :
20250509 201014.815 INFO             PET4 index= 133                            reachable_weighted_minor_version :
20250509 201014.815 INFO             PET4 index= 134                          reachable_weighted_release_version :
20250509 201014.815 INFO             PET4 index= 135                                                        pmix : Default selection set of components for the pmix framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET4 index= 136                                           pmix_base_verbose : Verbosity level for the pmix framework (default: 0)
20250509 201014.815 INFO             PET4 index= 137                                       pmix_base_async_modex : Use asynchronous modex mode
20250509 201014.815 INFO             PET4 index= 138                                      pmix_base_collect_data : Collect all data during modex
20250509 201014.815 INFO             PET4 index= 139                                  pmix_base_exchange_timeout : Time (in seconds) to wait for a data exchange to complete
20250509 201014.815 INFO             PET4 index= 140                                                 accelerator : Default selection set of components for the accelerator framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET4 index= 141                                    accelerator_base_verbose : Verbosity level for the accelerator framework (default: 0)
20250509 201014.815 INFO             PET4 index= 142                              accelerator_null_major_version :
20250509 201014.815 INFO             PET4 index= 143                              accelerator_null_minor_version :
20250509 201014.815 INFO             PET4 index= 144                            accelerator_null_release_version :
20250509 201014.815 INFO             PET4 index= 145                                          opal_event_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.815 INFO             PET4 index= 146                                      event_external_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.815 INFO             PET4 index= 147                                          opal_event_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.815 INFO             PET4 index= 148                                          event_base_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.815 INFO             PET4 index= 149                                                        hook : Default selection set of components for the hook framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET4 index= 150                                           hook_base_verbose : Verbosity level for the hook framework (default: 0)
20250509 201014.815 INFO             PET4 index= 151                                    hook_comm_method_verbose :
20250509 201014.815 INFO             PET4 index= 152                                    hook_comm_method_display : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.815 INFO             PET4 index= 153                                           ompi_display_comm : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.815 INFO             PET4 index= 154                                        hook_comm_method_max : Number of hosts for which to print unabbreviated 2d table of comm methods.
20250509 201014.815 INFO             PET4 index= 155                                      hook_comm_method_brief : Only print the comm method summary, skip the 2d table.
20250509 201014.815 INFO             PET4 index= 156                                   hook_comm_method_fakefile : For debugging only: read comm methods from a file
20250509 201014.815 INFO             PET4 index= 157                              hook_comm_method_major_version :
20250509 201014.815 INFO             PET4 index= 158                              hook_comm_method_minor_version :
20250509 201014.815 INFO             PET4 index= 159                            hook_comm_method_release_version :
20250509 201014.815 INFO             PET4 index= 160                                                          op : Default selection set of components for the op framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET4 index= 161                                             op_base_verbose : Verbosity level for the op framework (default: 0)
20250509 201014.815 INFO             PET4 index= 162                               op_aarch64_hardware_available : Whether the Neon (1) or SVE (2) hardware is available
20250509 201014.815 INFO             PET4 index= 163                                 op_aarch64_double_supported : Whether the double precision data types are supported or not
20250509 201014.815 INFO             PET4 index= 164                                    op_aarch64_major_version :
20250509 201014.815 INFO             PET4 index= 165                                    op_aarch64_minor_version :
20250509 201014.816 INFO             PET4 index= 166                                  op_aarch64_release_version :
20250509 201014.816 INFO             PET4 index= 167                                                   allocator : Default selection set of components for the allocator framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET4 index= 168                                      allocator_base_verbose : Verbosity level for the allocator framework (default: 0)
20250509 201014.816 INFO             PET4 index= 169                               allocator_basic_major_version :
20250509 201014.816 INFO             PET4 index= 170                               allocator_basic_minor_version :
20250509 201014.816 INFO             PET4 index= 171                             allocator_basic_release_version :
20250509 201014.816 INFO             PET4 index= 172                                allocator_bucket_num_buckets :
20250509 201014.816 INFO             PET4 index= 173                              allocator_bucket_major_version :
20250509 201014.816 INFO             PET4 index= 174                              allocator_bucket_minor_version :
20250509 201014.816 INFO             PET4 index= 175                            allocator_bucket_release_version :
20250509 201014.816 INFO             PET4 index= 176                                                      rcache : Default selection set of components for the rcache framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET4 index= 177                                         rcache_base_verbose : Verbosity level for the rcache framework (default: 0)
20250509 201014.816 INFO             PET4 index= 178                                    rcache_grdma_print_stats : print registration cache usage statistics at the end of the run
20250509 201014.816 INFO             PET4 index= 179                                  rcache_grdma_major_version :
20250509 201014.816 INFO             PET4 index= 180                                  rcache_grdma_minor_version :
20250509 201014.816 INFO             PET4 index= 181                                rcache_grdma_release_version :
20250509 201014.816 INFO             PET4 index= 182                                                       mpool : Default selection set of components for the mpool framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET4 index= 183                                          mpool_base_verbose : Verbosity level for the mpool framework (default: 0)
20250509 201014.816 INFO             PET4 index= 184                                    mpool_base_default_hints : Hints to use when selecting the default memory pool
20250509 201014.816 INFO             PET4 index= 185                                 mpool_base_default_priority : Priority of the default mpool module
20250509 201014.816 INFO             PET4 index= 186                                     mpool_hugepage_priority : Default priority of the hugepage mpool component (default: 50)
20250509 201014.816 INFO             PET4 index= 187                                    mpool_hugepage_page_size : Default huge page size of the hugepage mpool component (default: 2M)
20250509 201014.816 INFO             PET4 index= 188                                mpool_hugepage_major_version :
20250509 201014.816 INFO             PET4 index= 189                                mpool_hugepage_minor_version :
20250509 201014.816 INFO             PET4 index= 190                              mpool_hugepage_release_version :
20250509 201014.817 INFO             PET4 index= 191                                                        smsc : Default selection set of components for the smsc framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET4 index= 192                                           smsc_base_verbose : Verbosity level for the smsc framework (default: 0)
20250509 201014.817 INFO             PET4 index= 193                                                         bml : Default selection set of components for the bml framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET4 index= 194                                            bml_base_verbose : Verbosity level for the bml framework (default: 0)
20250509 201014.817 INFO             PET4 index= 195                                  bml_r2_show_unreach_errors : Show error message when procs are unreachable
20250509 201014.817 INFO             PET4 index= 196                                        bml_r2_major_version :
20250509 201014.817 INFO             PET4 index= 197                                        bml_r2_minor_version :
20250509 201014.817 INFO             PET4 index= 198                                      bml_r2_release_version :
20250509 201014.817 INFO             PET4 index= 199                                                         btl : Default selection set of components for the btl framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET4 index= 200                                            btl_base_verbose : Verbosity level for the btl framework (default: 0)
20250509 201014.817 INFO             PET4 index= 201                           btl_base_thread_multiple_override : Enable BTLs that are not normally enabled when MPI_THREAD_MULTIPLE is enabled (THIS IS FOR DEVELOPERS ONLY!  SHOULD NOT BE USED BY END USERS!)
20250509 201014.817 INFO             PET4 index= 202                                            btl_base_include :
20250509 201014.817 INFO             PET4 index= 203                                            btl_base_exclude :
20250509 201014.817 INFO             PET4 index= 204                                    btl_base_warn_peer_error : This parameter is used to turn on warning messages when peers disconnect unexpectedly
20250509 201014.817 INFO             PET4 index= 205                              btl_base_warn_component_unused : This parameter is used to turn on warning messages when certain NICs are not used
20250509 201014.817 INFO             PET4 index= 206                                      btl_self_free_list_num : Number of fragments by default
20250509 201014.817 INFO             PET4 index= 207                                      btl_self_free_list_max : Maximum number of fragments
20250509 201014.817 INFO             PET4 index= 208                                      btl_self_free_list_inc : Increment by this number of fragments
20250509 201014.817 INFO             PET4 index= 209                                        btl_self_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.817 INFO             PET4 index= 210                                              btl_self_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.817 INFO             PET4 index= 211                                       btl_self_atomic_flags : BTL atomic support flags
20250509 201014.817 INFO             PET4 index= 212                                   btl_self_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.817 INFO             PET4 index= 213                                        btl_self_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.817 INFO             PET4 index= 214                                          btl_self_get_limit : Maximum size (in bytes) for btl get
20250509 201014.817 INFO             PET4 index= 215                                      btl_self_get_alignment : Alignment required for btl get
20250509 201014.817 INFO             PET4 index= 216                                          btl_self_put_limit : Maximum size (in bytes) for btl put
20250509 201014.817 INFO             PET4 index= 217                                      btl_self_put_alignment : Alignment required for btl put
20250509 201014.817 INFO             PET4 index= 218                          btl_self_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.817 INFO             PET4 index= 219                                      btl_self_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.817 INFO             PET4 index= 220                          btl_self_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.817 INFO             PET4 index= 221                            btl_self_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.817 INFO             PET4 index= 222                             btl_self_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.817 INFO             PET4 index= 223                                            btl_self_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.817 INFO             PET4 index= 224                                          btl_self_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.817 INFO             PET4 index= 225                                      btl_self_major_version :
20250509 201014.817 INFO             PET4 index= 226                                      btl_self_minor_version :
20250509 201014.817 INFO             PET4 index= 227                                    btl_self_release_version :
20250509 201014.817 INFO             PET4 index= 228                                        btl_sm_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET4 index= 229                                     btl_vader_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET4 index= 230                                        btl_sm_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET4 index= 231                                     btl_vader_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.817 INFO             PET4 index= 232                                        btl_sm_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.817 INFO             PET4 index= 233                                     btl_vader_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.817 INFO             PET4 index= 234                                         btl_sm_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.817 INFO             PET4 index= 235                                      btl_vader_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.818 INFO             PET4 index= 236                                         btl_sm_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.818 INFO             PET4 index= 237                                      btl_vader_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.818 INFO             PET4 index= 238                                      btl_sm_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.818 INFO             PET4 index= 239                                   btl_vader_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.818 INFO             PET4 index= 240                                       btl_sm_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.818 INFO             PET4 index= 241                                    btl_vader_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.818 INFO             PET4 index= 242                                             btl_sm_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.818 INFO             PET4 index= 243                                          btl_vader_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.818 INFO             PET4 index= 244                                            btl_sm_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.818 INFO             PET4 index= 245                                         btl_vader_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.818 INFO             PET4 index= 246                                    btl_sm_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.818 INFO             PET4 index= 247                                 btl_vader_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.818 INFO             PET4 index= 248                                          btl_sm_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.818 INFO             PET4 index= 249                                       btl_vader_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.818 INFO             PET4 index= 250                                                btl_sm_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET4 index= 251                                             btl_vader_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET4 index= 252                                         btl_sm_atomic_flags : BTL atomic support flags
20250509 201014.818 INFO             PET4 index= 253                                      btl_vader_atomic_flags : BTL atomic support flags
20250509 201014.818 INFO             PET4 index= 254                                     btl_sm_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.818 INFO             PET4 index= 255                                  btl_vader_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.818 INFO             PET4 index= 256                                          btl_sm_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.818 INFO             PET4 index= 257                                       btl_vader_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.818 INFO             PET4 index= 258                            btl_sm_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.818 INFO             PET4 index= 259                         btl_vader_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.818 INFO             PET4 index= 260                                        btl_sm_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.818 INFO             PET4 index= 261                                     btl_vader_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.818 INFO             PET4 index= 262                                        btl_sm_major_version :
20250509 201014.818 INFO             PET4 index= 263                                     btl_vader_major_version :
20250509 201014.818 INFO             PET4 index= 264                                        btl_sm_minor_version :
20250509 201014.818 INFO             PET4 index= 265                                     btl_vader_minor_version :
20250509 201014.818 INFO             PET4 index= 266                                      btl_sm_release_version :
20250509 201014.818 INFO             PET4 index= 267                                   btl_vader_release_version :
20250509 201014.818 INFO             PET4 index= 268                                               btl_tcp_links :
20250509 201014.819 INFO             PET4 index= 269                                          btl_tcp_if_include : Comma-delimited list of devices and/or CIDR notation of networks to use for MPI communication (e.g., "eth0,192.168.0.0/16").  Mutually exclusive with btl_tcp_if_exclude.
20250509 201014.819 INFO             PET4 index= 270                                          btl_tcp_if_exclude : Comma-delimited list of devices and/or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,192.168.0.0/16").  If set to a non-default value, it is mutually exclusive with btl_tcp_if_include.
20250509 201014.819 INFO             PET4 index= 271                                       btl_tcp_free_list_num :
20250509 201014.819 INFO             PET4 index= 272                                       btl_tcp_free_list_max :
20250509 201014.819 INFO             PET4 index= 273                                       btl_tcp_free_list_inc :
20250509 201014.819 INFO             PET4 index= 274                                              btl_tcp_sndbuf : The size of the send buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a send buffer size.
20250509 201014.819 INFO             PET4 index= 275                                              btl_tcp_rcvbuf : The size of the receive buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a receive buffer size.
20250509 201014.819 INFO             PET4 index= 276                                      btl_tcp_endpoint_cache : The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
20250509 201014.819 INFO             PET4 index= 277                                           btl_tcp_use_nagle : Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
20250509 201014.819 INFO             PET4 index= 278                                         btl_tcp_port_min_v4 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.819 INFO             PET4 index= 279                                       btl_tcp_port_range_v4 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.819 INFO             PET4 index= 280                                         btl_tcp_port_min_v6 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.819 INFO             PET4 index= 281                                       btl_tcp_port_range_v6 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.819 INFO             PET4 index= 282                                     btl_tcp_progress_thread :
20250509 201014.819 INFO             PET4 index= 283                         btl_tcp_warn_all_unfound_interfaces : Issue a warning for all unfound interfaces included in if_exclude
20250509 201014.819 INFO             PET4 index= 284                                         btl_tcp_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET4 index= 285                                               btl_tcp_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET4 index= 286                                        btl_tcp_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET4 index= 287                                    btl_tcp_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.819 INFO             PET4 index= 288                                         btl_tcp_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET4 index= 289                                           btl_tcp_put_limit : Maximum size (in bytes) for btl put
20250509 201014.819 INFO             PET4 index= 290                                       btl_tcp_put_alignment : Alignment required for btl put
20250509 201014.819 INFO             PET4 index= 291                           btl_tcp_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.819 INFO             PET4 index= 292                                       btl_tcp_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.819 INFO             PET4 index= 293                           btl_tcp_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET4 index= 294                             btl_tcp_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET4 index= 295                              btl_tcp_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.819 INFO             PET4 index= 296                                             btl_tcp_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.819 INFO             PET4 index= 297                                           btl_tcp_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.819 INFO             PET4 index= 298                                      btl_tcp_disable_family :
20250509 201014.819 INFO             PET4 index= 299                                       btl_tcp_major_version :
20250509 201014.819 INFO             PET4 index= 300                                       btl_tcp_minor_version :
20250509 201014.819 INFO             PET4 index= 301                                     btl_tcp_release_version :
20250509 201014.819 INFO             PET4 index= 302                                                         pml : Default selection set of components for the pml framework (<none> means use all components that can be found)
20250509 201014.819 INFO             PET4 index= 303                                            pml_base_verbose : Verbosity level for the pml framework (default: 0)
20250509 201014.819 INFO             PET4 index= 304                                    pml_base_bsend_allocator :
20250509 201014.819 INFO             PET4 index= 305                                            pml_base_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.819 INFO             PET4 index= 306                                                 pml_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.819 INFO             PET4 index= 307                                          pml_base_check_pml : Whether to check the pml selections to ensure they all match
20250509 201014.819 INFO             PET4 index= 320                                             pml_ob1_verbose :
20250509 201014.819 INFO             PET4 index= 321                                       pml_ob1_free_list_num :
20250509 201014.819 INFO             PET4 index= 322                                       pml_ob1_free_list_max :
20250509 201014.820 INFO             PET4 index= 323                                       pml_ob1_free_list_inc :
20250509 201014.820 INFO             PET4 index= 324                                            pml_ob1_priority :
20250509 201014.820 INFO             PET4 index= 325                                 pml_ob1_send_pipeline_depth :
20250509 201014.820 INFO             PET4 index= 326                                 pml_ob1_recv_pipeline_depth :
20250509 201014.820 INFO             PET4 index= 327                                pml_ob1_max_rdma_per_request :
20250509 201014.820 INFO             PET4 index= 328                                  pml_ob1_max_send_per_range :
20250509 201014.820 INFO             PET4 index= 329                                    pml_ob1_unexpected_limit :
20250509 201014.820 INFO             PET4 index= 330                                        pml_ob1_use_all_rdma : Use all available RDMA btls for the RDMA and RDMA pipeline protocols (default: false)
20250509 201014.820 INFO             PET4 index= 331                                           pml_ob1_allocator : Name of allocator component for unexpected messages
20250509 201014.820 INFO             PET4 index= 332                              pml_ob1_accelerator_events_max : Number of events created by the ob1 component internally
20250509 201014.820 INFO             PET4 index= 333                                       pml_ob1_major_version :
20250509 201014.820 INFO             PET4 index= 334                                       pml_ob1_minor_version :
20250509 201014.820 INFO             PET4 index= 335                                     pml_ob1_release_version :
20250509 201014.820 INFO             PET4 index= 339                                                   vprotocol : Specify a specific vprotocol to use
20250509 201014.820 INFO             PET4 index= 343                                                         mtl : Default selection set of components for the mtl framework (<none> means use all components that can be found)
20250509 201014.820 INFO             PET4 index= 344                                            mtl_base_verbose : Verbosity level for the mtl framework (default: 0)
20250509 201014.820 INFO             PET4 index= 345                                      vprotocol_base_verbose : Verbosity level for the vprotocol framework (default: 0)
20250509 201014.820 INFO             PET4 index= 346                                vprotocol_pessimist_priority :
20250509 201014.820 INFO             PET4 index= 347                           vprotocol_pessimist_free_list_num :
20250509 201014.820 INFO             PET4 index= 348                           vprotocol_pessimist_free_list_max :
20250509 201014.820 INFO             PET4 index= 349                           vprotocol_pessimist_free_list_inc :
20250509 201014.820 INFO             PET4 index= 350                      vprotocol_pessimist_sender_based_chunk :
20250509 201014.820 INFO             PET4 index= 351                       vprotocol_pessimist_event_buffer_size :
20250509 201014.820 INFO             PET4 index= 352                       vprotocol_pessimist_sender_based_file :
20250509 201014.820 INFO             PET4 index= 353                   vprotocol_pessimist_allow_thread_multiple : Allow the PML V to work even when the MPI library is initialized with MPI_THREAD_MULTIPLE support. By default the PML V is disabled in such instances, to protect applications that are not send deterministic.
20250509 201014.820 INFO             PET4 index= 354                           vprotocol_pessimist_major_version :
20250509 201014.820 INFO             PET4 index= 355                           vprotocol_pessimist_minor_version :
20250509 201014.820 INFO             PET4 index= 356                         vprotocol_pessimist_release_version :
20250509 201014.820 INFO             PET4 index= 357                                                        coll : Default selection set of components for the coll framework (<none> means use all components that can be found)
20250509 201014.820 INFO             PET4 index= 358                                           coll_base_verbose : Verbosity level for the coll framework (default: 0)
20250509 201014.820 INFO             PET4 index= 359                                         coll_adapt_priority : Priority of the adapt coll component
20250509 201014.820 INFO             PET4 index= 360                                          coll_adapt_verbose : Verbose level (default set to the collective framework verbosity)
20250509 201014.820 INFO             PET4 index= 361                            coll_adapt_context_free_list_min : Minimum number of segments in context free list
20250509 201014.820 INFO             PET4 index= 362                            coll_adapt_context_free_list_max : Maximum number of segments in context free list
20250509 201014.820 INFO             PET4 index= 363                            coll_adapt_context_free_list_inc : Increasement number of segments in context free list
20250509 201014.820 INFO             PET4 index= 364                                  coll_adapt_bcast_algorithm : Algorithm of broadcast, 0: tuned, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.820 INFO             PET4 index= 365                               coll_adapt_bcast_segment_size : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.820 INFO             PET4 index= 366                          coll_adapt_bcast_max_send_requests : Maximum number of send requests
20250509 201014.820 INFO             PET4 index= 367                          coll_adapt_bcast_max_recv_requests : Maximum number of receive requests
20250509 201014.820 INFO             PET4 index= 368                           coll_adapt_bcast_synchronous_send : Whether to use synchronous send operations during setup of bcast operations
20250509 201014.820 INFO             PET4 index= 369                                 coll_adapt_reduce_algorithm : Algorithm of reduce, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.820 INFO             PET4 index= 370                              coll_adapt_reduce_segment_size : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.820 INFO             PET4 index= 371                         coll_adapt_reduce_max_send_requests : Maximum number of send requests
20250509 201014.820 INFO             PET4 index= 372                         coll_adapt_reduce_max_recv_requests : Maximum number of receive requests per peer
20250509 201014.820 INFO             PET4 index= 373                              coll_adapt_inbuf_free_list_min : Minimum number of segment in inbuf free list
20250509 201014.821 INFO             PET4 index= 374                              coll_adapt_inbuf_free_list_max : Maximum number of segment in inbuf free list
20250509 201014.821 INFO             PET4 index= 375                              coll_adapt_inbuf_free_list_inc : Number of segments to allocate when growing the inbuf free list
20250509 201014.821 INFO             PET4 index= 376                          coll_adapt_reduce_synchronous_send : Whether to use synchronous send operations during setup of reduce operations
20250509 201014.821 INFO             PET4 index= 377                                    coll_adapt_major_version :
20250509 201014.821 INFO             PET4 index= 378                                    coll_adapt_minor_version :
20250509 201014.821 INFO             PET4 index= 379                                  coll_adapt_release_version :
20250509 201014.821 INFO             PET4 index= 380                                         coll_basic_priority : Priority of the basic coll component
20250509 201014.821 INFO             PET4 index= 381                                        coll_basic_crossover : Minimum number of processes in a communicator before using the logarithmic algorithms
20250509 201014.821 INFO             PET4 index= 382                                    coll_basic_major_version :
20250509 201014.821 INFO             PET4 index= 383                                    coll_basic_minor_version :
20250509 201014.821 INFO             PET4 index= 384                                  coll_basic_release_version :
20250509 201014.821 INFO             PET4 index= 385                                           coll_han_priority : Priority of the HAN coll component
20250509 201014.821 INFO             PET4 index= 386                                            coll_han_verbose : Verbosity of the HAN coll component (use coll base verbosity if not set)
20250509 201014.821 INFO             PET4 index= 387                                      coll_han_bcast_segsize : segment size for bcast
20250509 201014.821 INFO             PET4 index= 388                                    coll_han_bcast_up_module : up level module for bcast, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET4 index= 389                                   coll_han_bcast_low_module : low level module for bcast, 0 tuned, 1 sm
20250509 201014.821 INFO             PET4 index= 390                                     coll_han_reduce_segsize : segment size for reduce
20250509 201014.821 INFO             PET4 index= 391                                   coll_han_reduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET4 index= 392                                  coll_han_reduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.821 INFO             PET4 index= 393                                  coll_han_allreduce_segsize : segment size for allreduce
20250509 201014.821 INFO             PET4 index= 394                                coll_han_allreduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET4 index= 395                               coll_han_allreduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.821 INFO             PET4 index= 396                                coll_han_allgather_up_module : up level module for allgather, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET4 index= 397                               coll_han_allgather_low_module : low level module for allgather, 0 tuned, 1 sm
20250509 201014.821 INFO             PET4 index= 398                                   coll_han_gather_up_module : up level module for gather, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET4 index= 399                                  coll_han_gather_low_module : low level module for gather, 0 tuned, 1 sm
20250509 201014.821 INFO             PET4 index= 400                                  coll_han_scatter_up_module : up level module for scatter, 0 libnbc, 1 adapt
20250509 201014.821 INFO             PET4 index= 401                                 coll_han_scatter_low_module : low level module for scatter, 0 tuned, 1 sm
20250509 201014.821 INFO             PET4 index= 402                                       coll_han_reproducible : whether we need reproducible results (enabling this disables optimisations using topology)0 disable 1 enable, default 0
20250509 201014.821 INFO             PET4 index= 403                            coll_han_use_allgather_algorithm : which han algorithm is used for allgather
20250509 201014.821 INFO             PET4 index= 404                            coll_han_use_allreduce_algorithm : which han algorithm is used for allreduce
20250509 201014.821 INFO             PET4 index= 405                              coll_han_use_barrier_algorithm : which han algorithm is used for barrier
20250509 201014.821 INFO             PET4 index= 406                                coll_han_use_bcast_algorithm : which han algorithm is used for bcast
20250509 201014.821 INFO             PET4 index= 407                               coll_han_use_gather_algorithm : which han algorithm is used for gather
20250509 201014.821 INFO             PET4 index= 408                               coll_han_use_reduce_algorithm : which han algorithm is used for reduce
20250509 201014.821 INFO             PET4 index= 409                              coll_han_use_scatter_algorithm : which han algorithm is used for scatter
20250509 201014.821 INFO             PET4 index= 410                               coll_han_use_simple_allgather : whether to enable simple algorithm for allgather. Prefer use_allgather_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET4 index= 411                               coll_han_use_simple_allreduce : whether to enable simple algorithm for allreduce. Prefer use_allreduce_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET4 index= 412                                   coll_han_use_simple_bcast : whether to enable simple algorithm for bcast. Prefer use_bcast_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET4 index= 413                                  coll_han_use_simple_gather : whether to enable simple algorithm for gather. Prefer use_gather_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET4 index= 414                                  coll_han_use_simple_reduce : whether to enable simple algorithm for reduce. Prefer use_reduce_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET4 index= 415                                 coll_han_use_simple_scatter : whether to enable simple algorithm for scatter. Prefer use_scatter_algorithm=simple or configuration file instead.
20250509 201014.821 INFO             PET4 index= 416                coll_han_allgather_dynamic_intra_node_module : Collective module to use for allgather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET4 index= 417                coll_han_allgather_dynamic_inter_node_module : Collective module to use for allgather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.821 INFO             PET4 index= 418       coll_han_allgather_dynamic_global_communicator_module : Collective module to use for allgather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 419               coll_han_allgatherv_dynamic_intra_node_module : Collective module to use for allgatherv on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 420               coll_han_allgatherv_dynamic_inter_node_module : Collective module to use for allgatherv on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 421      coll_han_allgatherv_dynamic_global_communicator_module : Collective module to use for allgatherv on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 422                coll_han_allreduce_dynamic_intra_node_module : Collective module to use for allreduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 423                coll_han_allreduce_dynamic_inter_node_module : Collective module to use for allreduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 424       coll_han_allreduce_dynamic_global_communicator_module : Collective module to use for allreduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 425                  coll_han_barrier_dynamic_intra_node_module : Collective module to use for barrier on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 426                  coll_han_barrier_dynamic_inter_node_module : Collective module to use for barrier on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 427         coll_han_barrier_dynamic_global_communicator_module : Collective module to use for barrier on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 428                    coll_han_bcast_dynamic_intra_node_module : Collective module to use for bcast on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 429                    coll_han_bcast_dynamic_inter_node_module : Collective module to use for bcast on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 430           coll_han_bcast_dynamic_global_communicator_module : Collective module to use for bcast on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 431                   coll_han_gather_dynamic_intra_node_module : Collective module to use for gather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 432                   coll_han_gather_dynamic_inter_node_module : Collective module to use for gather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 433          coll_han_gather_dynamic_global_communicator_module : Collective module to use for gather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 434                   coll_han_reduce_dynamic_intra_node_module : Collective module to use for reduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 435                   coll_han_reduce_dynamic_inter_node_module : Collective module to use for reduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 436          coll_han_reduce_dynamic_global_communicator_module : Collective module to use for reduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 437                  coll_han_scatter_dynamic_intra_node_module : Collective module to use for scatter on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 438                  coll_han_scatter_dynamic_inter_node_module : Collective module to use for scatter on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET4 index= 439         coll_han_scatter_dynamic_global_communicator_module : Collective module to use for scatter on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET4 index= 440                             coll_han_use_dynamic_file_rules : Enable the dynamic selection provided via the dynamic_rules_filename MCA
20250509 201014.822 INFO             PET4 index= 441                             coll_han_dynamic_rules_filename : Configuration file containing the dynamic selection rules
20250509 201014.822 INFO             PET4 index= 442                                 coll_han_dump_dynamic_rules : Switch used to decide if we dump  dynamic rules provided by configuration file
20250509 201014.822 INFO             PET4 index= 443                                 coll_han_max_dynamic_errors : Number of dynamic rules module/function errors printed on rank 0 with a 0 verbosity.Useless if coll_base_verbose is 30 or more.
20250509 201014.822 INFO             PET4 index= 444                                      coll_han_major_version :
20250509 201014.822 INFO             PET4 index= 445                                      coll_han_minor_version :
20250509 201014.822 INFO             PET4 index= 446                                    coll_han_release_version :
20250509 201014.822 INFO             PET4 index= 447                                         coll_inter_priority : Priority of the inter coll component
20250509 201014.822 INFO             PET4 index= 448                                          coll_inter_verbose : Turn verbose message of the inter coll component on/off
20250509 201014.822 INFO             PET4 index= 449                                    coll_inter_major_version :
20250509 201014.822 INFO             PET4 index= 450                                    coll_inter_minor_version :
20250509 201014.822 INFO             PET4 index= 451                                  coll_inter_release_version :
20250509 201014.822 INFO             PET4 index= 452                                        coll_libnbc_priority : Priority of the libnbc coll component
20250509 201014.822 INFO             PET4 index= 453                         coll_libnbc_ibcast_skip_dt_decision : In ibcast only use size of communicator to choose algorithm, exclude data type signature. Set to 'false' to use data type signature in decision. WARNING: If you set this to 'false' then your application should not use non-uniform data type signatures in calls to ibcast.
20250509 201014.822 INFO             PET4 index= 454                            coll_libnbc_iallgather_algorithm : Which iallgather algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.822 INFO             PET4 index= 455                            coll_libnbc_iallreduce_algorithm : Which iallreduce algorithm is used: 0 ignore, 1 ring, 2 binomial, 3 rabenseifner, 4 recursive_doubling
20250509 201014.822 INFO             PET4 index= 456                                coll_libnbc_ibcast_algorithm : Which ibcast algorithm is used: 0 ignore, 1 linear, 2 binomial, 3 chain, 4 knomial
20250509 201014.822 INFO             PET4 index= 457                            coll_libnbc_ibcast_knomial_radix : k-nomial tree radix for the ibcast algorithm (radix > 1)
20250509 201014.822 INFO             PET4 index= 458                               coll_libnbc_iexscan_algorithm : Which iexscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.822 INFO             PET4 index= 459                               coll_libnbc_ireduce_algorithm : Which ireduce algorithm is used: 0 ignore, 1 chain, 2 binomial, 3 rabenseifner
20250509 201014.822 INFO             PET4 index= 460                                 coll_libnbc_iscan_algorithm : Which iscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.822 INFO             PET4 index= 461                                   coll_libnbc_major_version :
20250509 201014.822 INFO             PET4 index= 462                                   coll_libnbc_minor_version :
20250509 201014.822 INFO             PET4 index= 463                                 coll_libnbc_release_version :
20250509 201014.822 INFO             PET4 index= 464                                          coll_self_priority :
20250509 201014.823 INFO             PET4 index= 465                                     coll_self_major_version :
20250509 201014.823 INFO             PET4 index= 466                                     coll_self_minor_version :
20250509 201014.823 INFO             PET4 index= 467                                   coll_self_release_version :
20250509 201014.823 INFO             PET4 index= 468                                          coll_sync_priority : Priority of the sync coll component; only relevant if barrier_before or barrier_after is > 0
20250509 201014.823 INFO             PET4 index= 469                                    coll_sync_barrier_before : Do a synchronization before each Nth collective
20250509 201014.823 INFO             PET4 index= 470                                     coll_sync_barrier_after : Do a synchronization after each Nth collective
20250509 201014.823 INFO             PET4 index= 471                                     coll_sync_major_version :
20250509 201014.823 INFO             PET4 index= 472                                     coll_sync_minor_version :
20250509 201014.823 INFO             PET4 index= 473                                   coll_sync_release_version :
20250509 201014.823 INFO             PET4 index= 474                                         coll_tuned_priority : Priority of the tuned coll component
20250509 201014.823 INFO             PET4 index= 475                                 coll_tuned_init_tree_fanout : Initial fanout used in the tree topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.823 INFO             PET4 index= 476                                coll_tuned_init_chain_fanout : Initial fanout used in the chain (fanout followed by pipeline) topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.823 INFO             PET4 index= 477                               coll_tuned_alltoall_small_msg : threshold (if supported) to decide if small MSGs alltoall algorithm will be used
20250509 201014.823 INFO             PET4 index= 478                        coll_tuned_alltoall_intermediate_msg : threshold (if supported) to decide if intermediate MSGs alltoall algorithm will be used
20250509 201014.823 INFO             PET4 index= 479                                coll_tuned_use_dynamic_rules : Switch used to decide if we use static (compiled/if statements) or dynamic (built at runtime) decision function rules
20250509 201014.823 INFO             PET4 index= 480                           coll_tuned_dynamic_rules_filename : Filename of configuration file that contains the dynamic (@runtime) decision function rules
20250509 201014.823 INFO             PET4 index= 481                        coll_tuned_allreduce_algorithm_count : Number of allreduce algorithms available
20250509 201014.823 INFO             PET4 index= 482                              coll_tuned_allreduce_algorithm : Which allreduce algorithm is used. Can be locked down to any of: 0 ignore, 1 basic linear, 2 nonoverlapping (tuned reduce + tuned bcast), 3 recursive doubling, 4 ring, 5 segmented ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET4 index= 483                  coll_tuned_allreduce_algorithm_segmentsize : Segment size in bytes used by default for allreduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET4 index= 484                  coll_tuned_allreduce_algorithm_tree_fanout : Fanout for n-tree used for allreduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET4 index= 485                 coll_tuned_allreduce_algorithm_chain_fanout : Fanout for chains used for allreduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.823 INFO             PET4 index= 486                         coll_tuned_alltoall_algorithm_count : Number of alltoall algorithms available
20250509 201014.823 INFO             PET4 index= 487                               coll_tuned_alltoall_algorithm : Which alltoall algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise, 3: modified bruck, 4: linear with sync, 5:two proc only. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET4 index= 488                   coll_tuned_alltoall_algorithm_segmentsize : Segment size in bytes used by default for alltoall algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.823 INFO             PET4 index= 489                   coll_tuned_alltoall_algorithm_tree_fanout : Fanout for n-tree used for alltoall algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.823 INFO             PET4 index= 490                  coll_tuned_alltoall_algorithm_chain_fanout : Fanout for chains used for alltoall algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.823 INFO             PET4 index= 491                               coll_tuned_alltoall_large_msg : use pairwise exchange algorithm for messages larger than this value
20250509 201014.823 INFO             PET4 index= 492                               coll_tuned_alltoall_min_procs : use pairwise exchange algorithm for communicators larger than this value
20250509 201014.823 INFO             PET4 index= 493                  coll_tuned_alltoall_algorithm_max_requests : Maximum number of outstanding send or recv requests.  Only has meaning for synchronized algorithms.
20250509 201014.823 INFO             PET4 index= 494                        coll_tuned_allgather_algorithm_count : Number of allgather algorithms available
20250509 201014.823 INFO             PET4 index= 495                              coll_tuned_allgather_algorithm : Which allgather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 bruck, 3 recursive doubling, 4 ring, 5 neighbor exchange, 6: two proc only, 7: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET4 index= 496                  coll_tuned_allgather_algorithm_segmentsize : Segment size in bytes used by default for allgather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.823 INFO             PET4 index= 497                  coll_tuned_allgather_algorithm_tree_fanout : Fanout for n-tree used for allgather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.823 INFO             PET4 index= 498                 coll_tuned_allgather_algorithm_chain_fanout : Fanout for chains used for allgather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.823 INFO             PET4 index= 499                       coll_tuned_allgatherv_algorithm_count : Number of allgatherv algorithms available
20250509 201014.823 INFO             PET4 index= 500                             coll_tuned_allgatherv_algorithm : Which allgatherv algorithm is used. Can be locked down to choice of: 0 ignore, 1 default (allgathervv + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5: two proc only, 6: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.823 INFO             PET4 index= 501                 coll_tuned_allgatherv_algorithm_segmentsize : Segment size in bytes used by default for allgatherv algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.823 INFO             PET4 index= 502                 coll_tuned_allgatherv_algorithm_tree_fanout : Fanout for n-tree used for allgatherv algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.823 INFO             PET4 index= 503                coll_tuned_allgatherv_algorithm_chain_fanout : Fanout for chains used for allgatherv algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.823 INFO             PET4 index= 504                        coll_tuned_alltoallv_algorithm_count : Number of alltoallv algorithms available
20250509 201014.824 INFO             PET4 index= 505                              coll_tuned_alltoallv_algorithm : Which alltoallv algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 506                          coll_tuned_barrier_algorithm_count : Number of barrier algorithms available
20250509 201014.824 INFO             PET4 index= 507                                coll_tuned_barrier_algorithm : Which barrier algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 double ring, 3: recursive doubling 4: bruck, 5: two proc only, 6: tree. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 508                            coll_tuned_bcast_algorithm_count : Number of bcast algorithms available
20250509 201014.824 INFO             PET4 index= 509                                  coll_tuned_bcast_algorithm : Which bcast algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 chain, 3: pipeline, 4: split binary tree, 5: binary tree, 6: binomial tree, 7: knomial tree, 8: scatter_allgather, 9: scatter_allgather_ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 510                      coll_tuned_bcast_algorithm_segmentsize : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.824 INFO             PET4 index= 511                      coll_tuned_bcast_algorithm_tree_fanout : Fanout for n-tree used for bcast algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.824 INFO             PET4 index= 512                     coll_tuned_bcast_algorithm_chain_fanout : Fanout for chains used for bcast algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.824 INFO             PET4 index= 513                    coll_tuned_bcast_algorithm_knomial_radix : k-nomial tree radix for the bcast algorithm (radix > 1).
20250509 201014.824 INFO             PET4 index= 514                           coll_tuned_reduce_algorithm_count : Number of reduce algorithms available
20250509 201014.824 INFO             PET4 index= 515                                 coll_tuned_reduce_algorithm : Which reduce algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 chain, 3 pipeline, 4 binary, 5 binomial, 6 in-order binary, 7 rabenseifner. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 516                     coll_tuned_reduce_algorithm_segmentsize : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.824 INFO             PET4 index= 517                     coll_tuned_reduce_algorithm_tree_fanout : Fanout for n-tree used for reduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.824 INFO             PET4 index= 518                    coll_tuned_reduce_algorithm_chain_fanout : Fanout for chains used for reduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.824 INFO             PET4 index= 519                    coll_tuned_reduce_algorithm_max_requests : Maximum number of outstanding send requests on leaf nodes. 0 means no limit.
20250509 201014.824 INFO             PET4 index= 520                   coll_tuned_reduce_scatter_algorithm_count : Number of reduce_scatter algorithms available
20250509 201014.824 INFO             PET4 index= 521                         coll_tuned_reduce_scatter_algorithm : Which reduce reduce_scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 non-overlapping (Reduce + Scatterv), 2 recursive halving, 3 ring, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 522             coll_tuned_reduce_scatter_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.824 INFO             PET4 index= 523             coll_tuned_reduce_scatter_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.824 INFO             PET4 index= 524            coll_tuned_reduce_scatter_algorithm_chain_fanout : Fanout for chains used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.824 INFO             PET4 index= 525             coll_tuned_reduce_scatter_block_algorithm_count : Number of reduce_scatter_block algorithms available
20250509 201014.824 INFO             PET4 index= 526                   coll_tuned_reduce_scatter_block_algorithm : Which reduce reduce_scatter_block algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic_linear, 2 recursive_doubling, 3 recursive_halving, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 527       coll_tuned_reduce_scatter_block_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.824 INFO             PET4 index= 528       coll_tuned_reduce_scatter_block_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.824 INFO             PET4 index= 529                           coll_tuned_gather_algorithm_count : Number of gather algorithms available
20250509 201014.824 INFO             PET4 index= 530                                 coll_tuned_gather_algorithm : Which gather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 linear with synchronization. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 531                     coll_tuned_gather_algorithm_segmentsize : Segment size in bytes used by default for gather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.824 INFO             PET4 index= 532                     coll_tuned_gather_algorithm_tree_fanout : Fanout for n-tree used for gather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.824 INFO             PET4 index= 533                    coll_tuned_gather_algorithm_chain_fanout : Fanout for chains used for gather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.824 INFO             PET4 index= 534                          coll_tuned_scatter_algorithm_count : Number of scatter algorithms available
20250509 201014.824 INFO             PET4 index= 535                                coll_tuned_scatter_algorithm : Which scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 non-blocking linear. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET4 index= 536                    coll_tuned_scatter_algorithm_segmentsize : Segment size in bytes used by default for scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.824 INFO             PET4 index= 537                    coll_tuned_scatter_algorithm_tree_fanout : Fanout for n-tree used for scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.824 INFO             PET4 index= 538                   coll_tuned_scatter_algorithm_chain_fanout : Fanout for chains used for scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.824 INFO             PET4 index= 539                                coll_tuned_scatter_min_procs : use basic linear algorithm for communicators larger than this value
20250509 201014.824 INFO             PET4 index= 540                   coll_tuned_scatter_algorithm_max_requests : Issue a blocking send every this many non-blocking requests. Only has meaning for non-blocking linear algorithm.
20250509 201014.824 INFO             PET4 index= 541                         coll_tuned_scatter_intermediate_msg : use non-blocking linear algorithm for messages larger than this value
20250509 201014.824 INFO             PET4 index= 542                                coll_tuned_scatter_large_msg : use linear algorithm for messages larger than this value
20250509 201014.824 INFO             PET4 index= 543                           coll_tuned_exscan_algorithm_count : Number of exscan algorithms available
20250509 201014.824 INFO             PET4 index= 544                                 coll_tuned_exscan_algorithm : Which exscan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET4 index= 545                             coll_tuned_scan_algorithm_count : Number of scan algorithms available
20250509 201014.825 INFO             PET4 index= 546                                   coll_tuned_scan_algorithm : Which scan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET4 index= 547                                    coll_tuned_major_version :
20250509 201014.825 INFO             PET4 index= 548                                    coll_tuned_minor_version :
20250509 201014.825 INFO             PET4 index= 549                                  coll_tuned_release_version :
20250509 201014.825 INFO             PET4 index= 550                                       coll_ftagree_priority : Priority of the ftagree coll component
20250509 201014.825 INFO             PET4 index= 551                                      coll_ftagree_agreement : Agreement algorithm 0: Allreduce (NOT FAULT TOLERANT); 1: Early Returning Consensus (era); 2: Early Terminating Consensus (eta)
20250509 201014.825 INFO             PET4 index= 552                                   coll_ftagree_era_topology : ERA topology 1: binary tree; 2: star tree; 3: string tree
20250509 201014.825 INFO             PET4 index= 553                                    coll_ftagree_era_rebuild : ERA rebuild/rebalance the tree in a first post-failure agreement 0: no rebalancing; 1: rebalance all the time
20250509 201014.825 INFO             PET4 index= 554                                  coll_ftagree_major_version :
20250509 201014.825 INFO             PET4 index= 555                                  coll_ftagree_minor_version :
20250509 201014.825 INFO             PET4 index= 556                                coll_ftagree_release_version :
20250509 201014.825 INFO             PET4 index= 560                                            coll_sm_priority : Priority of the sm coll component
20250509 201014.825 INFO             PET4 index= 561                                        coll_sm_control_size : Length of the control data -- should usually be either the length of a cache line on most SMPs, or the size of a page on machines that support direct memory affinity page placement (in bytes)
20250509 201014.825 INFO             PET4 index= 562                                       coll_sm_fragment_size : Fragment size (in bytes) used for passing data through shared memory (will be rounded up to the nearest control_size size)
20250509 201014.825 INFO             PET4 index= 563                                   coll_sm_comm_in_use_flags : Number of "in use" flags, used to mark a message passing area segment as currently being used or not (must be >= 2 and <= comm_num_segments)
20250509 201014.825 INFO             PET4 index= 564                                   coll_sm_comm_num_segments : Number of segments in each communicator's shared memory message passing area (must be >= 2, and must be a multiple of comm_in_use_flags)
20250509 201014.825 INFO             PET4 index= 565                                         coll_sm_tree_degree : Degree of the tree for tree-based operations (must be => 1 and <= min(control_size, 255))
20250509 201014.825 INFO             PET4 index= 566                                      coll_sm_info_num_procs : Number of processes to use for the calculation of the shared_mem_size MCA information parameter (must be => 2)
20250509 201014.825 INFO             PET4 index= 567                                coll_sm_shared_mem_used_data : Amount of shared memory used, per communicator, in the shared memory data area for info_num_procs processes (in bytes)
20250509 201014.825 INFO             PET4 index= 568                                       coll_sm_major_version :
20250509 201014.825 INFO             PET4 index= 569                                       coll_sm_minor_version :
20250509 201014.825 INFO             PET4 index= 570                                     coll_sm_release_version :
20250509 201014.825 INFO             PET4 index= 571                                                         osc : Default selection set of components for the osc framework (<none> means use all components that can be found)
20250509 201014.825 INFO             PET4 index= 572                                            osc_base_verbose : Verbosity level for the osc framework (default: 0)
20250509 201014.825 INFO             PET4 index= 573                                    osc_sm_backing_directory : Directory to place backing files for shared memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.825 INFO             PET4 index= 574                                             osc_sm_priority : Priority of the osc/sm component (default: 100)
20250509 201014.825 INFO             PET4 index= 575                                        osc_sm_major_version :
20250509 201014.825 INFO             PET4 index= 576                                        osc_sm_minor_version :
20250509 201014.825 INFO             PET4 index= 577                                      osc_sm_release_version :
20250509 201014.825 INFO             PET4 index= 581                                           osc_rdma_no_locks : Enable optimizations available only if MPI_LOCK is not used. Info key of same name overrides this value (default: false)
20250509 201014.825 INFO             PET4 index= 582                               osc_rdma_acc_single_intrinsic : Enable optimizations for MPI_Fetch_and_op, MPI_Accumulate, etc for codes that will not use anything more than a single predefined datatype (default: false)
20250509 201014.825 INFO             PET4 index= 583                                        osc_rdma_acc_use_amo : Enable the use of network atomic memory operations when using single intrinsic optimizations. If not set network compare-and-swap will be used instead (default: true)
20250509 201014.825 INFO             PET4 index= 584                                        osc_rdma_buffer_size : Size of temporary buffers (default: 32768)
20250509 201014.825 INFO             PET4 index= 585                                         osc_rdma_max_attach : Maximum number of buffers that can be attached to a dynamic window. Keep in mind that each attached buffer will use a potentially limited resource (default: 64)
20250509 201014.825 INFO             PET4 index= 586                                           osc_rdma_priority : Priority of the osc/rdma component (default: 20)
20250509 201014.825 INFO             PET4 index= 587                                       osc_rdma_locking_mode : Locking mode to use for passive-target synchronization (default: two_level)
20250509 201014.825 INFO             PET4 index= 588                                               osc_rdma_btls : Comma-delimited list of BTL component names to allow without verifying connectivity. Do not add a BTL to to this list unless it can reach all processes in any communicator used with an MPI window (default: ugni,uct,ofi)
20250509 201014.825 INFO             PET4 index= 589                                  osc_rdma_backing_directory : Directory to place backing files for memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.825 INFO             PET4 index= 590                                    osc_rdma_network_max_amo : Maximum predefined datatype count for which network atomic operations will be used. Accumulate operations larger than this count will use a get/op/put protocol. The optimal value is dictated by the network injection rate for the interconnect. Generally a smaller number will yield better larger accumulate performance. (default: 32)
20250509 201014.825 INFO             PET4 index= 591                           osc_rdma_minimum_memory_alignment : The minimum memory alignment used to allocate local window memory (default: 16384). This is a best effort approach. Alignments larger than the page size may not be supported.
20250509 201014.825 INFO             PET4 index= 592                                      osc_rdma_major_version :
20250509 201014.825 INFO             PET4 index= 593                                      osc_rdma_minor_version :
20250509 201014.825 INFO             PET4 index= 594                                    osc_rdma_release_version :
20250509 201014.825 INFO             PET4 index= 595                                       btl_tcp_bandwidth_en0 :
20250509 201014.825 INFO             PET4 index= 596                                         btl_tcp_latency_en0 :
20250509 201014.825 INFO             PET4 index= 597                                     btl_tcp_bandwidth_en0:0 :
20250509 201014.825 INFO             PET4 index= 598                                       btl_tcp_latency_en0:0 :
20250509 201014.825 INFO             PET4 index= 599                                                        part : Default selection set of components for the part framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET4 index= 600                                           part_base_verbose : Verbosity level for the part framework (default: 0)
20250509 201014.826 INFO             PET4 index= 601                                  part_persist_free_list_num : Initial size of request free lists
20250509 201014.826 INFO             PET4 index= 602                                  part_persist_free_list_max : Maximum size of request free lists
20250509 201014.826 INFO             PET4 index= 603                                  part_persist_free_list_inc : Number of elements to add when growing request free lists
20250509 201014.826 INFO             PET4 index= 604                                  part_persist_major_version :
20250509 201014.826 INFO             PET4 index= 605                                  part_persist_minor_version :
20250509 201014.826 INFO             PET4 index= 606                                part_persist_release_version :
20250509 201014.826 INFO             PET4 index= 607                                                      memory : Default selection set of components for the memory framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET4 index= 608                                         memory_base_verbose : Verbosity level for the memory framework (default: 0)
20250509 201014.826 INFO             PET4 index= 609                                                     patcher : Default selection set of components for the patcher framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET4 index= 610                                        patcher_base_verbose : Verbosity level for the patcher framework (default: 0)
20250509 201014.826 INFO             PET4 index= 611                                  patcher_overwrite_priority : Priority of the overwrite binary patcher component
20250509 201014.826 INFO             PET4 index= 612                             patcher_overwrite_major_version :
20250509 201014.826 INFO             PET4 index= 613                             patcher_overwrite_minor_version :
20250509 201014.826 INFO             PET4 index= 614                           patcher_overwrite_release_version :
20250509 201014.826 INFO             PET4 index= 615                                                        fbtl : Default selection set of components for the fbtl framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET4 index= 616                                           fbtl_base_verbose : Verbosity level for the fbtl framework (default: 0)
20250509 201014.826 INFO             PET4 index= 617                                         fbtl_posix_priority : Priority of the fbtl posix component
20250509 201014.826 INFO             PET4 index= 618                                   fbtl_posix_max_block_size : Maximum average size in bytes of a data block in an iovec for data sieving. An average block size larger than this parameter will disable data sieving. Default: 1048576 bytes.
20250509 201014.826 INFO             PET4 index= 619                                     fbtl_posix_max_gap_size : Maximum average gap size between two blocks in an iovec for data sieving. An average gap size larger than this parameter will disable data sieving. Default: 4096 bytes.
20250509 201014.826 INFO             PET4 index= 620                                  fbtl_posix_max_tmpbuf_size : Maximum size of the temporary buffer used for data sieving in bytes. Default: 67108864 (64MB).
20250509 201014.826 INFO             PET4 index= 621                                 fbtl_posix_read_datasieving : Parameter indicating whether to perform data sieving for read operations. Default: true.
20250509 201014.826 INFO             PET4 index= 622                                fbtl_posix_write_datasieving : Parameter indicating whether to perform data sieving for write operations. Default: true.
20250509 201014.826 INFO             PET4 index= 623                                    fbtl_posix_major_version :
20250509 201014.826 INFO             PET4 index= 624                                    fbtl_posix_minor_version :
20250509 201014.826 INFO             PET4 index= 625                                  fbtl_posix_release_version :
20250509 201014.826 INFO             PET4 index= 626                                                       fcoll : Default selection set of components for the fcoll framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET4 index= 627                                          fcoll_base_verbose : Verbosity level for the fcoll framework (default: 0)
20250509 201014.826 INFO             PET4 index= 628                                      fcoll_dynamic_priority : Priority of the dynamic fcoll component
20250509 201014.826 INFO             PET4 index= 629                                 fcoll_dynamic_major_version :
20250509 201014.826 INFO             PET4 index= 630                                 fcoll_dynamic_minor_version :
20250509 201014.826 INFO             PET4 index= 631                               fcoll_dynamic_release_version :
20250509 201014.826 INFO             PET4 index= 632                                 fcoll_dynamic_gen2_priority : Priority of the dynamic_gen2 fcoll component
20250509 201014.826 INFO             PET4 index= 633                               fcoll_dynamic_gen2_num_groups : Number of subgroups created by the dynamic_gen2 component
20250509 201014.826 INFO             PET4 index= 634                            fcoll_dynamic_gen2_major_version :
20250509 201014.826 INFO             PET4 index= 635                            fcoll_dynamic_gen2_minor_version :
20250509 201014.826 INFO             PET4 index= 636                          fcoll_dynamic_gen2_release_version :
20250509 201014.826 INFO             PET4 index= 637                                   fcoll_individual_priority : Priority of the individual fcoll component
20250509 201014.826 INFO             PET4 index= 638                              fcoll_individual_major_version :
20250509 201014.826 INFO             PET4 index= 639                              fcoll_individual_minor_version :
20250509 201014.826 INFO             PET4 index= 640                            fcoll_individual_release_version :
20250509 201014.826 INFO             PET4 index= 641                                       fcoll_vulcan_priority : Priority of the vulcan fcoll component
20250509 201014.826 INFO             PET4 index= 642                                     fcoll_vulcan_num_groups : Number of subgroups created by the vulcan component
20250509 201014.826 INFO             PET4 index= 643                                fcoll_vulcan_write_chunksize : Chunk size written at once. Default: stripe_size of the file system
20250509 201014.826 INFO             PET4 index= 644                                       fcoll_vulcan_async_io : Asynchronous I/O support options. 0: Automatic choice (default) 1: Asynchronous I/O only. 2: Synchronous I/O only.
20250509 201014.827 INFO             PET4 index= 645                                  fcoll_vulcan_major_version :
20250509 201014.827 INFO             PET4 index= 646                                  fcoll_vulcan_minor_version :
20250509 201014.827 INFO             PET4 index= 647                                fcoll_vulcan_release_version :
20250509 201014.827 INFO             PET4 index= 648                                                          fs : Default selection set of components for the fs framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET4 index= 649                                             fs_base_verbose : Verbosity level for the fs framework (default: 0)
20250509 201014.827 INFO             PET4 index= 650                                             fs_ufs_priority : Priority of the fs ufs component
20250509 201014.827 INFO             PET4 index= 651                                       fs_ufs_lock_algorithm : Locking algorithm used by the fs ufs component.  0: auto (default), 1: skip locking, 2: always lock entire file, 3: lock only specific ranges
20250509 201014.827 INFO             PET4 index= 652                                        fs_ufs_major_version :
20250509 201014.827 INFO             PET4 index= 653                                        fs_ufs_minor_version :
20250509 201014.827 INFO             PET4 index= 654                                      fs_ufs_release_version :
20250509 201014.827 INFO             PET4 index= 655                                                          io : Default selection set of components for the io framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET4 index= 656                                             io_base_verbose : Verbosity level for the io framework (default: 0)
20250509 201014.827 INFO             PET4 index= 657                                           io_ompio_priority : Priority of the io ompio component
20250509 201014.827 INFO             PET4 index= 658                                    io_ompio_delete_priority : Delete priority of the io ompio component
20250509 201014.827 INFO             PET4 index= 659                            io_ompio_record_file_offset_info : The information of the file offset/length
20250509 201014.827 INFO             PET4 index= 660                                   io_ompio_coll_timing_info : Enable collective algorithm timing information
20250509 201014.827 INFO             PET4 index= 661                                  io_ompio_cycle_buffer_size : Data size issued by individual reads/writes per call
20250509 201014.827 INFO             PET4 index= 662                               io_ompio_pipeline_buffer_size : Size of temporary buffer used by individual reads/writes in the pipeline protocol
20250509 201014.827 INFO             PET4 index= 663                                      io_ompio_bytes_per_agg : Size of temporary buffer for collective I/O operations
20250509 201014.827 INFO             PET4 index= 664                                    io_ompio_num_aggregators : number of aggregators for collective I/O operations
20250509 201014.827 INFO             PET4 index= 665                                    io_ompio_grouping_option : Option for grouping of processes in the aggregator selection 1: Data volume based grouping 2: maximizing group size uniformity 3: maximimze data contiguity 4: hybrid optimization  5: simple (default) 6: skip refinement step 7: simple+: grouping based on default file view
20250509 201014.827 INFO             PET4 index= 666                              io_ompio_max_aggregators_ratio : Maximum number of processes that can be an aggregator expressed as the ratio to the number of process used to open the file i.e 1 out of n processes can be an aggregator, with n being specified by this mca parameter.
20250509 201014.827 INFO             PET4 index= 667                       io_ompio_aggregators_cutoff_threshold : Relative cutoff threshold for incrementing the number of aggregators in the simple aggregator selection algorithm (5). Lower value for this parameter will lead to higher no. of aggregators.
20250509 201014.827 INFO             PET4 index= 668                                    io_ompio_overwrite_amode : Overwrite WRONLY amode to RDWR to enable data sieving 1: allow overwrite (default) 0: do not overwrite amode provided by application
20250509 201014.827 INFO             PET4 index= 669                               io_ompio_verbose_info_parsing : Provide visual output when parsing info objects 0: no verbose output (default) 1: verbose output by rank 0 2: verbose output by all ranks
20250509 201014.827 INFO             PET4 index= 670                                      io_ompio_major_version :
20250509 201014.827 INFO             PET4 index= 671                                      io_ompio_minor_version :
20250509 201014.827 INFO             PET4 index= 672                                    io_ompio_release_version :
20250509 201014.827 INFO             PET4 index= 673                                        io_romio341_priority : Priority of the io romio component
20250509 201014.827 INFO             PET4 index= 674                                 io_romio341_delete_priority : Delete priority of the io romio component
20250509 201014.827 INFO             PET4 index= 675                                         io_romio341_version : Version of ROMIO
20250509 201014.827 INFO             PET4 index= 676                           io_romio341_user_configure_params : User-specified command line parameters passed to ROMIO's configure script
20250509 201014.827 INFO             PET4 index= 677                       io_romio341_complete_configure_params : Complete set of command line parameters passed to ROMIO's configure script
20250509 201014.827 INFO             PET4 index= 678                                   io_romio341_major_version :
20250509 201014.827 INFO             PET4 index= 679                                   io_romio341_minor_version :
20250509 201014.827 INFO             PET4 index= 680                                 io_romio341_release_version :
20250509 201014.827 INFO             PET4 index= 681                                                    sharedfp : Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET4 index= 682                                       sharedfp_base_verbose : Verbosity level for the sharedfp framework (default: 0)
20250509 201014.827 INFO             PET4 index= 683                                sharedfp_individual_priority : Priority of the individual sharedfp component
20250509 201014.827 INFO             PET4 index= 684                                 sharedfp_individual_verbose : Verbosity of the individual sharedfp component
20250509 201014.827 INFO             PET4 index= 685                           sharedfp_individual_major_version :
20250509 201014.827 INFO             PET4 index= 686                           sharedfp_individual_minor_version :
20250509 201014.827 INFO             PET4 index= 687                         sharedfp_individual_release_version :
20250509 201014.827 INFO             PET4 index= 688                                sharedfp_lockedfile_priority : Priority of the lockedfile sharedfp component
20250509 201014.827 INFO             PET4 index= 689                                 sharedfp_lockedfile_verbose : Verbosity of the lockedfile sharedfp component
20250509 201014.827 INFO             PET4 index= 690                           sharedfp_lockedfile_major_version :
20250509 201014.828 INFO             PET4 index= 691                           sharedfp_lockedfile_minor_version :
20250509 201014.828 INFO             PET4 index= 692                         sharedfp_lockedfile_release_version :
20250509 201014.828 INFO             PET4 index= 693                                        sharedfp_sm_priority : Priority of the sm sharedfp component
20250509 201014.828 INFO             PET4 index= 694                                         sharedfp_sm_verbose : Verbosity of the sm sharedfp component
20250509 201014.828 INFO             PET4 index= 695                                   sharedfp_sm_major_version :
20250509 201014.828 INFO             PET4 index= 696                                   sharedfp_sm_minor_version :
20250509 201014.828 INFO             PET4 index= 697                                 sharedfp_sm_release_version :
20250509 201014.828 INFO             PET4 index= 698                                                        topo : Default selection set of components for the topo framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET4 index= 699                                           topo_base_verbose : Verbosity level for the topo framework (default: 0)
20250509 201014.828 INFO             PET4 index= 700                                    topo_basic_major_version :
20250509 201014.828 INFO             PET4 index= 701                                    topo_basic_minor_version :
20250509 201014.828 INFO             PET4 index= 702                                  topo_basic_release_version :
20250509 201014.828 INFO             PET4 index= 703                                 topo_treematch_reorder_mode : If set the reordering will be done in a partially distributed way (default=0). If partially-distributed only local knowledge will be used, possibly leading to less accurate reordering.
20250509 201014.828 INFO             PET4 index= 704                                topo_treematch_major_version :
20250509 201014.828 INFO             PET4 index= 705                                topo_treematch_minor_version :
20250509 201014.828 INFO             PET4 index= 706                              topo_treematch_release_version :
20250509 201014.828 INFO             PET4 --- VMK::logSystem() end ---------------------------------
20250509 201014.828 INFO             PET4 main: --- VMK::log() start -------------------------------------
20250509 201014.828 INFO             PET4 main: vm located at: 0x130e045a0
20250509 201014.828 INFO             PET4 main: mpionly=1 threadsflag=0
20250509 201014.828 INFO             PET4 main: ssiCount=1 localSsi=0
20250509 201014.828 INFO             PET4 main: devCount=0 ssiLocalDevCount=0
20250509 201014.828 INFO             PET4 main: petCount=6 ssiLocalPetCount=6
20250509 201014.828 INFO             PET4 main: localPet=4 mypthid=0x202a94f40 ssiLocalPet=4 currentSsiPe=-1
20250509 201014.828 INFO             PET4 main: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.828 INFO             PET4 main: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.828 INFO             PET4 main:  PE=0 SSI=0 SSIPE=0
20250509 201014.828 INFO             PET4 main: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.828 INFO             PET4 main:  PE=1 SSI=0 SSIPE=1
20250509 201014.828 INFO             PET4 main: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.828 INFO             PET4 main:  PE=2 SSI=0 SSIPE=2
20250509 201014.828 INFO             PET4 main: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.828 INFO             PET4 main:  PE=3 SSI=0 SSIPE=3
20250509 201014.828 INFO             PET4 main: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.828 INFO             PET4 main:  PE=4 SSI=0 SSIPE=4
20250509 201014.828 INFO             PET4 main: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.828 INFO             PET4 main:  PE=5 SSI=0 SSIPE=5
20250509 201014.828 INFO             PET4 main: --- VMK::log() end ---------------------------------------
20250509 201014.831 INFO             PET4 Executing 'userm1_setvm'
20250509 201014.831 INFO             PET4 Executing 'userm1_register'
20250509 201014.831 INFO             PET4 Executing 'userm2_setvm'
20250509 201014.831 DEBUG            PET4 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.831 DEBUG            PET4 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.832 INFO             PET4 model1: --- VMK::log() start -------------------------------------
20250509 201014.832 INFO             PET4 model1: vm located at: 0x120f0b210
20250509 201014.832 INFO             PET4 model1: mpionly=1 threadsflag=0
20250509 201014.832 INFO             PET4 model1: ssiCount=1 localSsi=0
20250509 201014.832 INFO             PET4 model1: devCount=0 ssiLocalDevCount=0
20250509 201014.832 INFO             PET4 model1: petCount=6 ssiLocalPetCount=6
20250509 201014.832 INFO             PET4 model1: localPet=4 mypthid=0x202a94f40 ssiLocalPet=4 currentSsiPe=-1
20250509 201014.832 INFO             PET4 model1: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.832 INFO             PET4 model1: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.832 INFO             PET4 model1:  PE=0 SSI=0 SSIPE=0
20250509 201014.832 INFO             PET4 model1: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.832 INFO             PET4 model1:  PE=1 SSI=0 SSIPE=1
20250509 201014.832 INFO             PET4 model1: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.832 INFO             PET4 model1:  PE=2 SSI=0 SSIPE=2
20250509 201014.832 INFO             PET4 model1: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.832 INFO             PET4 model1:  PE=3 SSI=0 SSIPE=3
20250509 201014.832 INFO             PET4 model1: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.832 INFO             PET4 model1:  PE=4 SSI=0 SSIPE=4
20250509 201014.832 INFO             PET4 model1: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.832 INFO             PET4 model1:  PE=5 SSI=0 SSIPE=5
20250509 201014.832 INFO             PET4 model1: --- VMK::log() end ---------------------------------------
20250509 201014.837 INFO             PET4 Entering 'user1_run'
20250509 201014.837 INFO             PET4  user1_run: on SSIPE:           -1  Filling data lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201017.504 INFO             PET4  user1_run: on SSIPE:           -1  Filling data lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201019.434 INFO             PET4  user1_run: on SSIPE:           -1  Filling data lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201021.934 INFO             PET4  user1_run: on SSIPE:           -1  Filling data lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201024.250 INFO             PET4  user1_run: on SSIPE:           -1  Filling data lbound:        6669           1           1  ubound:        8334        1200          10
20250509 201026.921 INFO             PET4 Exiting 'user1_run'
20250509 201046.306 INFO             PET4  NUMBER_OF_PROCESSORS           6
20250509 201046.307 INFO             PET4  PASS  System Test ESMF_FieldSharedDeSSISTest, ESMF_FieldSharedDeSSISTest.F90, line 276
20250509 201046.307 INFO             PET4  Finalizing ESMF
20250509 201014.763 INFO             PET5 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.791 INFO             PET5 !!! THE ESMF_LOG IS SET TO OUTPUT ALL LOG MESSAGES !!!
20250509 201014.791 INFO             PET5 !!!     THIS MAY CAUSE SLOWDOWN IN PERFORMANCE     !!!
20250509 201014.791 INFO             PET5 !!! FOR PRODUCTION RUNS, USE:                      !!!
20250509 201014.791 INFO             PET5 !!!                   ESMF_LOGKIND_Multi_On_Error  !!!
20250509 201014.791 INFO             PET5 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
20250509 201014.791 INFO             PET5 Running with ESMF Version   : v8.9.0b08-9-gea72ab2180
20250509 201014.791 INFO             PET5 ESMF library build date/time: "May  9 2025" "19:17:42"
20250509 201014.791 INFO             PET5 ESMF library build location : /Users/sacks/projects/scratch/esmf-testing/gfortranclang_12.2.0_14.0.0_openmpi_g_develop/esmf
20250509 201014.791 INFO             PET5 ESMF_COMM                   : openmpi
20250509 201014.791 INFO             PET5 ESMF_MOAB                   : enabled
20250509 201014.791 INFO             PET5 ESMF_LAPACK                 : enabled
20250509 201014.791 INFO             PET5 ESMF_NETCDF                 : enabled
20250509 201014.791 INFO             PET5 ESMF_PNETCDF                : disabled
20250509 201014.791 INFO             PET5 ESMF_PIO                    : enabled
20250509 201014.791 INFO             PET5 ESMF_YAMLCPP                : enabled
20250509 201014.801 INFO             PET5 --- VMK::logSystem() start -------------------------------
20250509 201014.801 INFO             PET5 esmfComm=openmpi
20250509 201014.801 INFO             PET5 isPthreadsEnabled=1
20250509 201014.801 INFO             PET5 isOpenMPEnabled=0
20250509 201014.801 INFO             PET5 isOpenACCEnabled=0
20250509 201014.801 INFO             PET5 isSsiSharedMemoryEnabled=1
20250509 201014.801 INFO             PET5 isNvmlEnabled=0
20250509 201014.801 INFO             PET5 isNumaEnabled=0
20250509 201014.801 INFO             PET5 ssiCount=1 peCount=6
20250509 201014.801 INFO             PET5 PE=0 SSI=0 SSIPE=0
20250509 201014.804 INFO             PET5 PE=1 SSI=0 SSIPE=1
20250509 201014.804 INFO             PET5 PE=2 SSI=0 SSIPE=2
20250509 201014.804 INFO             PET5 PE=3 SSI=0 SSIPE=3
20250509 201014.804 INFO             PET5 PE=4 SSI=0 SSIPE=4
20250509 201014.804 INFO             PET5 PE=5 SSI=0 SSIPE=5
20250509 201014.804 INFO             PET5 ndevs=0 ndevsSSI=0
20250509 201014.804 INFO             PET5 
20250509 201014.804 INFO             PET5 --- VMK::logSystem() MPI Layer ---------------------------
20250509 201014.804 INFO             PET5 MPI_VERSION=3
20250509 201014.804 INFO             PET5 MPI_SUBVERSION=1
20250509 201014.804 INFO             PET5 mpi_t_okay=1
20250509 201014.805 INFO             PET5 --- VMK::logSystem() MPI Tool Interface Control Vars ---
20250509 201014.805 INFO             PET5 index=   0                                         base_help_aggregate : If opal_base_help_aggregate is true, duplicate help messages will be aggregated rather than displayed individually.  This can be helpful for parallel jobs that experience multiple identical failures; rather than print out the same help/failure message N times, display it once with a count of how many processes sent the same message. Default: true.
20250509 201014.805 INFO             PET5 index=   1                                        mca_base_param_files : Path for MCA configuration files containing variable values
20250509 201014.805 INFO             PET5 index=   2                                             mca_param_files : Path for MCA configuration files containing variable values
20250509 201014.805 INFO             PET5 index=   3                                mca_base_override_param_file : Variables set in this file will override any value set inthe environment or another configuration file
20250509 201014.805 INFO             PET5 index=   4                          mca_base_suppress_override_warning : Suppress warnings when attempting to set an overridden value (default: false)
20250509 201014.805 INFO             PET5 index=   5                                  mca_base_param_file_prefix : Aggregate MCA parameter file sets
20250509 201014.805 INFO             PET5 index=   6                                  mca_base_envar_file_prefix : Aggregate MCA parameter file set for env variables
20250509 201014.805 INFO             PET5 index=   7                                    mca_base_param_file_path : Aggregate MCA parameter Search path
20250509 201014.805 INFO             PET5 index=   8                              mca_base_param_file_path_force : Forced Aggregate MCA parameter Search path
20250509 201014.805 INFO             PET5 index=   9                                                 opal_signal : Comma-delimited list of integer signal numbers to Open MPI to attempt to intercept.  Upon receipt of the intercepted signal, Open MPI will display a stack trace and abort.  Open MPI will *not* replace signals if handlers are already installed by the time MPI_INIT is invoked.  Optionally append ":complain" to any signal number in the comma-delimited list to make Open MPI complain if it detects another signal handler (and therefore does not insert its own).
20250509 201014.805 INFO             PET5 index=  10                                      opal_stacktrace_output : Specifies where the stack trace output stream goes.  Accepts one of the following: none (disabled), stderr (default), stdout, file[:filename].   If 'filename' is not specified, a default filename of 'stacktrace' is used.  The 'filename' is appended with either '.PID' or '.RANK.PID', if RANK is available.  The 'filename' can be an absolute path or a relative path to the current working directory.
20250509 201014.805 INFO             PET5 index=  11                                       opal_net_private_ipv4 : Semicolon-delimited list of CIDR notation entries specifying what networks are considered "private" (default value based on RFC1918 and RFC3330)
20250509 201014.805 INFO             PET5 index=  12                                     opal_set_max_sys_limits : Set the specified system-imposed limits to the specified value, including "unlimited".Supported params: core, filesize, maxmem, openfiles, stacksize, maxchildren
20250509 201014.805 INFO             PET5 index=  13                                         opal_var_dump_color : The colors to use when dumping MCA vars with color (e.g. ompi_info). The format is a comma-delimited key=value list, where the key is the attribute whose color to adjust, and the value is the ANSI color code (see the ANSI X3.64 CSI SGR sequence). Available keys: name,value,valid_values.
20250509 201014.805 INFO             PET5 index=  14                                opal_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.805 INFO             PET5 index=  15                                           opal_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.805 INFO             PET5 index=  16                                opal_warn_on_missing_libcuda : Whether to print a message when CUDA support is enabled but libcuda is not found
20250509 201014.805 INFO             PET5 index=  17                                            mpi_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.805 INFO             PET5 index=  18                                           opal_leave_pinned : Whether to use the "leave pinned" protocol or not.  Enabling this setting can help bandwidth performance when repeatedly sending and receiving large messages with the same buffers over RDMA-based networks (false = do not use "leave pinned" protocol, true = use "leave pinned" protocol, auto = allow network to choose at runtime).
20250509 201014.805 INFO             PET5 index=  19                                   mpi_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.805 INFO             PET5 index=  20                                  opal_leave_pinned_pipeline : Whether to use the "leave pinned pipeline" protocol or not.
20250509 201014.806 INFO             PET5 index=  21                                            mpi_warn_on_fork : If nonzero, issue a warning if program forks under conditions that could cause system errors
20250509 201014.806 INFO             PET5 index=  22                                            opal_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.806 INFO             PET5 index=  23                                      opal_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.806 INFO             PET5 index=  24                                           mca_base_env_list : Set SHELL env variables
20250509 201014.806 INFO             PET5 index=  25                                 mca_base_env_list_delimiter : Set SHELL env variables delimiter. Default: semicolon ';'
20250509 201014.806 INFO             PET5 index=  26                                  mca_base_env_list_internal : Store SHELL env variables from amca conf file
20250509 201014.806 INFO             PET5 index=  27                                 opal_max_thread_in_progress : Number of thread allowed in opal_progress. Default: 1
20250509 201014.806 INFO             PET5 index=  28                                     mca_base_component_path : Path where to look for additional components
20250509 201014.806 INFO             PET5 index=  29                                          mca_component_path : Path where to look for additional components
20250509 201014.806 INFO             PET5 index=  30                         mca_base_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.806 INFO             PET5 index=  31                              mca_component_show_load_errors : Whether to show warnings for components that fail to load or not.  Valid values are "all" (meaning: all load failures are reported), "none" (no load failures are reported), or a comma-delimited list of items, each of which can be a framework/component pair or a framework name (only load failures from the specifically-listed items are reported).  If the comma-delimited list is prefixed with "^", then orientation of the list is negated: warn about all load failures *except* for the listed items.
20250509 201014.806 INFO             PET5 index=  32                        mca_base_component_track_load_errors : Whether to track errors for components that failed to load or not
20250509 201014.806 INFO             PET5 index=  33                           mca_base_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.806 INFO             PET5 index=  34                                mca_component_disable_dlopen : Whether to attempt to disable opening dynamic components or not
20250509 201014.808 INFO             PET5 index=  35                                            mca_base_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.808 INFO             PET5 index=  36                                                 mca_verbose : Specifies where the default error output stream goes (this is separate from distinct help messages).  Accepts a comma-delimited list of: stderr, stdout, syslog, syslogpri:<notice|info|debug>, syslogid:<str> (where str is the prefix string for all syslog notices), file[:filename] (if filename is not specified, a default filename is used), fileappend (if not specified, the file is opened for truncation), level[:N] (if specified, integer verbose level; otherwise, 0 is implied)
20250509 201014.811 INFO             PET5 index=  37                                                          dl : Default selection set of components for the dl framework (<none> means use all components that can be found)
20250509 201014.811 INFO             PET5 index=  38                                             dl_base_verbose : Verbosity level for the dl framework (default: 0)
20250509 201014.811 INFO             PET5 index=  39                                 dl_dlopen_filename_suffixes : Comma-delimited list of filename suffixes that the dlopen component will try
20250509 201014.811 INFO             PET5 index=  40                                     dl_dlopen_major_version :
20250509 201014.811 INFO             PET5 index=  41                                     dl_dlopen_minor_version :
20250509 201014.811 INFO             PET5 index=  42                                   dl_dlopen_release_version :
20250509 201014.811 INFO             PET5 index=  43                                               mpi_ft_enable : Enable UFLM MPI Fault Tolerance framework
20250509 201014.811 INFO             PET5 index=  44                                              mpi_ft_verbose : Verbosity level of the ULFM MPI Fault Tolerance framework
20250509 201014.811 INFO             PET5 index=  45                                       mpi_ft_reliable_bcast : Reliable Broadcast algorithm (1: Binomial Graph Diffusion; 2: N^2 full graph diffusion)
20250509 201014.811 INFO             PET5 index=  46                               mpi_ft_propagator_with_rbcast : Use the OMPI reliable broadcast failure propagator, or disable it and use only RTE propagation (slower)
20250509 201014.811 INFO             PET5 index=  47                                             mpi_ft_detector : Use the OMPI heartbeat based failure detector, or disable it and use only RTE and in-band detection (slower)
20250509 201014.811 INFO             PET5 index=  48                                      mpi_ft_detector_thread : Delegate failure detector to a separate thread
20250509 201014.811 INFO             PET5 index=  49                                      mpi_ft_detector_period : Period of heartbeat emission (s)
20250509 201014.811 INFO             PET5 index=  50                                     mpi_ft_detector_timeout : Timeout before we start suspecting a process after the last heartbeat reception (must be larger than 3*ompi_mpi_ft_detector_period)
20250509 201014.811 INFO             PET5 index=  51                              mpi_ft_detector_rdma_heartbeat : Use rdma put to deposit heartbeats into the observer memory
20250509 201014.811 INFO             PET5 index=  52                                             mpi_param_check : Whether you want MPI API parameters checked at run-time or not.  Possible values are 0 (no checking) and 1 (perform checking at run-time)
20250509 201014.811 INFO             PET5 index=  53                                         mpi_yield_when_idle : Yield the processor when waiting for MPI communication (for MPI processes, will default to 1 when oversubscribing nodes)
20250509 201014.814 INFO             PET5 index=  54                                         mpi_event_tick_rate : How often to progress TCP communications (0 = never, otherwise specified in microseconds)
20250509 201014.814 INFO             PET5 index=  55                                       mpi_show_handle_leaks : Whether MPI_FINALIZE shows all MPI handles that were not freed or not
20250509 201014.814 INFO             PET5 index=  56                                         mpi_no_free_handles : Whether to actually free MPI objects when their handles are freed
20250509 201014.814 INFO             PET5 index=  57                                mpi_show_mpi_alloc_mem_leaks : If >0, MPI_FINALIZE will show up to this many instances of memory allocated by MPI_ALLOC_MEM that was not freed by MPI_FREE_MEM
20250509 201014.814 INFO             PET5 index=  58                                         mpi_show_mca_params : Whether to show all MCA parameter values during MPI_INIT or not (good for reproducibility of MPI jobs for debug purposes). Accepted values are all, default, file, api, and enviro - or a comma delimited combination of them
20250509 201014.814 INFO             PET5 index=  59                                    mpi_show_mca_params_file : If mpi_show_mca_params is true, setting this string to a valid filename tells 5.0.7 to dump all the MCA parameter values into a file suitable for reading via the mca_param_files parameter (good for reproducibility of MPI jobs)
20250509 201014.814 INFO             PET5 index=  60                                          mpi_preconnect_mpi : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.814 INFO             PET5 index=  61                                          mpi_preconnect_all : Whether to force MPI processes to fully wire-up the MPI connections between MPI processes during MPI_INIT (vs. making connections lazily -- upon the first MPI traffic between each process peer pair)
20250509 201014.814 INFO             PET5 index=  62                               mpi_have_sparse_group_storage : Whether this 5.0.7 installation supports storing of data in MPI groups in "sparse" formats (good for extremely large process count MPI jobs that create many communicators/groups)
20250509 201014.814 INFO             PET5 index=  63                                mpi_use_sparse_group_storage : Whether to use "sparse" storage formats for MPI groups (only relevant if mpi_have_sparse_group_storage is 1)
20250509 201014.814 INFO             PET5 index=  64                                            mpi_cuda_support : Whether CUDA GPU buffer support is enabled or not
20250509 201014.814 INFO             PET5 index=  65                                 mpi_built_with_cuda_support : Whether CUDA GPU buffer support is built into library or not
20250509 201014.814 INFO             PET5 index=  66                                        mpi_add_procs_cutoff : Maximum world size for pre-allocating resources for all remote processes. Increasing this limit may improve communication performance at the cost of memory usage
20250509 201014.815 INFO             PET5 index=  67                                        mpi_dynamics_enabled : Is the MPI dynamic process functionality enabled (e.g., MPI_COMM_SPAWN)?  Default is yes, but certain transports and/or environments may disable it.
20250509 201014.815 INFO             PET5 index=  68                                              async_mpi_init : Do not perform a barrier at the end of MPI_Init
20250509 201014.815 INFO             PET5 index=  69                                          async_mpi_finalize : Do not perform a barrier at the beginning of MPI_Finalize
20250509 201014.815 INFO             PET5 index=  70                                             mpi_abort_delay : If nonzero, print out an identifying message when abort operation is invoked (hostname, PID of the process that called abort) and delay for that many seconds before exiting (a negative delay value means to never abort).  This allows attaching of a debugger before quitting the job.
20250509 201014.815 INFO             PET5 index=  71                                       mpi_abort_print_stack : If nonzero, print out a stack trace when abort is invoked
20250509 201014.815 INFO             PET5 index=  72                                             mpi_compat_mpi3 : A boolean value for whether Open MPI operates in MPI-3 compatibility mode; this changes the following behavior: in operations without a handle, errors are raised on (true) MPI_COMM_WORLD (MPI-3 behavior) or (false) MPI_COMM_SELF (MPI-4 behavior).
20250509 201014.815 INFO             PET5 index=  73                                    mpi_pmix_connect_timeout : Timeout(secs) for calls to PMIx_Connect. Default is no timeout.
20250509 201014.815 INFO             PET5 index=  74                                                 ompi_timing : Request that critical timing loops be measured
20250509 201014.815 INFO             PET5 index=  75                                       ompi_stream_buffering : Adjust buffering for stdout/stderr. (0) unbuffered, (1) line buffered, (2) fully buffered.
20250509 201014.815 INFO             PET5 index=  76                                            mpi_comm_verbose : Verbosity level for communicator management subsystem
20250509 201014.815 INFO             PET5 index=  77                                                          if : Default selection set of components for the if framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index=  78                                             if_base_verbose : Verbosity level for the if framework (default: 0)
20250509 201014.815 INFO             PET5 index=  79                                      if_base_do_not_resolve : If nonzero, do not attempt to resolve interfaces
20250509 201014.815 INFO             PET5 index=  80                                     if_base_retain_loopback : If nonzero, retain loopback interfaces
20250509 201014.815 INFO             PET5 index=  81                                  if_bsdx_ipv6_major_version :
20250509 201014.815 INFO             PET5 index=  82                                  if_bsdx_ipv6_minor_version :
20250509 201014.815 INFO             PET5 index=  83                                if_bsdx_ipv6_release_version :
20250509 201014.815 INFO             PET5 index=  84                                 if_posix_ipv4_major_version :
20250509 201014.815 INFO             PET5 index=  85                                 if_posix_ipv4_minor_version :
20250509 201014.815 INFO             PET5 index=  86                               if_posix_ipv4_release_version :
20250509 201014.815 INFO             PET5 index=  87                                                     threads : Default selection set of components for the threads framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index=  88                                        threads_base_verbose : Verbosity level for the threads framework (default: 0)
20250509 201014.815 INFO             PET5 index=  89                             threads_pthreads_yield_strategy : Pthread yield strategy to use
20250509 201014.815 INFO             PET5 index=  90                             threads_pthreads_nanosleep_time : Number of nanoseconds to sleep when using nanosleep as the pthread yield strategy
20250509 201014.815 INFO             PET5 index=  91                              threads_pthreads_major_version :
20250509 201014.815 INFO             PET5 index=  92                              threads_pthreads_minor_version :
20250509 201014.815 INFO             PET5 index=  93                            threads_pthreads_release_version :
20250509 201014.815 INFO             PET5 index=  94                                                       hwloc : Default selection set of components for the hwloc framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index=  95                                          hwloc_base_verbose : Verbosity level for the hwloc framework (default: 0)
20250509 201014.815 INFO             PET5 index=  96                          hwloc_base_mem_bind_failure_action : What Open MPI will do if it explicitly tries to bind memory to a specific NUMA location, and fails.  Note that this is a different case than the general allocation policy described by hwloc_base_alloc_policy.  A value of "silent" means that Open MPI will proceed without comment. A value of "warn" means that Open MPI will warn the first time this happens, but allow the job to continue (possibly with degraded performance).  A value of "error" means that Open MPI will abort the job if this happens.
20250509 201014.815 INFO             PET5 index=  97                                                      memcpy : Default selection set of components for the memcpy framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index=  98                                         memcpy_base_verbose : Verbosity level for the memcpy framework (default: 0)
20250509 201014.815 INFO             PET5 index=  99                                                  memchecker : Default selection set of components for the memchecker framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index= 100                                     memchecker_base_verbose : Verbosity level for the memchecker framework (default: 0)
20250509 201014.815 INFO             PET5 index= 101                                                   backtrace : Default selection set of components for the backtrace framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index= 102                                      backtrace_base_verbose : Verbosity level for the backtrace framework (default: 0)
20250509 201014.815 INFO             PET5 index= 103                            backtrace_execinfo_major_version :
20250509 201014.815 INFO             PET5 index= 104                            backtrace_execinfo_minor_version :
20250509 201014.815 INFO             PET5 index= 105                          backtrace_execinfo_release_version :
20250509 201014.815 INFO             PET5 index= 106                                                       timer : Default selection set of components for the timer framework (<none> means use all components that can be found)
20250509 201014.815 INFO             PET5 index= 107                                          timer_base_verbose : Verbosity level for the timer framework (default: 0)
20250509 201014.815 INFO             PET5 index= 108                                     timer_require_monotonic : Node-level monotonic timer required (default yes)
20250509 201014.815 INFO             PET5 index= 109                                  timer_darwin_major_version :
20250509 201014.815 INFO             PET5 index= 110                                  timer_darwin_minor_version :
20250509 201014.816 INFO             PET5 index= 111                                timer_darwin_release_version :
20250509 201014.816 INFO             PET5 index= 112                                                       shmem : Default selection set of components for the shmem framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET5 index= 113                                          shmem_base_verbose : Verbosity level for the shmem framework (default: 0)
20250509 201014.816 INFO             PET5 index= 114                               shmem_base_RUNTIME_QUERY_hint : Internal OMPI parameter used to provide a component selection hint to the shmem framework.  The value of this parameter is the name of the component that is available, selectable, and meets our run-time behavior requirements.
20250509 201014.816 INFO             PET5 index= 115                                         shmem_mmap_priority : Priority for shmem mmap component (default: 50)
20250509 201014.816 INFO             PET5 index= 116                               shmem_mmap_enable_nfs_warning : Enable the warning emitted when Open MPI detects that its shared memory backing file is located on a network filesystem (1 = enabled, 0 = disabled).
20250509 201014.816 INFO             PET5 index= 117                            shmem_mmap_relocate_backing_file : Whether to change the default placement of backing files or not (Negative = try to relocate backing files to an area rooted at the path specified by shmem_mmap_backing_file_base_dir, but continue with the default path if the relocation fails, 0 = do not relocate, Positive = same as the negative option, but will fail if the relocation fails.
20250509 201014.816 INFO             PET5 index= 118                            shmem_mmap_backing_file_base_dir : Specifies where backing files will be created when shmem_mmap_relocate_backing_file is in use.
20250509 201014.816 INFO             PET5 index= 119                                    shmem_mmap_major_version :
20250509 201014.816 INFO             PET5 index= 120                                    shmem_mmap_minor_version :
20250509 201014.816 INFO             PET5 index= 121                                  shmem_mmap_release_version :
20250509 201014.816 INFO             PET5 index= 130                                                   reachable : Default selection set of components for the reachable framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET5 index= 131                                      reachable_base_verbose : Verbosity level for the reachable framework (default: 0)
20250509 201014.816 INFO             PET5 index= 132                            reachable_weighted_major_version :
20250509 201014.816 INFO             PET5 index= 133                            reachable_weighted_minor_version :
20250509 201014.816 INFO             PET5 index= 134                          reachable_weighted_release_version :
20250509 201014.816 INFO             PET5 index= 135                                                        pmix : Default selection set of components for the pmix framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET5 index= 136                                           pmix_base_verbose : Verbosity level for the pmix framework (default: 0)
20250509 201014.816 INFO             PET5 index= 137                                       pmix_base_async_modex : Use asynchronous modex mode
20250509 201014.816 INFO             PET5 index= 138                                      pmix_base_collect_data : Collect all data during modex
20250509 201014.816 INFO             PET5 index= 139                                  pmix_base_exchange_timeout : Time (in seconds) to wait for a data exchange to complete
20250509 201014.816 INFO             PET5 index= 140                                                 accelerator : Default selection set of components for the accelerator framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET5 index= 141                                    accelerator_base_verbose : Verbosity level for the accelerator framework (default: 0)
20250509 201014.816 INFO             PET5 index= 142                              accelerator_null_major_version :
20250509 201014.816 INFO             PET5 index= 143                              accelerator_null_minor_version :
20250509 201014.816 INFO             PET5 index= 144                            accelerator_null_release_version :
20250509 201014.816 INFO             PET5 index= 145                                          opal_event_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.816 INFO             PET5 index= 146                                      event_external_include : Comma-delimited list of libevent subsystems to use (kqueue,poll,select -- available on your platform)
20250509 201014.816 INFO             PET5 index= 147                                          opal_event_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.816 INFO             PET5 index= 148                                          event_base_verbose : Verbosity level for the event framework (default: 0)
20250509 201014.816 INFO             PET5 index= 149                                                        hook : Default selection set of components for the hook framework (<none> means use all components that can be found)
20250509 201014.816 INFO             PET5 index= 150                                           hook_base_verbose : Verbosity level for the hook framework (default: 0)
20250509 201014.816 INFO             PET5 index= 151                                    hook_comm_method_verbose :
20250509 201014.816 INFO             PET5 index= 152                                    hook_comm_method_display : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.816 INFO             PET5 index= 153                                           ompi_display_comm : Enable the communication protocol report: when MPI_INIT is invoked (using the 'mpi_init' value) and/or when MPI_FINALIZE is invoked (using the 'mpi_finalize' value).
20250509 201014.816 INFO             PET5 index= 154                                        hook_comm_method_max : Number of hosts for which to print unabbreviated 2d table of comm methods.
20250509 201014.816 INFO             PET5 index= 155                                      hook_comm_method_brief : Only print the comm method summary, skip the 2d table.
20250509 201014.816 INFO             PET5 index= 156                                   hook_comm_method_fakefile : For debugging only: read comm methods from a file
20250509 201014.816 INFO             PET5 index= 157                              hook_comm_method_major_version :
20250509 201014.816 INFO             PET5 index= 158                              hook_comm_method_minor_version :
20250509 201014.816 INFO             PET5 index= 159                            hook_comm_method_release_version :
20250509 201014.817 INFO             PET5 index= 160                                                          op : Default selection set of components for the op framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET5 index= 161                                             op_base_verbose : Verbosity level for the op framework (default: 0)
20250509 201014.817 INFO             PET5 index= 162                               op_aarch64_hardware_available : Whether the Neon (1) or SVE (2) hardware is available
20250509 201014.817 INFO             PET5 index= 163                                 op_aarch64_double_supported : Whether the double precision data types are supported or not
20250509 201014.817 INFO             PET5 index= 164                                    op_aarch64_major_version :
20250509 201014.817 INFO             PET5 index= 165                                    op_aarch64_minor_version :
20250509 201014.817 INFO             PET5 index= 166                                  op_aarch64_release_version :
20250509 201014.817 INFO             PET5 index= 167                                                   allocator : Default selection set of components for the allocator framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET5 index= 168                                      allocator_base_verbose : Verbosity level for the allocator framework (default: 0)
20250509 201014.817 INFO             PET5 index= 169                               allocator_basic_major_version :
20250509 201014.817 INFO             PET5 index= 170                               allocator_basic_minor_version :
20250509 201014.817 INFO             PET5 index= 171                             allocator_basic_release_version :
20250509 201014.817 INFO             PET5 index= 172                                allocator_bucket_num_buckets :
20250509 201014.817 INFO             PET5 index= 173                              allocator_bucket_major_version :
20250509 201014.817 INFO             PET5 index= 174                              allocator_bucket_minor_version :
20250509 201014.817 INFO             PET5 index= 175                            allocator_bucket_release_version :
20250509 201014.817 INFO             PET5 index= 176                                                      rcache : Default selection set of components for the rcache framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET5 index= 177                                         rcache_base_verbose : Verbosity level for the rcache framework (default: 0)
20250509 201014.817 INFO             PET5 index= 178                                    rcache_grdma_print_stats : print registration cache usage statistics at the end of the run
20250509 201014.817 INFO             PET5 index= 179                                  rcache_grdma_major_version :
20250509 201014.817 INFO             PET5 index= 180                                  rcache_grdma_minor_version :
20250509 201014.817 INFO             PET5 index= 181                                rcache_grdma_release_version :
20250509 201014.817 INFO             PET5 index= 182                                                       mpool : Default selection set of components for the mpool framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET5 index= 183                                          mpool_base_verbose : Verbosity level for the mpool framework (default: 0)
20250509 201014.817 INFO             PET5 index= 184                                    mpool_base_default_hints : Hints to use when selecting the default memory pool
20250509 201014.817 INFO             PET5 index= 185                                 mpool_base_default_priority : Priority of the default mpool module
20250509 201014.817 INFO             PET5 index= 186                                     mpool_hugepage_priority : Default priority of the hugepage mpool component (default: 50)
20250509 201014.817 INFO             PET5 index= 187                                    mpool_hugepage_page_size : Default huge page size of the hugepage mpool component (default: 2M)
20250509 201014.817 INFO             PET5 index= 188                                mpool_hugepage_major_version :
20250509 201014.817 INFO             PET5 index= 189                                mpool_hugepage_minor_version :
20250509 201014.817 INFO             PET5 index= 190                              mpool_hugepage_release_version :
20250509 201014.817 INFO             PET5 index= 191                                                        smsc : Default selection set of components for the smsc framework (<none> means use all components that can be found)
20250509 201014.817 INFO             PET5 index= 192                                           smsc_base_verbose : Verbosity level for the smsc framework (default: 0)
20250509 201014.818 INFO             PET5 index= 193                                                         bml : Default selection set of components for the bml framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET5 index= 194                                            bml_base_verbose : Verbosity level for the bml framework (default: 0)
20250509 201014.818 INFO             PET5 index= 195                                  bml_r2_show_unreach_errors : Show error message when procs are unreachable
20250509 201014.818 INFO             PET5 index= 196                                        bml_r2_major_version :
20250509 201014.818 INFO             PET5 index= 197                                        bml_r2_minor_version :
20250509 201014.818 INFO             PET5 index= 198                                      bml_r2_release_version :
20250509 201014.818 INFO             PET5 index= 199                                                         btl : Default selection set of components for the btl framework (<none> means use all components that can be found)
20250509 201014.818 INFO             PET5 index= 200                                            btl_base_verbose : Verbosity level for the btl framework (default: 0)
20250509 201014.818 INFO             PET5 index= 201                           btl_base_thread_multiple_override : Enable BTLs that are not normally enabled when MPI_THREAD_MULTIPLE is enabled (THIS IS FOR DEVELOPERS ONLY!  SHOULD NOT BE USED BY END USERS!)
20250509 201014.818 INFO             PET5 index= 202                                            btl_base_include :
20250509 201014.818 INFO             PET5 index= 203                                            btl_base_exclude :
20250509 201014.818 INFO             PET5 index= 204                                    btl_base_warn_peer_error : This parameter is used to turn on warning messages when peers disconnect unexpectedly
20250509 201014.818 INFO             PET5 index= 205                              btl_base_warn_component_unused : This parameter is used to turn on warning messages when certain NICs are not used
20250509 201014.818 INFO             PET5 index= 206                                      btl_self_free_list_num : Number of fragments by default
20250509 201014.818 INFO             PET5 index= 207                                      btl_self_free_list_max : Maximum number of fragments
20250509 201014.818 INFO             PET5 index= 208                                      btl_self_free_list_inc : Increment by this number of fragments
20250509 201014.818 INFO             PET5 index= 209                                        btl_self_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.818 INFO             PET5 index= 210                                              btl_self_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.818 INFO             PET5 index= 211                                       btl_self_atomic_flags : BTL atomic support flags
20250509 201014.818 INFO             PET5 index= 212                                   btl_self_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.818 INFO             PET5 index= 213                                        btl_self_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.818 INFO             PET5 index= 214                                          btl_self_get_limit : Maximum size (in bytes) for btl get
20250509 201014.818 INFO             PET5 index= 215                                      btl_self_get_alignment : Alignment required for btl get
20250509 201014.818 INFO             PET5 index= 216                                          btl_self_put_limit : Maximum size (in bytes) for btl put
20250509 201014.818 INFO             PET5 index= 217                                      btl_self_put_alignment : Alignment required for btl put
20250509 201014.818 INFO             PET5 index= 218                          btl_self_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.818 INFO             PET5 index= 219                                      btl_self_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.818 INFO             PET5 index= 220                          btl_self_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.818 INFO             PET5 index= 221                            btl_self_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.818 INFO             PET5 index= 222                             btl_self_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.818 INFO             PET5 index= 223                                            btl_self_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.818 INFO             PET5 index= 224                                          btl_self_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.818 INFO             PET5 index= 225                                      btl_self_major_version :
20250509 201014.818 INFO             PET5 index= 226                                      btl_self_minor_version :
20250509 201014.818 INFO             PET5 index= 227                                    btl_self_release_version :
20250509 201014.818 INFO             PET5 index= 228                                        btl_sm_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.818 INFO             PET5 index= 229                                     btl_vader_free_list_num : Initial number of fragments to allocate for shared memory communication.
20250509 201014.818 INFO             PET5 index= 230                                        btl_sm_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.818 INFO             PET5 index= 231                                     btl_vader_free_list_max : Maximum number of fragments to allocate for shared memory communication.
20250509 201014.818 INFO             PET5 index= 232                                        btl_sm_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.818 INFO             PET5 index= 233                                     btl_vader_free_list_inc : Number of fragments to create on each allocation.
20250509 201014.819 INFO             PET5 index= 234                                         btl_sm_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.819 INFO             PET5 index= 235                                      btl_vader_memcpy_limit : Message size to switch from using memmove to memcpy. The relative speed of these two routines can vary by size.
20250509 201014.819 INFO             PET5 index= 236                                         btl_sm_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.819 INFO             PET5 index= 237                                      btl_vader_segment_size : Maximum size of all shared memory buffers (default: 16M)
20250509 201014.819 INFO             PET5 index= 238                                      btl_sm_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.819 INFO             PET5 index= 239                                   btl_vader_max_inline_send : Maximum size to transfer using copy-in copy-out semantics
20250509 201014.819 INFO             PET5 index= 240                                       btl_sm_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.819 INFO             PET5 index= 241                                    btl_vader_fbox_threshold : Number of sends required before an eager send buffer is setup for a peer (default: 16)
20250509 201014.819 INFO             PET5 index= 242                                             btl_sm_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.819 INFO             PET5 index= 243                                          btl_vader_fbox_max : Maximum number of eager send buffers to allocate (default: 32)
20250509 201014.819 INFO             PET5 index= 244                                            btl_sm_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.819 INFO             PET5 index= 245                                         btl_vader_fbox_size : Size of per-peer fast transfer buffers (default: 4k)
20250509 201014.819 INFO             PET5 index= 246                                    btl_sm_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.819 INFO             PET5 index= 247                                 btl_vader_backing_directory : Directory to place backing files for shared memory communication. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.819 INFO             PET5 index= 248                                          btl_sm_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET5 index= 249                                       btl_vader_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.819 INFO             PET5 index= 250                                                btl_sm_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET5 index= 251                                             btl_vader_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.819 INFO             PET5 index= 252                                         btl_sm_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET5 index= 253                                      btl_vader_atomic_flags : BTL atomic support flags
20250509 201014.819 INFO             PET5 index= 254                                     btl_sm_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.819 INFO             PET5 index= 255                                  btl_vader_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.819 INFO             PET5 index= 256                                          btl_sm_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET5 index= 257                                       btl_vader_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.819 INFO             PET5 index= 258                            btl_sm_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.819 INFO             PET5 index= 259                         btl_vader_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.819 INFO             PET5 index= 260                                        btl_sm_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.819 INFO             PET5 index= 261                                     btl_vader_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.819 INFO             PET5 index= 262                                        btl_sm_major_version :
20250509 201014.819 INFO             PET5 index= 263                                     btl_vader_major_version :
20250509 201014.819 INFO             PET5 index= 264                                        btl_sm_minor_version :
20250509 201014.819 INFO             PET5 index= 265                                     btl_vader_minor_version :
20250509 201014.819 INFO             PET5 index= 266                                      btl_sm_release_version :
20250509 201014.819 INFO             PET5 index= 267                                   btl_vader_release_version :
20250509 201014.819 INFO             PET5 index= 268                                               btl_tcp_links :
20250509 201014.819 INFO             PET5 index= 269                                          btl_tcp_if_include : Comma-delimited list of devices and/or CIDR notation of networks to use for MPI communication (e.g., "eth0,192.168.0.0/16").  Mutually exclusive with btl_tcp_if_exclude.
20250509 201014.819 INFO             PET5 index= 270                                          btl_tcp_if_exclude : Comma-delimited list of devices and/or CIDR notation of networks to NOT use for MPI communication -- all devices not matching these specifications will be used (e.g., "eth0,192.168.0.0/16").  If set to a non-default value, it is mutually exclusive with btl_tcp_if_include.
20250509 201014.819 INFO             PET5 index= 271                                       btl_tcp_free_list_num :
20250509 201014.819 INFO             PET5 index= 272                                       btl_tcp_free_list_max :
20250509 201014.819 INFO             PET5 index= 273                                       btl_tcp_free_list_inc :
20250509 201014.819 INFO             PET5 index= 274                                              btl_tcp_sndbuf : The size of the send buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a send buffer size.
20250509 201014.819 INFO             PET5 index= 275                                              btl_tcp_rcvbuf : The size of the receive buffer socket option for each connection.  Modern TCP stacks generally are smarter than a fixed size and in some situations setting a buffer size explicitly can actually lower performance.  0 means the tcp btl will not try to set a receive buffer size.
20250509 201014.820 INFO             PET5 index= 276                                      btl_tcp_endpoint_cache : The size of the internal cache for each TCP connection. This cache is used to reduce the number of syscalls, by replacing them with memcpy. Every read will read the expected data plus the amount of the endpoint_cache
20250509 201014.820 INFO             PET5 index= 277                                           btl_tcp_use_nagle : Whether to use Nagle's algorithm or not (using Nagle's algorithm may increase short message latency)
20250509 201014.820 INFO             PET5 index= 278                                         btl_tcp_port_min_v4 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.820 INFO             PET5 index= 279                                       btl_tcp_port_range_v4 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.820 INFO             PET5 index= 280                                         btl_tcp_port_min_v6 : The minimum port where the TCP BTL will try to bind (default 1024)
20250509 201014.820 INFO             PET5 index= 281                                       btl_tcp_port_range_v6 : The number of ports where the TCP BTL will try to bind (default 64511). This parameter together with the port min, define a range of ports where Open MPI will open sockets.
20250509 201014.820 INFO             PET5 index= 282                                     btl_tcp_progress_thread :
20250509 201014.820 INFO             PET5 index= 283                         btl_tcp_warn_all_unfound_interfaces : Issue a warning for all unfound interfaces included in if_exclude
20250509 201014.820 INFO             PET5 index= 284                                         btl_tcp_exclusivity : BTL exclusivity (must be >= 0)
20250509 201014.820 INFO             PET5 index= 285                                               btl_tcp_flags : BTL bit flags (general flags: send, put, get, in-place, hetero-rdma, atomics, fetching-atomics)
20250509 201014.820 INFO             PET5 index= 286                                        btl_tcp_atomic_flags : BTL atomic support flags
20250509 201014.820 INFO             PET5 index= 287                                    btl_tcp_rndv_eager_limit : Size (in bytes, including header) of "phase 1" fragment sent for all large messages (must be >= 0 and <= eager_limit)
20250509 201014.820 INFO             PET5 index= 288                                         btl_tcp_eager_limit : Maximum size (in bytes, including header) of "short" messages (must be >= 1).
20250509 201014.820 INFO             PET5 index= 289                                           btl_tcp_put_limit : Maximum size (in bytes) for btl put
20250509 201014.820 INFO             PET5 index= 290                                       btl_tcp_put_alignment : Alignment required for btl put
20250509 201014.820 INFO             PET5 index= 291                           btl_tcp_accelerator_max_send_size : Maximum size (in bytes) of a single GPU "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1) (only valid on smcuda btl)
20250509 201014.820 INFO             PET5 index= 292                                       btl_tcp_max_send_size : Maximum size (in bytes) of a single "phase 2" fragment of a long message when using the pipeline protocol (must be >= 1)
20250509 201014.820 INFO             PET5 index= 293                           btl_tcp_rdma_pipeline_send_length : Length of the "phase 2" portion of a large message (in bytes) when using the pipeline protocol.  This part of the message will be split into fragments of size max_send_size and sent using send/receive semantics (must be >= 0; only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET5 index= 294                             btl_tcp_rdma_pipeline_frag_size : Maximum size (in bytes) of a single "phase 3" fragment from a long message when using the pipeline protocol.  These fragments will be sent using RDMA semantics (must be >= 1; only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET5 index= 295                              btl_tcp_min_rdma_pipeline_size : Messages smaller than this size (in bytes) will not use the RDMA pipeline protocol.  Instead, they will be split into fragments of max_send_size and sent using send/receive semantics (must be >=0, and is automatically adjusted up to at least (eager_limit+btl_rdma_pipeline_send_length); only relevant when the PUT flag is set)
20250509 201014.820 INFO             PET5 index= 296                                             btl_tcp_latency : Approximate latency of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = latency in microseconds)
20250509 201014.820 INFO             PET5 index= 297                                           btl_tcp_bandwidth : Approximate maximum bandwidth of interconnect (0 = auto-detect value at run-time [not supported in all BTL modules], >= 1 = bandwidth in Mbps)
20250509 201014.820 INFO             PET5 index= 298                                      btl_tcp_disable_family :
20250509 201014.820 INFO             PET5 index= 299                                       btl_tcp_major_version :
20250509 201014.820 INFO             PET5 index= 300                                       btl_tcp_minor_version :
20250509 201014.820 INFO             PET5 index= 301                                     btl_tcp_release_version :
20250509 201014.820 INFO             PET5 index= 302                                                         pml : Default selection set of components for the pml framework (<none> means use all components that can be found)
20250509 201014.820 INFO             PET5 index= 303                                            pml_base_verbose : Verbosity level for the pml framework (default: 0)
20250509 201014.820 INFO             PET5 index= 304                                    pml_base_bsend_allocator :
20250509 201014.820 INFO             PET5 index= 305                                            pml_base_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.820 INFO             PET5 index= 306                                                 pml_wrapper : Use a Wrapper component around the selected PML component
20250509 201014.820 INFO             PET5 index= 307                                          pml_base_check_pml : Whether to check the pml selections to ensure they all match
20250509 201014.820 INFO             PET5 index= 320                                             pml_ob1_verbose :
20250509 201014.820 INFO             PET5 index= 321                                       pml_ob1_free_list_num :
20250509 201014.820 INFO             PET5 index= 322                                       pml_ob1_free_list_max :
20250509 201014.820 INFO             PET5 index= 323                                       pml_ob1_free_list_inc :
20250509 201014.820 INFO             PET5 index= 324                                            pml_ob1_priority :
20250509 201014.820 INFO             PET5 index= 325                                 pml_ob1_send_pipeline_depth :
20250509 201014.820 INFO             PET5 index= 326                                 pml_ob1_recv_pipeline_depth :
20250509 201014.820 INFO             PET5 index= 327                                pml_ob1_max_rdma_per_request :
20250509 201014.820 INFO             PET5 index= 328                                  pml_ob1_max_send_per_range :
20250509 201014.820 INFO             PET5 index= 329                                    pml_ob1_unexpected_limit :
20250509 201014.821 INFO             PET5 index= 330                                        pml_ob1_use_all_rdma : Use all available RDMA btls for the RDMA and RDMA pipeline protocols (default: false)
20250509 201014.821 INFO             PET5 index= 331                                           pml_ob1_allocator : Name of allocator component for unexpected messages
20250509 201014.821 INFO             PET5 index= 332                              pml_ob1_accelerator_events_max : Number of events created by the ob1 component internally
20250509 201014.821 INFO             PET5 index= 333                                       pml_ob1_major_version :
20250509 201014.821 INFO             PET5 index= 334                                       pml_ob1_minor_version :
20250509 201014.821 INFO             PET5 index= 335                                     pml_ob1_release_version :
20250509 201014.821 INFO             PET5 index= 339                                                   vprotocol : Specify a specific vprotocol to use
20250509 201014.821 INFO             PET5 index= 343                                                         mtl : Default selection set of components for the mtl framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET5 index= 344                                            mtl_base_verbose : Verbosity level for the mtl framework (default: 0)
20250509 201014.821 INFO             PET5 index= 345                                      vprotocol_base_verbose : Verbosity level for the vprotocol framework (default: 0)
20250509 201014.821 INFO             PET5 index= 346                                vprotocol_pessimist_priority :
20250509 201014.821 INFO             PET5 index= 347                           vprotocol_pessimist_free_list_num :
20250509 201014.821 INFO             PET5 index= 348                           vprotocol_pessimist_free_list_max :
20250509 201014.821 INFO             PET5 index= 349                           vprotocol_pessimist_free_list_inc :
20250509 201014.821 INFO             PET5 index= 350                      vprotocol_pessimist_sender_based_chunk :
20250509 201014.821 INFO             PET5 index= 351                       vprotocol_pessimist_event_buffer_size :
20250509 201014.821 INFO             PET5 index= 352                       vprotocol_pessimist_sender_based_file :
20250509 201014.821 INFO             PET5 index= 353                   vprotocol_pessimist_allow_thread_multiple : Allow the PML V to work even when the MPI library is initialized with MPI_THREAD_MULTIPLE support. By default the PML V is disabled in such instances, to protect applications that are not send deterministic.
20250509 201014.821 INFO             PET5 index= 354                           vprotocol_pessimist_major_version :
20250509 201014.821 INFO             PET5 index= 355                           vprotocol_pessimist_minor_version :
20250509 201014.821 INFO             PET5 index= 356                         vprotocol_pessimist_release_version :
20250509 201014.821 INFO             PET5 index= 357                                                        coll : Default selection set of components for the coll framework (<none> means use all components that can be found)
20250509 201014.821 INFO             PET5 index= 358                                           coll_base_verbose : Verbosity level for the coll framework (default: 0)
20250509 201014.821 INFO             PET5 index= 359                                         coll_adapt_priority : Priority of the adapt coll component
20250509 201014.821 INFO             PET5 index= 360                                          coll_adapt_verbose : Verbose level (default set to the collective framework verbosity)
20250509 201014.821 INFO             PET5 index= 361                            coll_adapt_context_free_list_min : Minimum number of segments in context free list
20250509 201014.821 INFO             PET5 index= 362                            coll_adapt_context_free_list_max : Maximum number of segments in context free list
20250509 201014.821 INFO             PET5 index= 363                            coll_adapt_context_free_list_inc : Increasement number of segments in context free list
20250509 201014.821 INFO             PET5 index= 364                                  coll_adapt_bcast_algorithm : Algorithm of broadcast, 0: tuned, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.821 INFO             PET5 index= 365                               coll_adapt_bcast_segment_size : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.821 INFO             PET5 index= 366                          coll_adapt_bcast_max_send_requests : Maximum number of send requests
20250509 201014.821 INFO             PET5 index= 367                          coll_adapt_bcast_max_recv_requests : Maximum number of receive requests
20250509 201014.821 INFO             PET5 index= 368                           coll_adapt_bcast_synchronous_send : Whether to use synchronous send operations during setup of bcast operations
20250509 201014.821 INFO             PET5 index= 369                                 coll_adapt_reduce_algorithm : Algorithm of reduce, 1: binomial, 2: in_order_binomial, 3: binary, 4: pipeline, 5: chain, 6: linear
20250509 201014.821 INFO             PET5 index= 370                              coll_adapt_reduce_segment_size : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.821 INFO             PET5 index= 371                         coll_adapt_reduce_max_send_requests : Maximum number of send requests
20250509 201014.821 INFO             PET5 index= 372                         coll_adapt_reduce_max_recv_requests : Maximum number of receive requests per peer
20250509 201014.821 INFO             PET5 index= 373                              coll_adapt_inbuf_free_list_min : Minimum number of segment in inbuf free list
20250509 201014.821 INFO             PET5 index= 374                              coll_adapt_inbuf_free_list_max : Maximum number of segment in inbuf free list
20250509 201014.821 INFO             PET5 index= 375                              coll_adapt_inbuf_free_list_inc : Number of segments to allocate when growing the inbuf free list
20250509 201014.821 INFO             PET5 index= 376                          coll_adapt_reduce_synchronous_send : Whether to use synchronous send operations during setup of reduce operations
20250509 201014.821 INFO             PET5 index= 377                                    coll_adapt_major_version :
20250509 201014.821 INFO             PET5 index= 378                                    coll_adapt_minor_version :
20250509 201014.822 INFO             PET5 index= 379                                  coll_adapt_release_version :
20250509 201014.822 INFO             PET5 index= 380                                         coll_basic_priority : Priority of the basic coll component
20250509 201014.822 INFO             PET5 index= 381                                        coll_basic_crossover : Minimum number of processes in a communicator before using the logarithmic algorithms
20250509 201014.822 INFO             PET5 index= 382                                    coll_basic_major_version :
20250509 201014.822 INFO             PET5 index= 383                                    coll_basic_minor_version :
20250509 201014.822 INFO             PET5 index= 384                                  coll_basic_release_version :
20250509 201014.822 INFO             PET5 index= 385                                           coll_han_priority : Priority of the HAN coll component
20250509 201014.822 INFO             PET5 index= 386                                            coll_han_verbose : Verbosity of the HAN coll component (use coll base verbosity if not set)
20250509 201014.822 INFO             PET5 index= 387                                      coll_han_bcast_segsize : segment size for bcast
20250509 201014.822 INFO             PET5 index= 388                                    coll_han_bcast_up_module : up level module for bcast, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET5 index= 389                                   coll_han_bcast_low_module : low level module for bcast, 0 tuned, 1 sm
20250509 201014.822 INFO             PET5 index= 390                                     coll_han_reduce_segsize : segment size for reduce
20250509 201014.822 INFO             PET5 index= 391                                   coll_han_reduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET5 index= 392                                  coll_han_reduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.822 INFO             PET5 index= 393                                  coll_han_allreduce_segsize : segment size for allreduce
20250509 201014.822 INFO             PET5 index= 394                                coll_han_allreduce_up_module : up level module for allreduce, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET5 index= 395                               coll_han_allreduce_low_module : low level module for allreduce, 0 tuned, 1 sm
20250509 201014.822 INFO             PET5 index= 396                                coll_han_allgather_up_module : up level module for allgather, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET5 index= 397                               coll_han_allgather_low_module : low level module for allgather, 0 tuned, 1 sm
20250509 201014.822 INFO             PET5 index= 398                                   coll_han_gather_up_module : up level module for gather, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET5 index= 399                                  coll_han_gather_low_module : low level module for gather, 0 tuned, 1 sm
20250509 201014.822 INFO             PET5 index= 400                                  coll_han_scatter_up_module : up level module for scatter, 0 libnbc, 1 adapt
20250509 201014.822 INFO             PET5 index= 401                                 coll_han_scatter_low_module : low level module for scatter, 0 tuned, 1 sm
20250509 201014.822 INFO             PET5 index= 402                                       coll_han_reproducible : whether we need reproducible results (enabling this disables optimisations using topology)0 disable 1 enable, default 0
20250509 201014.822 INFO             PET5 index= 403                            coll_han_use_allgather_algorithm : which han algorithm is used for allgather
20250509 201014.822 INFO             PET5 index= 404                            coll_han_use_allreduce_algorithm : which han algorithm is used for allreduce
20250509 201014.822 INFO             PET5 index= 405                              coll_han_use_barrier_algorithm : which han algorithm is used for barrier
20250509 201014.822 INFO             PET5 index= 406                                coll_han_use_bcast_algorithm : which han algorithm is used for bcast
20250509 201014.822 INFO             PET5 index= 407                               coll_han_use_gather_algorithm : which han algorithm is used for gather
20250509 201014.822 INFO             PET5 index= 408                               coll_han_use_reduce_algorithm : which han algorithm is used for reduce
20250509 201014.822 INFO             PET5 index= 409                              coll_han_use_scatter_algorithm : which han algorithm is used for scatter
20250509 201014.822 INFO             PET5 index= 410                               coll_han_use_simple_allgather : whether to enable simple algorithm for allgather. Prefer use_allgather_algorithm=simple or configuration file instead.
20250509 201014.822 INFO             PET5 index= 411                               coll_han_use_simple_allreduce : whether to enable simple algorithm for allreduce. Prefer use_allreduce_algorithm=simple or configuration file instead.
20250509 201014.822 INFO             PET5 index= 412                                   coll_han_use_simple_bcast : whether to enable simple algorithm for bcast. Prefer use_bcast_algorithm=simple or configuration file instead.
20250509 201014.822 INFO             PET5 index= 413                                  coll_han_use_simple_gather : whether to enable simple algorithm for gather. Prefer use_gather_algorithm=simple or configuration file instead.
20250509 201014.822 INFO             PET5 index= 414                                  coll_han_use_simple_reduce : whether to enable simple algorithm for reduce. Prefer use_reduce_algorithm=simple or configuration file instead.
20250509 201014.822 INFO             PET5 index= 415                                 coll_han_use_simple_scatter : whether to enable simple algorithm for scatter. Prefer use_scatter_algorithm=simple or configuration file instead.
20250509 201014.822 INFO             PET5 index= 416                coll_han_allgather_dynamic_intra_node_module : Collective module to use for allgather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET5 index= 417                coll_han_allgather_dynamic_inter_node_module : Collective module to use for allgather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET5 index= 418       coll_han_allgather_dynamic_global_communicator_module : Collective module to use for allgather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET5 index= 419               coll_han_allgatherv_dynamic_intra_node_module : Collective module to use for allgatherv on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET5 index= 420               coll_han_allgatherv_dynamic_inter_node_module : Collective module to use for allgatherv on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET5 index= 421      coll_han_allgatherv_dynamic_global_communicator_module : Collective module to use for allgatherv on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.822 INFO             PET5 index= 422                coll_han_allreduce_dynamic_intra_node_module : Collective module to use for allreduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET5 index= 423                coll_han_allreduce_dynamic_inter_node_module : Collective module to use for allreduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.822 INFO             PET5 index= 424       coll_han_allreduce_dynamic_global_communicator_module : Collective module to use for allreduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET5 index= 425                  coll_han_barrier_dynamic_intra_node_module : Collective module to use for barrier on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 426                  coll_han_barrier_dynamic_inter_node_module : Collective module to use for barrier on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 427         coll_han_barrier_dynamic_global_communicator_module : Collective module to use for barrier on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET5 index= 428                    coll_han_bcast_dynamic_intra_node_module : Collective module to use for bcast on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 429                    coll_han_bcast_dynamic_inter_node_module : Collective module to use for bcast on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 430           coll_han_bcast_dynamic_global_communicator_module : Collective module to use for bcast on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET5 index= 431                   coll_han_gather_dynamic_intra_node_module : Collective module to use for gather on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 432                   coll_han_gather_dynamic_inter_node_module : Collective module to use for gather on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 433          coll_han_gather_dynamic_global_communicator_module : Collective module to use for gather on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET5 index= 434                   coll_han_reduce_dynamic_intra_node_module : Collective module to use for reduce on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 435                   coll_han_reduce_dynamic_inter_node_module : Collective module to use for reduce on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 436          coll_han_reduce_dynamic_global_communicator_module : Collective module to use for reduce on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET5 index= 437                  coll_han_scatter_dynamic_intra_node_module : Collective module to use for scatter on intra_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 438                  coll_han_scatter_dynamic_inter_node_module : Collective module to use for scatter on inter_node topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;
20250509 201014.823 INFO             PET5 index= 439         coll_han_scatter_dynamic_global_communicator_module : Collective module to use for scatter on global_communicator topological level: 0 = self; 1 = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt; 6 = han;
20250509 201014.823 INFO             PET5 index= 440                             coll_han_use_dynamic_file_rules : Enable the dynamic selection provided via the dynamic_rules_filename MCA
20250509 201014.823 INFO             PET5 index= 441                             coll_han_dynamic_rules_filename : Configuration file containing the dynamic selection rules
20250509 201014.823 INFO             PET5 index= 442                                 coll_han_dump_dynamic_rules : Switch used to decide if we dump  dynamic rules provided by configuration file
20250509 201014.823 INFO             PET5 index= 443                                 coll_han_max_dynamic_errors : Number of dynamic rules module/function errors printed on rank 0 with a 0 verbosity.Useless if coll_base_verbose is 30 or more.
20250509 201014.823 INFO             PET5 index= 444                                      coll_han_major_version :
20250509 201014.823 INFO             PET5 index= 445                                      coll_han_minor_version :
20250509 201014.823 INFO             PET5 index= 446                                    coll_han_release_version :
20250509 201014.823 INFO             PET5 index= 447                                         coll_inter_priority : Priority of the inter coll component
20250509 201014.823 INFO             PET5 index= 448                                          coll_inter_verbose : Turn verbose message of the inter coll component on/off
20250509 201014.823 INFO             PET5 index= 449                                    coll_inter_major_version :
20250509 201014.823 INFO             PET5 index= 450                                    coll_inter_minor_version :
20250509 201014.823 INFO             PET5 index= 451                                  coll_inter_release_version :
20250509 201014.823 INFO             PET5 index= 452                                        coll_libnbc_priority : Priority of the libnbc coll component
20250509 201014.823 INFO             PET5 index= 453                         coll_libnbc_ibcast_skip_dt_decision : In ibcast only use size of communicator to choose algorithm, exclude data type signature. Set to 'false' to use data type signature in decision. WARNING: If you set this to 'false' then your application should not use non-uniform data type signatures in calls to ibcast.
20250509 201014.823 INFO             PET5 index= 454                            coll_libnbc_iallgather_algorithm : Which iallgather algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.823 INFO             PET5 index= 455                            coll_libnbc_iallreduce_algorithm : Which iallreduce algorithm is used: 0 ignore, 1 ring, 2 binomial, 3 rabenseifner, 4 recursive_doubling
20250509 201014.823 INFO             PET5 index= 456                                coll_libnbc_ibcast_algorithm : Which ibcast algorithm is used: 0 ignore, 1 linear, 2 binomial, 3 chain, 4 knomial
20250509 201014.823 INFO             PET5 index= 457                            coll_libnbc_ibcast_knomial_radix : k-nomial tree radix for the ibcast algorithm (radix > 1)
20250509 201014.823 INFO             PET5 index= 458                               coll_libnbc_iexscan_algorithm : Which iexscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.823 INFO             PET5 index= 459                               coll_libnbc_ireduce_algorithm : Which ireduce algorithm is used: 0 ignore, 1 chain, 2 binomial, 3 rabenseifner
20250509 201014.823 INFO             PET5 index= 460                                 coll_libnbc_iscan_algorithm : Which iscan algorithm is used: 0 ignore, 1 linear, 2 recursive_doubling
20250509 201014.823 INFO             PET5 index= 461                                   coll_libnbc_major_version :
20250509 201014.823 INFO             PET5 index= 462                                   coll_libnbc_minor_version :
20250509 201014.823 INFO             PET5 index= 463                                 coll_libnbc_release_version :
20250509 201014.823 INFO             PET5 index= 464                                          coll_self_priority :
20250509 201014.823 INFO             PET5 index= 465                                     coll_self_major_version :
20250509 201014.823 INFO             PET5 index= 466                                     coll_self_minor_version :
20250509 201014.823 INFO             PET5 index= 467                                   coll_self_release_version :
20250509 201014.823 INFO             PET5 index= 468                                          coll_sync_priority : Priority of the sync coll component; only relevant if barrier_before or barrier_after is > 0
20250509 201014.823 INFO             PET5 index= 469                                    coll_sync_barrier_before : Do a synchronization before each Nth collective
20250509 201014.823 INFO             PET5 index= 470                                     coll_sync_barrier_after : Do a synchronization after each Nth collective
20250509 201014.823 INFO             PET5 index= 471                                     coll_sync_major_version :
20250509 201014.823 INFO             PET5 index= 472                                     coll_sync_minor_version :
20250509 201014.824 INFO             PET5 index= 473                                   coll_sync_release_version :
20250509 201014.824 INFO             PET5 index= 474                                         coll_tuned_priority : Priority of the tuned coll component
20250509 201014.824 INFO             PET5 index= 475                                 coll_tuned_init_tree_fanout : Initial fanout used in the tree topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.824 INFO             PET5 index= 476                                coll_tuned_init_chain_fanout : Initial fanout used in the chain (fanout followed by pipeline) topologies for each communicator. This is only an initial guess, if a tuned collective needs a different fanout for an operation, it build it dynamically. This parameter is only for the first guess and might save a little time
20250509 201014.824 INFO             PET5 index= 477                               coll_tuned_alltoall_small_msg : threshold (if supported) to decide if small MSGs alltoall algorithm will be used
20250509 201014.824 INFO             PET5 index= 478                        coll_tuned_alltoall_intermediate_msg : threshold (if supported) to decide if intermediate MSGs alltoall algorithm will be used
20250509 201014.824 INFO             PET5 index= 479                                coll_tuned_use_dynamic_rules : Switch used to decide if we use static (compiled/if statements) or dynamic (built at runtime) decision function rules
20250509 201014.824 INFO             PET5 index= 480                           coll_tuned_dynamic_rules_filename : Filename of configuration file that contains the dynamic (@runtime) decision function rules
20250509 201014.824 INFO             PET5 index= 481                        coll_tuned_allreduce_algorithm_count : Number of allreduce algorithms available
20250509 201014.824 INFO             PET5 index= 482                              coll_tuned_allreduce_algorithm : Which allreduce algorithm is used. Can be locked down to any of: 0 ignore, 1 basic linear, 2 nonoverlapping (tuned reduce + tuned bcast), 3 recursive doubling, 4 ring, 5 segmented ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET5 index= 483                  coll_tuned_allreduce_algorithm_segmentsize : Segment size in bytes used by default for allreduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.824 INFO             PET5 index= 484                  coll_tuned_allreduce_algorithm_tree_fanout : Fanout for n-tree used for allreduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.824 INFO             PET5 index= 485                 coll_tuned_allreduce_algorithm_chain_fanout : Fanout for chains used for allreduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.824 INFO             PET5 index= 486                         coll_tuned_alltoall_algorithm_count : Number of alltoall algorithms available
20250509 201014.824 INFO             PET5 index= 487                               coll_tuned_alltoall_algorithm : Which alltoall algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise, 3: modified bruck, 4: linear with sync, 5:two proc only. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET5 index= 488                   coll_tuned_alltoall_algorithm_segmentsize : Segment size in bytes used by default for alltoall algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.824 INFO             PET5 index= 489                   coll_tuned_alltoall_algorithm_tree_fanout : Fanout for n-tree used for alltoall algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.824 INFO             PET5 index= 490                  coll_tuned_alltoall_algorithm_chain_fanout : Fanout for chains used for alltoall algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.824 INFO             PET5 index= 491                               coll_tuned_alltoall_large_msg : use pairwise exchange algorithm for messages larger than this value
20250509 201014.824 INFO             PET5 index= 492                               coll_tuned_alltoall_min_procs : use pairwise exchange algorithm for communicators larger than this value
20250509 201014.824 INFO             PET5 index= 493                  coll_tuned_alltoall_algorithm_max_requests : Maximum number of outstanding send or recv requests.  Only has meaning for synchronized algorithms.
20250509 201014.824 INFO             PET5 index= 494                        coll_tuned_allgather_algorithm_count : Number of allgather algorithms available
20250509 201014.824 INFO             PET5 index= 495                              coll_tuned_allgather_algorithm : Which allgather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 bruck, 3 recursive doubling, 4 ring, 5 neighbor exchange, 6: two proc only, 7: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.824 INFO             PET5 index= 496                  coll_tuned_allgather_algorithm_segmentsize : Segment size in bytes used by default for allgather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.824 INFO             PET5 index= 497                  coll_tuned_allgather_algorithm_tree_fanout : Fanout for n-tree used for allgather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.824 INFO             PET5 index= 498                 coll_tuned_allgather_algorithm_chain_fanout : Fanout for chains used for allgather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET5 index= 499                       coll_tuned_allgatherv_algorithm_count : Number of allgatherv algorithms available
20250509 201014.825 INFO             PET5 index= 500                             coll_tuned_allgatherv_algorithm : Which allgatherv algorithm is used. Can be locked down to choice of: 0 ignore, 1 default (allgathervv + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5: two proc only, 6: sparbit. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 501                 coll_tuned_allgatherv_algorithm_segmentsize : Segment size in bytes used by default for allgatherv algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET5 index= 502                 coll_tuned_allgatherv_algorithm_tree_fanout : Fanout for n-tree used for allgatherv algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.825 INFO             PET5 index= 503                coll_tuned_allgatherv_algorithm_chain_fanout : Fanout for chains used for allgatherv algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET5 index= 504                        coll_tuned_alltoallv_algorithm_count : Number of alltoallv algorithms available
20250509 201014.825 INFO             PET5 index= 505                              coll_tuned_alltoallv_algorithm : Which alltoallv algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 pairwise. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 506                          coll_tuned_barrier_algorithm_count : Number of barrier algorithms available
20250509 201014.825 INFO             PET5 index= 507                                coll_tuned_barrier_algorithm : Which barrier algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 double ring, 3: recursive doubling 4: bruck, 5: two proc only, 6: tree. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 508                            coll_tuned_bcast_algorithm_count : Number of bcast algorithms available
20250509 201014.825 INFO             PET5 index= 509                                  coll_tuned_bcast_algorithm : Which bcast algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 chain, 3: pipeline, 4: split binary tree, 5: binary tree, 6: binomial tree, 7: knomial tree, 8: scatter_allgather, 9: scatter_allgather_ring. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 510                      coll_tuned_bcast_algorithm_segmentsize : Segment size in bytes used by default for bcast algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET5 index= 511                      coll_tuned_bcast_algorithm_tree_fanout : Fanout for n-tree used for bcast algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET5 index= 512                     coll_tuned_bcast_algorithm_chain_fanout : Fanout for chains used for bcast algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET5 index= 513                    coll_tuned_bcast_algorithm_knomial_radix : k-nomial tree radix for the bcast algorithm (radix > 1).
20250509 201014.825 INFO             PET5 index= 514                           coll_tuned_reduce_algorithm_count : Number of reduce algorithms available
20250509 201014.825 INFO             PET5 index= 515                                 coll_tuned_reduce_algorithm : Which reduce algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 chain, 3 pipeline, 4 binary, 5 binomial, 6 in-order binary, 7 rabenseifner. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 516                     coll_tuned_reduce_algorithm_segmentsize : Segment size in bytes used by default for reduce algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET5 index= 517                     coll_tuned_reduce_algorithm_tree_fanout : Fanout for n-tree used for reduce algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET5 index= 518                    coll_tuned_reduce_algorithm_chain_fanout : Fanout for chains used for reduce algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET5 index= 519                    coll_tuned_reduce_algorithm_max_requests : Maximum number of outstanding send requests on leaf nodes. 0 means no limit.
20250509 201014.825 INFO             PET5 index= 520                   coll_tuned_reduce_scatter_algorithm_count : Number of reduce_scatter algorithms available
20250509 201014.825 INFO             PET5 index= 521                         coll_tuned_reduce_scatter_algorithm : Which reduce reduce_scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 non-overlapping (Reduce + Scatterv), 2 recursive halving, 3 ring, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 522             coll_tuned_reduce_scatter_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET5 index= 523             coll_tuned_reduce_scatter_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET5 index= 524            coll_tuned_reduce_scatter_algorithm_chain_fanout : Fanout for chains used for reduce_scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation.
20250509 201014.825 INFO             PET5 index= 525             coll_tuned_reduce_scatter_block_algorithm_count : Number of reduce_scatter_block algorithms available
20250509 201014.825 INFO             PET5 index= 526                   coll_tuned_reduce_scatter_block_algorithm : Which reduce reduce_scatter_block algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic_linear, 2 recursive_doubling, 3 recursive_halving, 4 butterfly. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 527       coll_tuned_reduce_scatter_block_algorithm_segmentsize : Segment size in bytes used by default for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation.
20250509 201014.825 INFO             PET5 index= 528       coll_tuned_reduce_scatter_block_algorithm_tree_fanout : Fanout for n-tree used for reduce_scatter_block algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation.
20250509 201014.825 INFO             PET5 index= 529                           coll_tuned_gather_algorithm_count : Number of gather algorithms available
20250509 201014.825 INFO             PET5 index= 530                                 coll_tuned_gather_algorithm : Which gather algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 linear with synchronization. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 531                     coll_tuned_gather_algorithm_segmentsize : Segment size in bytes used by default for gather algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET5 index= 532                     coll_tuned_gather_algorithm_tree_fanout : Fanout for n-tree used for gather algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.825 INFO             PET5 index= 533                    coll_tuned_gather_algorithm_chain_fanout : Fanout for chains used for gather algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.825 INFO             PET5 index= 534                          coll_tuned_scatter_algorithm_count : Number of scatter algorithms available
20250509 201014.825 INFO             PET5 index= 535                                coll_tuned_scatter_algorithm : Which scatter algorithm is used. Can be locked down to choice of: 0 ignore, 1 basic linear, 2 binomial, 3 non-blocking linear. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.825 INFO             PET5 index= 536                    coll_tuned_scatter_algorithm_segmentsize : Segment size in bytes used by default for scatter algorithms. Only has meaning if algorithm is forced and supports segmenting. 0 bytes means no segmentation. Currently, available algorithms do not support segmentation.
20250509 201014.825 INFO             PET5 index= 537                    coll_tuned_scatter_algorithm_tree_fanout : Fanout for n-tree used for scatter algorithms. Only has meaning if algorithm is forced and supports n-tree topo based operation. Currently, available algorithms do not support n-tree topologies.
20250509 201014.826 INFO             PET5 index= 538                   coll_tuned_scatter_algorithm_chain_fanout : Fanout for chains used for scatter algorithms. Only has meaning if algorithm is forced and supports chain topo based operation. Currently, available algorithms do not support chain topologies.
20250509 201014.826 INFO             PET5 index= 539                                coll_tuned_scatter_min_procs : use basic linear algorithm for communicators larger than this value
20250509 201014.826 INFO             PET5 index= 540                   coll_tuned_scatter_algorithm_max_requests : Issue a blocking send every this many non-blocking requests. Only has meaning for non-blocking linear algorithm.
20250509 201014.826 INFO             PET5 index= 541                         coll_tuned_scatter_intermediate_msg : use non-blocking linear algorithm for messages larger than this value
20250509 201014.826 INFO             PET5 index= 542                                coll_tuned_scatter_large_msg : use linear algorithm for messages larger than this value
20250509 201014.826 INFO             PET5 index= 543                           coll_tuned_exscan_algorithm_count : Number of exscan algorithms available
20250509 201014.826 INFO             PET5 index= 544                                 coll_tuned_exscan_algorithm : Which exscan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET5 index= 545                             coll_tuned_scan_algorithm_count : Number of scan algorithms available
20250509 201014.826 INFO             PET5 index= 546                                   coll_tuned_scan_algorithm : Which scan algorithm is used. Can be locked down to choice of: 0 ignore, 1 linear, 2 recursive_doubling. Only relevant if coll_tuned_use_dynamic_rules is true.
20250509 201014.826 INFO             PET5 index= 547                                    coll_tuned_major_version :
20250509 201014.826 INFO             PET5 index= 548                                    coll_tuned_minor_version :
20250509 201014.826 INFO             PET5 index= 549                                  coll_tuned_release_version :
20250509 201014.826 INFO             PET5 index= 550                                       coll_ftagree_priority : Priority of the ftagree coll component
20250509 201014.826 INFO             PET5 index= 551                                      coll_ftagree_agreement : Agreement algorithm 0: Allreduce (NOT FAULT TOLERANT); 1: Early Returning Consensus (era); 2: Early Terminating Consensus (eta)
20250509 201014.826 INFO             PET5 index= 552                                   coll_ftagree_era_topology : ERA topology 1: binary tree; 2: star tree; 3: string tree
20250509 201014.826 INFO             PET5 index= 553                                    coll_ftagree_era_rebuild : ERA rebuild/rebalance the tree in a first post-failure agreement 0: no rebalancing; 1: rebalance all the time
20250509 201014.826 INFO             PET5 index= 554                                  coll_ftagree_major_version :
20250509 201014.826 INFO             PET5 index= 555                                  coll_ftagree_minor_version :
20250509 201014.826 INFO             PET5 index= 556                                coll_ftagree_release_version :
20250509 201014.826 INFO             PET5 index= 560                                            coll_sm_priority : Priority of the sm coll component
20250509 201014.826 INFO             PET5 index= 561                                        coll_sm_control_size : Length of the control data -- should usually be either the length of a cache line on most SMPs, or the size of a page on machines that support direct memory affinity page placement (in bytes)
20250509 201014.826 INFO             PET5 index= 562                                       coll_sm_fragment_size : Fragment size (in bytes) used for passing data through shared memory (will be rounded up to the nearest control_size size)
20250509 201014.826 INFO             PET5 index= 563                                   coll_sm_comm_in_use_flags : Number of "in use" flags, used to mark a message passing area segment as currently being used or not (must be >= 2 and <= comm_num_segments)
20250509 201014.826 INFO             PET5 index= 564                                   coll_sm_comm_num_segments : Number of segments in each communicator's shared memory message passing area (must be >= 2, and must be a multiple of comm_in_use_flags)
20250509 201014.826 INFO             PET5 index= 565                                         coll_sm_tree_degree : Degree of the tree for tree-based operations (must be => 1 and <= min(control_size, 255))
20250509 201014.826 INFO             PET5 index= 566                                      coll_sm_info_num_procs : Number of processes to use for the calculation of the shared_mem_size MCA information parameter (must be => 2)
20250509 201014.826 INFO             PET5 index= 567                                coll_sm_shared_mem_used_data : Amount of shared memory used, per communicator, in the shared memory data area for info_num_procs processes (in bytes)
20250509 201014.826 INFO             PET5 index= 568                                       coll_sm_major_version :
20250509 201014.826 INFO             PET5 index= 569                                       coll_sm_minor_version :
20250509 201014.826 INFO             PET5 index= 570                                     coll_sm_release_version :
20250509 201014.826 INFO             PET5 index= 571                                                         osc : Default selection set of components for the osc framework (<none> means use all components that can be found)
20250509 201014.826 INFO             PET5 index= 572                                            osc_base_verbose : Verbosity level for the osc framework (default: 0)
20250509 201014.826 INFO             PET5 index= 573                                    osc_sm_backing_directory : Directory to place backing files for shared memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.826 INFO             PET5 index= 574                                             osc_sm_priority : Priority of the osc/sm component (default: 100)
20250509 201014.826 INFO             PET5 index= 575                                        osc_sm_major_version :
20250509 201014.826 INFO             PET5 index= 576                                        osc_sm_minor_version :
20250509 201014.826 INFO             PET5 index= 577                                      osc_sm_release_version :
20250509 201014.826 INFO             PET5 index= 581                                           osc_rdma_no_locks : Enable optimizations available only if MPI_LOCK is not used. Info key of same name overrides this value (default: false)
20250509 201014.826 INFO             PET5 index= 582                               osc_rdma_acc_single_intrinsic : Enable optimizations for MPI_Fetch_and_op, MPI_Accumulate, etc for codes that will not use anything more than a single predefined datatype (default: false)
20250509 201014.827 INFO             PET5 index= 583                                        osc_rdma_acc_use_amo : Enable the use of network atomic memory operations when using single intrinsic optimizations. If not set network compare-and-swap will be used instead (default: true)
20250509 201014.827 INFO             PET5 index= 584                                        osc_rdma_buffer_size : Size of temporary buffers (default: 32768)
20250509 201014.827 INFO             PET5 index= 585                                         osc_rdma_max_attach : Maximum number of buffers that can be attached to a dynamic window. Keep in mind that each attached buffer will use a potentially limited resource (default: 64)
20250509 201014.827 INFO             PET5 index= 586                                           osc_rdma_priority : Priority of the osc/rdma component (default: 20)
20250509 201014.827 INFO             PET5 index= 587                                       osc_rdma_locking_mode : Locking mode to use for passive-target synchronization (default: two_level)
20250509 201014.827 INFO             PET5 index= 588                                               osc_rdma_btls : Comma-delimited list of BTL component names to allow without verifying connectivity. Do not add a BTL to to this list unless it can reach all processes in any communicator used with an MPI window (default: ugni,uct,ofi)
20250509 201014.827 INFO             PET5 index= 589                                  osc_rdma_backing_directory : Directory to place backing files for memory windows. This directory should be on a local filesystem such as /tmp or /dev/shm (default: (linux) /dev/shm, (others) session directory)
20250509 201014.827 INFO             PET5 index= 590                                    osc_rdma_network_max_amo : Maximum predefined datatype count for which network atomic operations will be used. Accumulate operations larger than this count will use a get/op/put protocol. The optimal value is dictated by the network injection rate for the interconnect. Generally a smaller number will yield better larger accumulate performance. (default: 32)
20250509 201014.827 INFO             PET5 index= 591                           osc_rdma_minimum_memory_alignment : The minimum memory alignment used to allocate local window memory (default: 16384). This is a best effort approach. Alignments larger than the page size may not be supported.
20250509 201014.827 INFO             PET5 index= 592                                      osc_rdma_major_version :
20250509 201014.827 INFO             PET5 index= 593                                      osc_rdma_minor_version :
20250509 201014.827 INFO             PET5 index= 594                                    osc_rdma_release_version :
20250509 201014.827 INFO             PET5 index= 595                                       btl_tcp_bandwidth_en0 :
20250509 201014.827 INFO             PET5 index= 596                                         btl_tcp_latency_en0 :
20250509 201014.827 INFO             PET5 index= 597                                     btl_tcp_bandwidth_en0:0 :
20250509 201014.827 INFO             PET5 index= 598                                       btl_tcp_latency_en0:0 :
20250509 201014.827 INFO             PET5 index= 599                                                        part : Default selection set of components for the part framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET5 index= 600                                           part_base_verbose : Verbosity level for the part framework (default: 0)
20250509 201014.827 INFO             PET5 index= 601                                  part_persist_free_list_num : Initial size of request free lists
20250509 201014.827 INFO             PET5 index= 602                                  part_persist_free_list_max : Maximum size of request free lists
20250509 201014.827 INFO             PET5 index= 603                                  part_persist_free_list_inc : Number of elements to add when growing request free lists
20250509 201014.827 INFO             PET5 index= 604                                  part_persist_major_version :
20250509 201014.827 INFO             PET5 index= 605                                  part_persist_minor_version :
20250509 201014.827 INFO             PET5 index= 606                                part_persist_release_version :
20250509 201014.827 INFO             PET5 index= 607                                                      memory : Default selection set of components for the memory framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET5 index= 608                                         memory_base_verbose : Verbosity level for the memory framework (default: 0)
20250509 201014.827 INFO             PET5 index= 609                                                     patcher : Default selection set of components for the patcher framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET5 index= 610                                        patcher_base_verbose : Verbosity level for the patcher framework (default: 0)
20250509 201014.827 INFO             PET5 index= 611                                  patcher_overwrite_priority : Priority of the overwrite binary patcher component
20250509 201014.827 INFO             PET5 index= 612                             patcher_overwrite_major_version :
20250509 201014.827 INFO             PET5 index= 613                             patcher_overwrite_minor_version :
20250509 201014.827 INFO             PET5 index= 614                           patcher_overwrite_release_version :
20250509 201014.827 INFO             PET5 index= 615                                                        fbtl : Default selection set of components for the fbtl framework (<none> means use all components that can be found)
20250509 201014.827 INFO             PET5 index= 616                                           fbtl_base_verbose : Verbosity level for the fbtl framework (default: 0)
20250509 201014.827 INFO             PET5 index= 617                                         fbtl_posix_priority : Priority of the fbtl posix component
20250509 201014.827 INFO             PET5 index= 618                                   fbtl_posix_max_block_size : Maximum average size in bytes of a data block in an iovec for data sieving. An average block size larger than this parameter will disable data sieving. Default: 1048576 bytes.
20250509 201014.827 INFO             PET5 index= 619                                     fbtl_posix_max_gap_size : Maximum average gap size between two blocks in an iovec for data sieving. An average gap size larger than this parameter will disable data sieving. Default: 4096 bytes.
20250509 201014.827 INFO             PET5 index= 620                                  fbtl_posix_max_tmpbuf_size : Maximum size of the temporary buffer used for data sieving in bytes. Default: 67108864 (64MB).
20250509 201014.827 INFO             PET5 index= 621                                 fbtl_posix_read_datasieving : Parameter indicating whether to perform data sieving for read operations. Default: true.
20250509 201014.827 INFO             PET5 index= 622                                fbtl_posix_write_datasieving : Parameter indicating whether to perform data sieving for write operations. Default: true.
20250509 201014.827 INFO             PET5 index= 623                                    fbtl_posix_major_version :
20250509 201014.827 INFO             PET5 index= 624                                    fbtl_posix_minor_version :
20250509 201014.827 INFO             PET5 index= 625                                  fbtl_posix_release_version :
20250509 201014.827 INFO             PET5 index= 626                                                       fcoll : Default selection set of components for the fcoll framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET5 index= 627                                          fcoll_base_verbose : Verbosity level for the fcoll framework (default: 0)
20250509 201014.828 INFO             PET5 index= 628                                      fcoll_dynamic_priority : Priority of the dynamic fcoll component
20250509 201014.828 INFO             PET5 index= 629                                 fcoll_dynamic_major_version :
20250509 201014.828 INFO             PET5 index= 630                                 fcoll_dynamic_minor_version :
20250509 201014.828 INFO             PET5 index= 631                               fcoll_dynamic_release_version :
20250509 201014.828 INFO             PET5 index= 632                                 fcoll_dynamic_gen2_priority : Priority of the dynamic_gen2 fcoll component
20250509 201014.828 INFO             PET5 index= 633                               fcoll_dynamic_gen2_num_groups : Number of subgroups created by the dynamic_gen2 component
20250509 201014.828 INFO             PET5 index= 634                            fcoll_dynamic_gen2_major_version :
20250509 201014.828 INFO             PET5 index= 635                            fcoll_dynamic_gen2_minor_version :
20250509 201014.828 INFO             PET5 index= 636                          fcoll_dynamic_gen2_release_version :
20250509 201014.828 INFO             PET5 index= 637                                   fcoll_individual_priority : Priority of the individual fcoll component
20250509 201014.828 INFO             PET5 index= 638                              fcoll_individual_major_version :
20250509 201014.828 INFO             PET5 index= 639                              fcoll_individual_minor_version :
20250509 201014.828 INFO             PET5 index= 640                            fcoll_individual_release_version :
20250509 201014.828 INFO             PET5 index= 641                                       fcoll_vulcan_priority : Priority of the vulcan fcoll component
20250509 201014.828 INFO             PET5 index= 642                                     fcoll_vulcan_num_groups : Number of subgroups created by the vulcan component
20250509 201014.828 INFO             PET5 index= 643                                fcoll_vulcan_write_chunksize : Chunk size written at once. Default: stripe_size of the file system
20250509 201014.828 INFO             PET5 index= 644                                       fcoll_vulcan_async_io : Asynchronous I/O support options. 0: Automatic choice (default) 1: Asynchronous I/O only. 2: Synchronous I/O only.
20250509 201014.828 INFO             PET5 index= 645                                  fcoll_vulcan_major_version :
20250509 201014.828 INFO             PET5 index= 646                                  fcoll_vulcan_minor_version :
20250509 201014.828 INFO             PET5 index= 647                                fcoll_vulcan_release_version :
20250509 201014.828 INFO             PET5 index= 648                                                          fs : Default selection set of components for the fs framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET5 index= 649                                             fs_base_verbose : Verbosity level for the fs framework (default: 0)
20250509 201014.828 INFO             PET5 index= 650                                             fs_ufs_priority : Priority of the fs ufs component
20250509 201014.828 INFO             PET5 index= 651                                       fs_ufs_lock_algorithm : Locking algorithm used by the fs ufs component.  0: auto (default), 1: skip locking, 2: always lock entire file, 3: lock only specific ranges
20250509 201014.828 INFO             PET5 index= 652                                        fs_ufs_major_version :
20250509 201014.828 INFO             PET5 index= 653                                        fs_ufs_minor_version :
20250509 201014.828 INFO             PET5 index= 654                                      fs_ufs_release_version :
20250509 201014.828 INFO             PET5 index= 655                                                          io : Default selection set of components for the io framework (<none> means use all components that can be found)
20250509 201014.828 INFO             PET5 index= 656                                             io_base_verbose : Verbosity level for the io framework (default: 0)
20250509 201014.828 INFO             PET5 index= 657                                           io_ompio_priority : Priority of the io ompio component
20250509 201014.828 INFO             PET5 index= 658                                    io_ompio_delete_priority : Delete priority of the io ompio component
20250509 201014.828 INFO             PET5 index= 659                            io_ompio_record_file_offset_info : The information of the file offset/length
20250509 201014.828 INFO             PET5 index= 660                                   io_ompio_coll_timing_info : Enable collective algorithm timing information
20250509 201014.828 INFO             PET5 index= 661                                  io_ompio_cycle_buffer_size : Data size issued by individual reads/writes per call
20250509 201014.828 INFO             PET5 index= 662                               io_ompio_pipeline_buffer_size : Size of temporary buffer used by individual reads/writes in the pipeline protocol
20250509 201014.828 INFO             PET5 index= 663                                      io_ompio_bytes_per_agg : Size of temporary buffer for collective I/O operations
20250509 201014.828 INFO             PET5 index= 664                                    io_ompio_num_aggregators : number of aggregators for collective I/O operations
20250509 201014.828 INFO             PET5 index= 665                                    io_ompio_grouping_option : Option for grouping of processes in the aggregator selection 1: Data volume based grouping 2: maximizing group size uniformity 3: maximimze data contiguity 4: hybrid optimization  5: simple (default) 6: skip refinement step 7: simple+: grouping based on default file view
20250509 201014.828 INFO             PET5 index= 666                              io_ompio_max_aggregators_ratio : Maximum number of processes that can be an aggregator expressed as the ratio to the number of process used to open the file i.e 1 out of n processes can be an aggregator, with n being specified by this mca parameter.
20250509 201014.828 INFO             PET5 index= 667                       io_ompio_aggregators_cutoff_threshold : Relative cutoff threshold for incrementing the number of aggregators in the simple aggregator selection algorithm (5). Lower value for this parameter will lead to higher no. of aggregators.
20250509 201014.828 INFO             PET5 index= 668                                    io_ompio_overwrite_amode : Overwrite WRONLY amode to RDWR to enable data sieving 1: allow overwrite (default) 0: do not overwrite amode provided by application
20250509 201014.828 INFO             PET5 index= 669                               io_ompio_verbose_info_parsing : Provide visual output when parsing info objects 0: no verbose output (default) 1: verbose output by rank 0 2: verbose output by all ranks
20250509 201014.828 INFO             PET5 index= 670                                      io_ompio_major_version :
20250509 201014.828 INFO             PET5 index= 671                                      io_ompio_minor_version :
20250509 201014.828 INFO             PET5 index= 672                                    io_ompio_release_version :
20250509 201014.828 INFO             PET5 index= 673                                        io_romio341_priority : Priority of the io romio component
20250509 201014.828 INFO             PET5 index= 674                                 io_romio341_delete_priority : Delete priority of the io romio component
20250509 201014.828 INFO             PET5 index= 675                                         io_romio341_version : Version of ROMIO
20250509 201014.828 INFO             PET5 index= 676                           io_romio341_user_configure_params : User-specified command line parameters passed to ROMIO's configure script
20250509 201014.828 INFO             PET5 index= 677                       io_romio341_complete_configure_params : Complete set of command line parameters passed to ROMIO's configure script
20250509 201014.829 INFO             PET5 index= 678                                   io_romio341_major_version :
20250509 201014.829 INFO             PET5 index= 679                                   io_romio341_minor_version :
20250509 201014.829 INFO             PET5 index= 680                                 io_romio341_release_version :
20250509 201014.829 INFO             PET5 index= 681                                                    sharedfp : Default selection set of components for the sharedfp framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET5 index= 682                                       sharedfp_base_verbose : Verbosity level for the sharedfp framework (default: 0)
20250509 201014.829 INFO             PET5 index= 683                                sharedfp_individual_priority : Priority of the individual sharedfp component
20250509 201014.829 INFO             PET5 index= 684                                 sharedfp_individual_verbose : Verbosity of the individual sharedfp component
20250509 201014.829 INFO             PET5 index= 685                           sharedfp_individual_major_version :
20250509 201014.829 INFO             PET5 index= 686                           sharedfp_individual_minor_version :
20250509 201014.829 INFO             PET5 index= 687                         sharedfp_individual_release_version :
20250509 201014.829 INFO             PET5 index= 688                                sharedfp_lockedfile_priority : Priority of the lockedfile sharedfp component
20250509 201014.829 INFO             PET5 index= 689                                 sharedfp_lockedfile_verbose : Verbosity of the lockedfile sharedfp component
20250509 201014.829 INFO             PET5 index= 690                           sharedfp_lockedfile_major_version :
20250509 201014.829 INFO             PET5 index= 691                           sharedfp_lockedfile_minor_version :
20250509 201014.829 INFO             PET5 index= 692                         sharedfp_lockedfile_release_version :
20250509 201014.829 INFO             PET5 index= 693                                        sharedfp_sm_priority : Priority of the sm sharedfp component
20250509 201014.829 INFO             PET5 index= 694                                         sharedfp_sm_verbose : Verbosity of the sm sharedfp component
20250509 201014.829 INFO             PET5 index= 695                                   sharedfp_sm_major_version :
20250509 201014.829 INFO             PET5 index= 696                                   sharedfp_sm_minor_version :
20250509 201014.829 INFO             PET5 index= 697                                 sharedfp_sm_release_version :
20250509 201014.829 INFO             PET5 index= 698                                                        topo : Default selection set of components for the topo framework (<none> means use all components that can be found)
20250509 201014.829 INFO             PET5 index= 699                                           topo_base_verbose : Verbosity level for the topo framework (default: 0)
20250509 201014.829 INFO             PET5 index= 700                                    topo_basic_major_version :
20250509 201014.829 INFO             PET5 index= 701                                    topo_basic_minor_version :
20250509 201014.829 INFO             PET5 index= 702                                  topo_basic_release_version :
20250509 201014.829 INFO             PET5 index= 703                                 topo_treematch_reorder_mode : If set the reordering will be done in a partially distributed way (default=0). If partially-distributed only local knowledge will be used, possibly leading to less accurate reordering.
20250509 201014.829 INFO             PET5 index= 704                                topo_treematch_major_version :
20250509 201014.829 INFO             PET5 index= 705                                topo_treematch_minor_version :
20250509 201014.829 INFO             PET5 index= 706                              topo_treematch_release_version :
20250509 201014.829 INFO             PET5 --- VMK::logSystem() end ---------------------------------
20250509 201014.829 INFO             PET5 main: --- VMK::log() start -------------------------------------
20250509 201014.829 INFO             PET5 main: vm located at: 0x15be065d0
20250509 201014.829 INFO             PET5 main: mpionly=1 threadsflag=0
20250509 201014.829 INFO             PET5 main: ssiCount=1 localSsi=0
20250509 201014.829 INFO             PET5 main: devCount=0 ssiLocalDevCount=0
20250509 201014.829 INFO             PET5 main: petCount=6 ssiLocalPetCount=6
20250509 201014.829 INFO             PET5 main: localPet=5 mypthid=0x202a94f40 ssiLocalPet=5 currentSsiPe=-1
20250509 201014.829 INFO             PET5 main: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.829 INFO             PET5 main: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.829 INFO             PET5 main:  PE=0 SSI=0 SSIPE=0
20250509 201014.829 INFO             PET5 main: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.829 INFO             PET5 main:  PE=1 SSI=0 SSIPE=1
20250509 201014.829 INFO             PET5 main: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.829 INFO             PET5 main:  PE=2 SSI=0 SSIPE=2
20250509 201014.829 INFO             PET5 main: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.829 INFO             PET5 main:  PE=3 SSI=0 SSIPE=3
20250509 201014.829 INFO             PET5 main: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.829 INFO             PET5 main:  PE=4 SSI=0 SSIPE=4
20250509 201014.829 INFO             PET5 main: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.829 INFO             PET5 main:  PE=5 SSI=0 SSIPE=5
20250509 201014.829 INFO             PET5 main: --- VMK::log() end ---------------------------------------
20250509 201014.831 INFO             PET5 Executing 'userm1_setvm'
20250509 201014.831 INFO             PET5 Executing 'userm1_register'
20250509 201014.831 INFO             PET5 Executing 'userm2_setvm'
20250509 201014.831 DEBUG            PET5 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.831 DEBUG            PET5 vmkt_create()#228 Pthread: service=1 (0: actual PET, 1: service thread) - PTHREAD_STACK_MIN: 16384 bytes stack_size: 4194304 bytes
20250509 201014.832 INFO             PET5 model1: --- VMK::log() start -------------------------------------
20250509 201014.832 INFO             PET5 model1: vm located at: 0x13c904fa0
20250509 201014.832 INFO             PET5 model1: mpionly=1 threadsflag=0
20250509 201014.832 INFO             PET5 model1: ssiCount=1 localSsi=0
20250509 201014.832 INFO             PET5 model1: devCount=0 ssiLocalDevCount=0
20250509 201014.832 INFO             PET5 model1: petCount=6 ssiLocalPetCount=6
20250509 201014.832 INFO             PET5 model1: localPet=5 mypthid=0x202a94f40 ssiLocalPet=5 currentSsiPe=-1
20250509 201014.832 INFO             PET5 model1: ESMF level logical PET->PE association (but consider system level affinity pinning!):
20250509 201014.832 INFO             PET5 model1: PET=0 lpid=0 tid=0 pid=0 peCount=1 accCount=0
20250509 201014.832 INFO             PET5 model1:  PE=0 SSI=0 SSIPE=0
20250509 201014.832 INFO             PET5 model1: PET=1 lpid=1 tid=0 pid=1 peCount=1 accCount=0
20250509 201014.832 INFO             PET5 model1:  PE=1 SSI=0 SSIPE=1
20250509 201014.832 INFO             PET5 model1: PET=2 lpid=2 tid=0 pid=2 peCount=1 accCount=0
20250509 201014.832 INFO             PET5 model1:  PE=2 SSI=0 SSIPE=2
20250509 201014.832 INFO             PET5 model1: PET=3 lpid=3 tid=0 pid=3 peCount=1 accCount=0
20250509 201014.832 INFO             PET5 model1:  PE=3 SSI=0 SSIPE=3
20250509 201014.832 INFO             PET5 model1: PET=4 lpid=4 tid=0 pid=4 peCount=1 accCount=0
20250509 201014.832 INFO             PET5 model1:  PE=4 SSI=0 SSIPE=4
20250509 201014.832 INFO             PET5 model1: PET=5 lpid=5 tid=0 pid=5 peCount=1 accCount=0
20250509 201014.832 INFO             PET5 model1:  PE=5 SSI=0 SSIPE=5
20250509 201014.832 INFO             PET5 model1: --- VMK::log() end ---------------------------------------
20250509 201014.837 INFO             PET5 Entering 'user1_run'
20250509 201014.837 INFO             PET5  user1_run: on SSIPE:           -1  Filling data lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201017.635 INFO             PET5  user1_run: on SSIPE:           -1  Filling data lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201019.448 INFO             PET5  user1_run: on SSIPE:           -1  Filling data lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201022.038 INFO             PET5  user1_run: on SSIPE:           -1  Filling data lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201024.253 INFO             PET5  user1_run: on SSIPE:           -1  Filling data lbound:        8335           1           1  ubound:       10000        1200          10
20250509 201027.191 INFO             PET5 Exiting 'user1_run'
20250509 201046.306 INFO             PET5  NUMBER_OF_PROCESSORS           6
20250509 201046.307 INFO             PET5  PASS  System Test ESMF_FieldSharedDeSSISTest, ESMF_FieldSharedDeSSISTest.F90, line 276
20250509 201046.307 INFO             PET5  Finalizing ESMF
