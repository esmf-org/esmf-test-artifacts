2025-05-08 02:55:08
  Beginning Test, file ESMF_UtilUTest.F90, line 125
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_UtilUTest.F90, line 125
  NUMBER_OF_PROCESSORS           4
 
  Beginning Test, file ESMF_UtilUTest.F90, line 125
  NUMBER_OF_PROCESSORS           4
 
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           9
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.9.0 beta snapshot
 
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           9
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.9.0 beta snapshot
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
  Beginning Test, file ESMF_UtilUTest.F90, line 125
  NUMBER_OF_PROCESSORS           4
 
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           9
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.9.0 beta snapshot
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
 154
  ESMF_VERSION_MAJOR =           8
  ESMF_VERSION_MINOR =           9
  ESMF_VERSION_REVISION      =           0
  ESMF_VERSION_PATCHLEVEL    =           0
  ESMF_VERSION_STRING=8.9.0 beta snapshot
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
 154
  PASS  Comparing numeric and character major version, ESMF_UtilUTest.F90, line 
 154
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 165
 154
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 165
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 180
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 165
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 180
  PASS  Comparing numeric and character minor version, ESMF_UtilUTest.F90, line 
 165
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 180
  PASS  Comparing numeric and character revision, ESMF_UtilUTest.F90, line 180
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 192
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 192
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 200
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 192
  PASS  No arg VersionPrint test, ESMF_UtilUTest.F90, line 192
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 200
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 200
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
  PASS  One line VersionPrint test, ESMF_UtilUTest.F90, line 200
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 208
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
 
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 208
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 208
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Multi-line VersionPrint test, ESMF_UtilUTest.F90, line 208
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 216
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
 
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 216
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
 
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 216
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
 
   ESMF_VERSION_STRING:       8.9.0 beta snapshot
   ESMF_VERSION_STRING_GIT:   v8.9.0b08-5-g079ca68fdc
   ESMF_VERSION_MAJOR:                   8
   ESMF_VERSION_MINOR:                   9
   ESMF_VERSION_REVISION:                0
   ESMF_VERSION_PATCHLEVEL:              0
   ESMF_VERSION_PUBLIC:        F
   ESMF_VERSION_BETASNAPSHOT:  T
 
 Earth System Modeling Framework
 
 Copyright (c) 2002-2025 University Corporation for Atmospheric Research,
 Massachusetts Institute of Technology, Geophysical Fluid Dynamics Laboratory,
 University of Michigan, National Centers for Environmental Prediction,
 Los Alamos National Laboratory, Argonne National Laboratory,
 NASA Goddard Space Flight Center.
 All rights reserved.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the 'Software'), to
 deal with the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:
    1. Redistributions of source code must retain the above copyright notice,
       this list of conditions and the following disclaimers.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimers in the
       documentation and/or other materials provided with the distribution.
    3. Neither the names of the organizations developing this software, nor
       the names of its contributors may be used to endorse or promote products
       derived from this Software without specific prior written permission.
 
 THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 WITH THE SOFTWARE.
  PASS  Single and multi-line VersionPrint test, ESMF_UtilUTest.F90, line 216
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 241
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 241
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 241
  PASS  Testing ESMF_UtilIOUnitGet, obtaining and opening units, ESMF_UtilUTest.
 F90, line 241
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 258
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 258
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 258
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_03, ESMF_UtilUTest.F
 90, line 267
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_00, ESMF_UtilUTest.F
 90, line 267
  PASS  Testing ESMF_UtilIOUnitFlush, get a free unit, ESMF_UtilUTest.F90, line 
 258
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 76
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 76
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_01, ESMF_UtilUTest.F
 90, line 267
  PASS  ESMF_UtilIOUnitFlush, open scratch file: IOtempfile_02, ESMF_UtilUTest.F
 90, line 267
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 291
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 298
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 306
 command name = 
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default/./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 315
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 291
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 323
 arg_len =         127 , len_trim (arg) =         127
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 333
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 298
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 76
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 306
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 343
 command name = 
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default/./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 352
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 315
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 361
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 323
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 376
  PASS  ESMF_UtilIOUnitFlush, flush the scratch file, ESMF_UtilUTest.F90, line 2
 76
 arg_len =         127 , len_trim (arg) =         127
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 333
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 390
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 399
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 413
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 343
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 24
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 352
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 438
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 361
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 291
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 447
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 376
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 298
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 461
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 390
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 399
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 472
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 413
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 306
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 487
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 24
 command name = 
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default/./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 315
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 496
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 438
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 511
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 323
  PASS  Testing ESMF_UtilGetArgC, command line argument count, ESMF_UtilUTest.F9
 0, line 291
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 447
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 461
 arg_len =         127 , len_trim (arg) =         127
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 333
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 522
  PASS  Testing ESMF_UtilGetArgC, command line argument count value, ESMF_UtilUT
 est.F90, line 298
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 537
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 472
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 546
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 487
  PASS  Testing ESMF_UtilGetArgC, argindex < 0, ESMF_UtilUTest.F90, line 306
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 343
 command name = 
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default/./ESMF_UtilUTest
  PASS  Testing ESMF_UtilGetArgC, get command name, ESMF_UtilUTest.F90, line 315
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 561
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 496
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 511
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 572
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 522
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 352
  PASS  Testing ESMF_UtilGetArgC, get truncated command name, ESMF_UtilUTest.F90
 , line 323
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 584
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 537
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 361
 arg_len =         127 , len_trim (arg) =         127
  PASS  Testing ESMF_UtilGetArgC, compare arg lengths, ESMF_UtilUTest.F90, line 
 333
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 593
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 605
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 546
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 561
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 376
  PASS  Testing ESMF_UtilGetArgC, argindex > nargs, ESMF_UtilUTest.F90, line 343
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 572
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 584
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 390
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 352
  PASS  Testing ESMF_UtilGetArgIndex for program path, ESMF_UtilUTest.F90, line 
 361
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 593
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 399
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 605
  PASS  Testing ascending real sort, ESMF_UtilUTest.F90, line 376
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 413
  PASS  Testing sorted ascending real results, ESMF_UtilUTest.F90, line 390
  PASS  Testing descending real sort, ESMF_UtilUTest.F90, line 399
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 24
  PASS  Testing sorted descending real results, ESMF_UtilUTest.F90, line 413
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 619
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 438
  PASS  Testing ascending double precision real sort, ESMF_UtilUTest.F90, line 4
 24
  PASS  Testing sorted ascending double precision real results, ESMF_UtilUTest.F
 90, line 438
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 447
  PASS  Testing descending double precision real sort, ESMF_UtilUTest.F90, line 
 447
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 461
  PASS  Testing sorted descending double precision real results, ESMF_UtilUTest.
 F90, line 461
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 619
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 472
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 487
  PASS  Testing ascending integer sort, ESMF_UtilUTest.F90, line 472
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 496
  PASS  Testing sorted ascending integer results, ESMF_UtilUTest.F90, line 487
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 511
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 627
  PASS  Testing descending integer sort, ESMF_UtilUTest.F90, line 496
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 522
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 537
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 627
  PASS  Testing sorted descending integer results, ESMF_UtilUTest.F90, line 511
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 546
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 561
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 635
  PASS  Testing ascending double integer sort, ESMF_UtilUTest.F90, line 522
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 572
  PASS  Testing sorted ascending double integer results, ESMF_UtilUTest.F90, lin
 e 537
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 584
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 635
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 593
  PASS  Testing descending double integer sort, ESMF_UtilUTest.F90, line 546
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 605
  PASS  Testing sorted descending double integer results, ESMF_UtilUTest.F90, li
 ne 561
  PASS  Testing ascending character string sort, ESMF_UtilUTest.F90, line 572
  PASS  Testing sorted ascending character string results, ESMF_UtilUTest.F90, l
 ine 584
  PASS  Testing descending character string sort, ESMF_UtilUTest.F90, line 593
  PASS  Testing sorted descending character string results, ESMF_UtilUTest.F90, 
 line 605
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 643
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 643
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 619
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 651
  PASS  Testing creating a directory, ESMF_UtilUTest.F90, line 619
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 651
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 627
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 659
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 673
 current directory name =>
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 635
 Linux.intel.64.intelmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 2
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 700
  PASS  Testing creating a directory which already exists, ESMF_UtilUTest.F90, l
 ine 627
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 712
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 722
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 659
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 673
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 734
 current directory name =>
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default<
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 2
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 741
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 750
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 757
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 700
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 765
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 712
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 772
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 722
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 643
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 780
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 787
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 734
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 795
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 741
  PASS  Testing creating a directory which already exists w/relaxedFlag, ESMF_Ut
 ilUTest.F90, line 635
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 802
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 750
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 757
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  810
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 765
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  817
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 651
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 772
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 780
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 827
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 787
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 837
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 795
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 844
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 802
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  810
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 857
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  817
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 864
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  872
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 827
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  879
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 837
  PASS  Testing removing a directory, ESMF_UtilUTest.F90, line 643
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 844
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 887
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 894
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 857
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 659
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  902
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 864
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  872
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 673
 current directory name =>
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default<
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  909
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  879
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 2
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 917
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  924
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 887
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 894
  PASS  Testing removing a directory which does not exist, ESMF_UtilUTest.F90, l
 ine 651
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 7
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  902
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  909
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 700
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 4
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 917
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 712
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 722
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  924
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 952
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 959
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 7
  PASS  Testing removing a directory which does not exist, relaxed, ESMF_UtilUTe
 st.F90, line 659
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 734
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 4
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 741
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 967
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 974
  PASS  Testing getting the current directory, ESMF_UtilUTest.F90, line 673
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 750
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 757
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 952
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 current directory name =>
 /work/noaa/da/mpotts/sandbox/intel_2020.2.1_intelmpi_g_develop/esmf/test/testg/
 Linux.intel.64.intelmpi.default<
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 982
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 989
 ne 959
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 967
  PASS  Testing directory name for valid characters, ESMF_UtilUTest.F90, line 69
 2
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 765
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 772
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 974
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 780
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 997
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1004
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 982
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 787
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 989
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 795
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 997
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 802
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1004
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  810
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  817
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 827
  PASS  Testing getting the current directory with small string, ESMF_UtilUTest.
 F90, line 700
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 837
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 844
  PASS  Testing converting string to UPPER case, ESMF_UtilUTest.F90, line 712
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 857
  PASS  Testing converting string to lower case, ESMF_UtilUTest.F90, line 722
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 864
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  872
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  879
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 887
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 734
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 894
  PASS  ESMF_UtilString2Int() - no blanks - Test, ESMF_UtilUTest.F90, line 741
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  902
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  909
  PASS  ESMF_UtilStringInt2String() - Test, ESMF_UtilUTest.F90, line 750
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 917
  PASS  String -> Integer -> String conversion correctness - Test, ESMF_UtilUTes
 t.F90, line 757
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  924
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 7
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 765
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 4
  PASS  ESMF_UtilString2Int() - negative value - Test, ESMF_UtilUTest.F90, line 
 772
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 952
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 780
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 959
  PASS  ESMF_UtilString2Int() - explicit positive value - Test, ESMF_UtilUTest.F
 90, line 787
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 967
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 974
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 795
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 982
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 989
  PASS  ESMF_UtilString2Int() - leading blanks - Test, ESMF_UtilUTest.F90, line 
 802
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 997
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  810
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1004
  PASS  ESMF_UtilString2Int() - trailing blanks - Test, ESMF_UtilUTest.F90, line
  817
  PASS  ESMF_UtilString2Int() - special string missing - Test, ESMF_UtilUTest.F9
 0, line 827
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 837
  PASS  ESMF_UtilString2Int() - special string - Test, ESMF_UtilUTest.F90, line 
 844
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 857
  PASS  ESMF_UtilString2Real() - no blanks - Test, ESMF_UtilUTest.F90, line 864
  PASS  ESMF_UtilStringDiffMatch() - identical strings - Test, ESMF_UtilUTest.F9
 0, line 1017
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  872
  PASS  ESMF_UtilStringDiffMatch() - identical strings - match Test, ESMF_UtilUT
 est.F90, line 1024
  PASS  ESMF_UtilStringDiffMatch() - identical strings - Test, ESMF_UtilUTest.F9
 0, line 1017
  PASS  ESMF_UtilString2Real() - negative value - Test, ESMF_UtilUTest.F90, line
  879
  PASS  ESMF_UtilStringDiffMatch() - identical strings - match Test, ESMF_UtilUT
 est.F90, line 1024
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 887
  PASS  ESMF_UtilString2Real() - explicit positive value - Test, ESMF_UtilUTest.
 F90, line 894
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  902
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  909
  PASS  ESMF_UtilString2Real() - trailing blanks - Test, ESMF_UtilUTest.F90, lin
 e 917
  PASS  ESMF_UtilString2Real() - leading blanks - Test, ESMF_UtilUTest.F90, line
  924
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 93
 7
  PASS  ESMF_UtilStringDiffMatch() - different strings - Test, ESMF_UtilUTest.F9
 0, line 1034
  PASS  ESMF_UtilString2Double() - no blanks - Test, ESMF_UtilUTest.F90, line 94
 4
  PASS  ESMF_UtilStringDiffMatch() - different strings - match Test, ESMF_UtilUT
 est.F90, line 1041
  PASS  ESMF_UtilStringDiffMatch() - identical strings - Test, ESMF_UtilUTest.F9
 0, line 1017
  PASS  ESMF_UtilStringDiffMatch() - identical strings - match Test, ESMF_UtilUT
 est.F90, line 1024
  PASS  ESMF_UtilStringDiffMatch() - different strings - Test, ESMF_UtilUTest.F9
 0, line 1034
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 952
  PASS  ESMF_UtilStringDiffMatch() - different strings - match Test, ESMF_UtilUT
 est.F90, line 1041
  PASS  ESMF_UtilString2Double() - negative value - Test, ESMF_UtilUTest.F90, li
 ne 959
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 967
  PASS  ESMF_UtilString2Double() - explicit positive value - Test, ESMF_UtilUTes
 t.F90, line 974
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - Test, ESMF_U
 tilUTest.F90, line 1051
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 982
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - match Test, 
 ESMF_UtilUTest.F90, line 1058
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 989
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1068
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1083
  PASS  ESMF_UtilString2Double() - trailing blanks - Test, ESMF_UtilUTest.F90, l
 ine 997
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - Test, ESMF_U
 tilUTest.F90, line 1051
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1099
  PASS  ESMF_UtilString2Double() - leading blanks - Test, ESMF_UtilUTest.F90, li
 ne 1004
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - match Test, 
 ESMF_UtilUTest.F90, line 1058
  Ending Test, file ESMF_UtilUTest.F90, line 1105
  PASS  ESMF_UtilStringDiffMatch() - different strings - Test, ESMF_UtilUTest.F9
 0, line 1034
  PASS  ESMF_UtilStringDiffMatch() - different strings - match Test, ESMF_UtilUT
 est.F90, line 1041
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1068
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1083
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1099
  Ending Test, file ESMF_UtilUTest.F90, line 1105
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - Test, ESMF_U
 tilUTest.F90, line 1051
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - match Test, 
 ESMF_UtilUTest.F90, line 1058
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1068
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1083
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1099
  Ending Test, file ESMF_UtilUTest.F90, line 1105
  PASS  ESMF_UtilStringDiffMatch() - identical strings - Test, ESMF_UtilUTest.F9
 0, line 1017
  PASS  ESMF_UtilStringDiffMatch() - identical strings - match Test, ESMF_UtilUT
 est.F90, line 1024
  PASS  ESMF_UtilStringDiffMatch() - different strings - Test, ESMF_UtilUTest.F9
 0, line 1034
  PASS  ESMF_UtilStringDiffMatch() - different strings - match Test, ESMF_UtilUT
 est.F90, line 1041
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - Test, ESMF_U
 tilUTest.F90, line 1051
  PASS  ESMF_UtilStringDiffMatch() - different strings minus/plus - match Test, 
 ESMF_UtilUTest.F90, line 1058
  PASS  Testing concatenating strings, ESMF_UtilUTest.F90, line 1068
  PASS  Testing converting C string to Fortran string, ESMF_UtilUTest.F90, line 
 1083
  PASS  Testing converting Fortran string to C string, ESMF_UtilUTest.F90, line 
 1099
  Ending Test, file ESMF_UtilUTest.F90, line 1105
  PET           0  Test Elapsed Time    15.7360000000000       msec.
  PET           2  Test Elapsed Time    19.8930000000000       msec.
  PET           1  Test Elapsed Time    18.3500000000000       msec.
  PET           3  Test Elapsed Time    16.1960000000000       msec.
