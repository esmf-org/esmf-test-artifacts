2025-05-09 19:20:16
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
LocalArrayPrint: Array at address 0x104c04510:
            rank = 1, typekind = 3, base_addr = 0x600003a20030
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
            dim[0] = 10  
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  Integer, *4, Dim 1, Data values:
(-5) =  0
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
(-4) =  0
LocalArrayPrint: Array at address 0x104d043b0:
            rank = 1, typekind = 3, base_addr = 0x6000030a4030
(-3) =  0
(-2) =  0
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
            dim[0] = 10  
(-1) =  0
( 0) =  0
  Integer, *4, Dim 1, Data values:
LocalArrayPrint: Array at address 0x104b043b0:
(-5) =  0
(-4) =  0
( 1) =  0
( 2) =  0
            rank = 1, typekind = 3, base_addr = 0x600002e50030
(-3) =  0
LocalArrayPrint: Array at address 0x10ae043b0:
( 3) =  0
(-2) =  0
(-1) =  0
( 4) =  0
            dim[0] = 10  
            rank = 1, typekind = 3, base_addr = 0x60000270e5e0
( 0) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  Integer, *4, Dim 1, Data values:
            dim[0] = 10  
(-5) =  0
( 1) =  0
( 2) =  0
  Integer, *4, Dim 1, Data values:
(-5) =  0
(-4) =  0
(-3) =  0
(-2) =  0
( 3) =  0
(-4) =  0
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
(-3) =  0
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  0
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
(-2) =  0
(-1) =  0
( 0) =  0
( 1) =  0
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
( 2) =  0
( 3) =  0
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
 array 1b create returned
LocalArrayPrint: Array at address 0x104d04080:
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
            rank = 1, typekind = 3, base_addr = 0x10f808200
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
 array 1b create returned
 array 1b create returned
( 5) =  55
LocalArrayPrint: Array at address 0x112e04f70:
LocalArrayPrint: Array at address 0x10af04080:
( 6) =  66
 array 1b create returned
LocalArrayPrint: Array at address 0x104a041e0:
( 7) =  77
( 8) =  88
            rank = 1, typekind = 3, base_addr = 0x110808200
            dim[0] = 516  
            rank = 1, typekind = 3, base_addr = 0x13b00ca00
            dim[0] = 516  
            rank = 1, typekind = 3, base_addr = 0x119009600
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 9) =  99
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 8) =  88
(10) =  110
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b print returned
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 array 1b get returned
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
(517) =  5687
(518) =  5698
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
(519) =  5709
(520) =  5720
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b getbounds returned
 array 1b get returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b destroy returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1c create returned
LocalArrayPrint: Array at address 0x104d04080:
 array 1b destroy returned
 array 1b getbounds returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
            rank = 1, typekind = 3, base_addr = 0x10f808c00
            dim[0] = 835  
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b destroy returned
  Integer, *4, Dim 1, Data values:
 array 1c create returned
( 1) =  1
 array 1b get returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
LocalArrayPrint: Array at address 0x104c041e0:
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
( 2) =  2
( 3) =  3
            rank = 1, typekind = 3, base_addr = 0x110808c00
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
            dim[0] = 835  
 array 1c create returned
( 4) =  4
LocalArrayPrint: Array at address 0x10c004080:
( 5) =  5
  Integer, *4, Dim 1, Data values:
            rank = 1, typekind = 3, base_addr = 0x10b808200
 array 1b destroy returned
( 1) =  1
( 6) =  6
            dim[0] = 835  
( 2) =  2
( 7) =  7
  Integer, *4, Dim 1, Data values:
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
 array 1c create returned
LocalArrayPrint: Array at address 0x108604590:
            rank = 1, typekind = 3, base_addr = 0x10f008200
(826) =  826
( 7) =  7
            dim[0] = 835  
( 5) =  5
(827) =  827
( 8) =  8
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
(828) =  828
(829) =  829
(830) =  830
(831) =  831
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(832) =  832
(827) =  827
( 5) =  5
  skipping to end ...
(833) =  833
(828) =  828
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
(829) =  829
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
 array 1c destroy returned
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
 array 1c print returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
 array 1c destroy returned
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 array 1c destroy returned
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
 array 1d create returned
LocalArrayPrint: Array at address 0x104d04080:
            rank = 1, typekind = 3, base_addr = 0x10f80c400
            dim[0] = 1022  
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
 array 1c re-destroy returned
 array 1c destroy returned
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
  Integer, *4, Dim 1, Data values:
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 array 1d create returned
LocalArrayPrint: Array at address 0x104c041e0:
            rank = 1, typekind = 3, base_addr = 0x110809a00
            dim[0] = 1022  
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 array 1d create returned
LocalArrayPrint: Array at address 0x10c004080:
            rank = 1, typekind = 3, base_addr = 0x10b809000
  Integer, *4, Dim 1, Data values:
( 5) =  5
            dim[0] = 1022  
( 1) =  1
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
 array 1d create returned
LocalArrayPrint: Array at address 0x108604590:
            rank = 1, typekind = 3, base_addr = 0x10f012e00
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
(10) =  10
  skipping to end ...
(1013) =  1013
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
( 8) =  8
(1014) =  1014
(10) =  10
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
( 8) =  8
(1014) =  1014
(1019) =  1019
(1016) =  1016
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1017) =  1017
(1018) =  1018
(1019) =  1019
( 9) =  9
(10) =  10
  skipping to end ...
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
(1020) =  1020
(1013) =  1013
(1019) =  1019
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
(1021) =  1021
(1014) =  1014
(1020) =  1020
(1022) =  1022
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
(1020) =  1020
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1d destroy returned
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1d destroy returned
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
 array 1d destroy returned
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 Creating array2
 array 1d destroy returned
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
 array 2a create returned
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
LocalArrayPrint: Array at address 0x12ae043e0:
            rank = 2, typekind = 6, base_addr = 0x10b80b800
 array 2a create returned
LocalArrayPrint: Array at address 0x104c041e0:
 array 2a create returned
LocalArrayPrint: Array at address 0x104d04080:
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
            rank = 2, typekind = 6, base_addr = 0x10f80d800
            dim[0] = 51  dim[1] = 31  
 array 2a create returned
            rank = 2, typekind = 6, base_addr = 0x11080d800
( 3, 7) =  303.1
LocalArrayPrint: Array at address 0x105904080:
( 4, 7) =  304.1
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
            rank = 2, typekind = 6, base_addr = 0x10f013e00
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 5, 7) =  305.1
            dim[0] = 51  dim[1] = 31  
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(11, 7) =  311.1
( 9, 7) =  309.1
(10, 7) =  310.1
(12, 7) =  312.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(49,37) =  1849.1
(51,37) =  1851.1
(48,37) =  1848.1
(46,37) =  1846.1
(50,37) =  1850.1
(52,37) =  1852.1
(49,37) =  1849.1
(47,37) =  1847.1
(53,37) =  1853.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
 array 2a print returned
(51,37) =  1851.1
(48,37) =  1848.1
(53,37) =  1853.1
(52,37) =  1852.1
(49,37) =  1849.1
(53,37) =  1853.1
 array 2a print returned
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 array 2a print returned
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
(53,37) =  1853.1
 array 2a print returned
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 array 2a get returned
 bounds:            3           7          53          37
 array 2a get returned
 bounds:            3           7          53          37
 array 2a get returned
 bounds:            3           7          53          37
 array 2a get returned
 bounds:            3           7          53          37
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2a destroy returned
 array 2a destroy returned
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2a destroy returned
 array 2b create returned
 array 2b get returned
 array 2b create returned
 array 2b get returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2b create returned
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
 array 2b create returned
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
 array 2b get returned
LocalArrayPrint: Array at address 0x104c041e0:
LocalArrayPrint: Array at address 0x104c041e0:
            rank = 2, typekind = 6, base_addr = 0x114808200
            dim[0] = 15  dim[1] = 13  
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
            rank = 2, typekind = 6, base_addr = 0x110808200
            dim[0] = 15  dim[1] = 13  
LocalArrayPrint: Array at address 0x13ae04f70:
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
  Real, *8, Dim 2, Data values:
  Real, *8, Dim 2, Data values:
            rank = 2, typekind = 6, base_addr = 0x13b00d400
( 1, 1) =  1.1
( 1, 1) =  1.1
            dim[0] = 15  dim[1] = 13  
( 2, 1) =  2.1
( 3, 1) =  3.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
LocalArrayPrint: Array at address 0x105a04080:
            rank = 2, typekind = 6, base_addr = 0x119809600
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 5, 1) =  5.1
( 3, 1) =  3.1
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 8, 1) =  8.1
( 9, 1) =  9.1
( 8, 1) =  8.1
( 9, 1) =  9.1
( 4, 1) =  4.1
( 7, 1) =  7.1
(10, 1) =  10.1
(10, 1) =  10.1
( 5, 1) =  5.1
( 8, 1) =  8.1
  skipping to end ...
  skipping to end ...
( 9, 1) =  9.1
( 6, 1) =  6.1
( 6,13) =  186.1
( 6,13) =  186.1
(10, 1) =  10.1
( 7, 1) =  7.1
( 7,13) =  187.1
( 7,13) =  187.1
( 8, 1) =  8.1
  skipping to end ...
( 8,13) =  188.1
( 8,13) =  188.1
( 9, 1) =  9.1
( 6,13) =  186.1
( 9,13) =  189.1
( 9,13) =  189.1
(10,13) =  190.1
( 7,13) =  187.1
(10, 1) =  10.1
(10,13) =  190.1
( 8,13) =  188.1
  skipping to end ...
(11,13) =  191.1
(11,13) =  191.1
( 6,13) =  186.1
( 9,13) =  189.1
(12,13) =  192.1
(12,13) =  192.1
(10,13) =  190.1
( 7,13) =  187.1
(13,13) =  193.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
(11,13) =  191.1
( 8,13) =  188.1
( 9,13) =  189.1
(14,13) =  194.1
(12,13) =  192.1
(15,13) =  195.1
 array 2b print returned
(10,13) =  190.1
(13,13) =  193.1
 array 2b print returned
 array 2b destroy returned
(11,13) =  191.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b destroy returned
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
 array 2b print returned
 array 2b destroy returned
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
 array 2c create returned
LocalArrayPrint: Array at address 0x105a04080:
 array 2c create returned
LocalArrayPrint: Array at address 0x104c041e0:
 array 2c create returned
LocalArrayPrint: Array at address 0x13ae04f70:
            rank = 2, typekind = 6, base_addr = 0x148070000
            rank = 2, typekind = 6, base_addr = 0x140070000
 array 2c create returned
            rank = 2, typekind = 6, base_addr = 0x1300d0000
            dim[0] = 4015  dim[1] = 13  
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
            dim[0] = 4015  dim[1] = 13  
LocalArrayPrint: Array at address 0x104c041e0:
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
            rank = 2, typekind = 6, base_addr = 0x118080000
  Real, *8, Dim 2, Data values:
( 2, 1) =  2.1
( 1, 1) =  1.1
            dim[0] = 4015  dim[1] = 13  
( 1, 1) =  1.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 2, 1) =  2.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
(10, 1) =  10.1
  skipping to end ...
( 5, 1) =  5.1
( 5, 1) =  5.1
( 2, 1) =  2.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(10, 1) =  10.1
  skipping to end ...
(4011,13) =  52191.1
(4012,13) =  52192.1
(4006,13) =  52186.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4015,13) =  52195.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4007,13) =  52187.1
 array 2c print returned
(4010,13) =  52190.1
(4011,13) =  52191.1
(4008,13) =  52188.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4009,13) =  52189.1
(4013,13) =  52193.1
(4012,13) =  52192.1
(4010,13) =  52190.1
(4014,13) =  52194.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4011,13) =  52191.1
(4015,13) =  52195.1
(4012,13) =  52192.1
(4015,13) =  52195.1
 array 2c print returned
(4013,13) =  52193.1
(4014,13) =  52194.1
 array 2c print returned
(4015,13) =  52195.1
 array 2c print returned
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c destroy returned
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 array 2c get returned
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 array 2c get returned
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 array 2c get returned
 array 2c destroy returned
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 array 2c destroy returned
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 array 2c destroy returned
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
 array 4a create returned
 array 4a create returned
 array 4a create returned
 array 4a create returned
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
 array 4a get returned
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
 array 4a get returned
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 4a get returned
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a get returned
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a print returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a destroy returned
 array 4a print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4a destroy returned
 array 4a print returned
 array 4a print returned
 array 4b create returned
 array 4a destroy returned
LocalArrayPrint: Array at address 0x104b04080:
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4a destroy returned
            rank = 3, typekind = 6, base_addr = 0x140028000
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
 array 4b create returned
  Real, *8, Dim 3, Data values:
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
LocalArrayPrint: Array at address 0x104b04280:
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
( 1, 1, 1) =  0
            rank = 3, typekind = 6, base_addr = 0x148008000
( 2, 1, 1) =  0
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
 array 4b create returned
( 3, 1, 1) =  0
 array 4b create returned
LocalArrayPrint: Array at address 0x10c004080:
LocalArrayPrint: Array at address 0x105c04080:
( 4, 1, 1) =  0
( 1, 1, 1) =  0
            rank = 3, typekind = 6, base_addr = 0x158008000
( 5, 1, 1) =  0
            rank = 3, typekind = 6, base_addr = 0x178008000
( 2, 1, 1) =  0
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 6, 1, 1) =  0
  Real, *8, Dim 3, Data values:
( 7, 1, 1) =  0
( 3, 1, 1) =  0
( 1, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
(24, 8,160) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 3, 1, 1) =  0
( 7, 1, 1) =  0
(25, 8,160) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(24, 8,160) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(25, 8,160) =  0
( 7, 1, 1) =  0
(24, 8,160) =  0
(26, 8,160) =  0
( 8, 1, 1) =  0
(30, 8,160) =  0
(27, 8,160) =  0
( 9, 1, 1) =  0
(31, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(32, 8,160) =  0
(10, 1, 1) =  0
(28, 8,160) =  0
(27, 8,160) =  0
  skipping to end ...
(29, 8,160) =  0
(33, 8,160) =  0
(28, 8,160) =  0
(30, 8,160) =  0
(24, 8,160) =  0
(29, 8,160) =  0
 array 4b print returned
(31, 8,160) =  0
(30, 8,160) =  0
(25, 8,160) =  0
 array 4b destroy returned
(32, 8,160) =  0
(33, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
(33, 8,160) =  0
 array 4b print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
(29, 8,160) =  0
 array 4b destroy returned
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4d create returned
LocalArrayPrint: Array at address 0x104a041e0:
            rank = 3, typekind = 6, base_addr = 0x11900c800
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
 array 4c failed create returned
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4d create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
LocalArrayPrint: Array at address 0x105b04080:
 array 4d create returned
LocalArrayPrint: Array at address 0x108304080:
            rank = 3, typekind = 6, base_addr = 0x10f00d200
            rank = 3, typekind = 6, base_addr = 0x110009600
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
 array 4c failed create returned
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  0
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  2.1
( 3, 1, 1) =  0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  4.1
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
 array 4d create returned
( 6, 1, 1) =  0
( 7, 1, 1) =  7.1
( 7, 1, 1) =  0
LocalArrayPrint: Array at address 0x10c004080:
( 7, 1, 1) =  0
( 8, 1, 1) =  8.1
( 8, 1, 1) =  0
( 8, 1, 1) =  0
            rank = 3, typekind = 6, base_addr = 0x10b808200
( 9, 1, 1) =  9.1
( 9, 1, 1) =  0
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
(10, 1, 1) =  10.1
(10, 1, 1) =  0
  skipping to end ...
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
  skipping to end ...
( 1, 3,40) =  1191.1
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
( 1, 3,40) =  0
( 2, 1, 1) =  8.48798e-314
( 2, 3,40) =  1192.1
( 2, 3,40) =  0
( 3, 1, 1) =  0
( 3, 3,40) =  1193.1
( 1, 3,40) =  0
( 3, 3,40) =  0
( 2, 3,40) =  0
( 4, 1, 1) =  1.6976e-313
( 4, 3,40) =  1194.1
( 4, 3,40) =  0
( 5, 3,40) =  1195.1
( 5, 1, 1) =  2.122e-313
( 3, 3,40) =  0
( 4, 3,40) =  0
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 6, 3,40) =  1196.1
( 7, 3,40) =  1197.1
( 8, 3,40) =  1198.1
( 9, 3,40) =  1199.1
( 6, 1, 1) =  2.54639e-313
( 7, 1, 1) =  2.97079e-313
( 8, 1, 1) =  3.39519e-313
( 9, 1, 1) =  3.81959e-313
( 9, 3,40) =  0
(10, 3,40) =  0
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
(10, 1, 1) =  4.24399e-313
  skipping to end ...
( 1, 3,40) =  0
( 2, 3,40) =  0
( 3, 3,40) =  0
( 4, 3,40) =  0
( 9, 3,40) =  0
(10, 3,40) =  0
 array 4d print returned
(10, 3,40) =  1200.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 9, 3,40) =  0
 array 4e create returned
LocalArrayPrint: Array at address 0x118604c60:
 array 4e create returned
LocalArrayPrint: Array at address 0x108404080:
            rank = 3, typekind = 6, base_addr = 0x12480d000
 array 4e create returned
LocalArrayPrint: Array at address 0x108204080:
(10, 3,40) =  0
            rank = 3, typekind = 6, base_addr = 0x11880d800
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
            rank = 3, typekind = 6, base_addr = 0x111008200
 array 4d print returned
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
  Real, *8, Dim 3, Data values:
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
( 1, 1, 1) =  0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
 array 4e create returned
LocalArrayPrint: Array at address 0x10af04080:
            rank = 3, typekind = 6, base_addr = 0x10b00aa00
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  0
( 3, 3,40) =  0
( 4, 3,40) =  0
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 9, 3,40) =  0
(10, 3,40) =  0
(11, 3,40) =  0
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  0
( 3, 3,40) =  0
( 4, 3,40) =  0
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 9, 3,40) =  0
(10, 3,40) =  0
(11, 3,40) =  0
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  0
( 3, 3,40) =  0
( 4, 3,40) =  0
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 9, 3,40) =  0
(10, 3,40) =  0
(11, 3,40) =  0
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  0
( 6, 1, 1) =  0
( 7, 1, 1) =  0
( 8, 1, 1) =  0
( 9, 1, 1) =  0
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  0
( 3, 3,40) =  0
( 4, 3,40) =  0
( 5, 3,40) =  0
( 6, 3,40) =  0
( 7, 3,40) =  0
( 8, 3,40) =  0
( 9, 3,40) =  0
(10, 3,40) =  0
(11, 3,40) =  0
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
  PET           1  Test Elapsed Time    9.1870000000000012       msec.
  PET           0  Test Elapsed Time    8.9820000000000171       msec.
  PET           2  Test Elapsed Time    9.0139999999999940       msec.
  PET           3  Test Elapsed Time    9.0729999999999968       msec.
