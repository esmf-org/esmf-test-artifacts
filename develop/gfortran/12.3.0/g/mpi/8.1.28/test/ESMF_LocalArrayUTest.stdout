2025-05-08 03:58:51
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e2cb0
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  5123248
(-4) =  0
(-3) =  0
(-2) =  0
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  538994023
( 4) =  8237
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e2cb0
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  5123248
(-4) =  0
(-3) =  0
(-2) =  0
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  538994023
( 4) =  8237
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
LocalArrayPrint: Array at address 0x4e8030:
            rank = 1, typekind = 3, base_addr = 0x4e3290
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  5124752
(-4) =  0
(-3) =  0
(-2) =  0
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  538994023
( 4) =  8237
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
 array 1b create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e5660
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
LocalArrayPrint: Array at address 0x4e7940:
            rank = 1, typekind = 3, base_addr = 0x4e2ba0
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
(-5) =  5122976
(-4) =  0
(-3) =  0
(-2) =  0
(-1) =  0
( 0) =  0
( 1) =  0
( 2) =  0
( 3) =  538994023
( 4) =  8237
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
 array 1b create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e5660
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b print returned
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b getbounds returned
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 array 1b create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 1, typekind = 3, base_addr = 0x4e5c40
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 array 1b get returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b destroy returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b destroy returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
 array 1c create returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b destroy returned
 array 1c create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e8d90
            dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
 array 1b create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 1, typekind = 3, base_addr = 0x4e5550
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
( 7) =  77
( 8) =  88
( 9) =  99
(10) =  110
(11) =  121
(12) =  132
(13) =  143
(14) =  154
  skipping to end ...
(511) =  5621
(512) =  5632
(513) =  5643
(514) =  5654
(515) =  5665
(516) =  5676
(517) =  5687
(518) =  5698
(519) =  5709
(520) =  5720
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e8d90
            dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
 array 1c create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 1, typekind = 3, base_addr = 0x4e9370
            dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
 array 1c destroy returned
 array 1b print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 array 1b get returned
 real lb, ub =            5         520   lib return lb, ub =            5         520
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
 array 1b getbounds returned
 array 1c destroy returned
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
 array 1c re-destroy returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
 array 1c destroy returned
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 array 1d create returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 array 1b get returned
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b destroy returned
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 array 1d create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e8d90
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 array 1d create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 1, typekind = 3, base_addr = 0x4e9370
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 1, typekind = 3, base_addr = 0x4e8d90
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1c create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 1, typekind = 3, base_addr = 0x4e8c80
            dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(826) =  826
(827) =  827
(828) =  828
(829) =  829
(830) =  830
(831) =  831
(832) =  832
(833) =  833
(834) =  834
(835) =  835
 array 1c print returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1d destroy returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1d destroy returned
 array 1d destroy returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
 array 1c destroy returned
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
 array 1c re-destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
 array 2a create returned
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
 array 2a create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 2, typekind = 6, base_addr = 0x4e9370
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
 array 2a create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 2, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
 array 1d create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 1, typekind = 3, base_addr = 0x4e8c80
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
( 1) =  1
( 2) =  2
( 3) =  3
( 4) =  4
( 5) =  5
( 6) =  6
( 7) =  7
( 8) =  8
( 9) =  9
(10) =  10
  skipping to end ...
(1013) =  1013
(1014) =  1014
(1015) =  1015
(1016) =  1016
(1017) =  1017
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
(1022) =  1022
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 2, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 array 2a get returned
 bounds:            3           7          53          37
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 array 2a get returned
 bounds:            3           7          53          37
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1d destroy returned
 array 2a get returned
 bounds:            3           7          53          37
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2b create returned
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2b create returned
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 Creating array2
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
 array 2a create returned
 array 2b create returned
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
LocalArrayPrint: Array at address 0x4e8030:
            rank = 2, typekind = 6, base_addr = 0x4e5c40
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 2, typekind = 6, base_addr = 0x4e5660
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 2, typekind = 6, base_addr = 0x4e8c80
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
( 6, 7) =  306.1
( 7, 7) =  307.1
( 8, 7) =  308.1
( 9, 7) =  309.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
(47,37) =  1847.1
(48,37) =  1848.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 2, typekind = 6, base_addr = 0x4e5660
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 array 2a get returned
 bounds:            3           7          53          37
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2b create returned
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
LocalArrayPrint: Array at address 0x4e7940:
            rank = 2, typekind = 6, base_addr = 0x4e5550
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6,13) =  186.1
( 7,13) =  187.1
( 8,13) =  188.1
( 9,13) =  189.1
(10,13) =  190.1
(11,13) =  191.1
(12,13) =  192.1
(13,13) =  193.1
(14,13) =  194.1
(15,13) =  195.1
 array 2b print returned
 array 2b destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
 array 2c create returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
 array 2c create returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
 array 2c create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 2, typekind = 6, base_addr = 0x7fe82d970010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 2, typekind = 6, base_addr = 0x7fe0f3c85010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 2, typekind = 6, base_addr = 0x7fcbd840b010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 array 2c destroy returned
 array 2c destroy returned
 array 2c destroy returned
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
 array 4a create returned
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
 array 4a create returned
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
 array 4a create returned
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
 array 2c create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 2, typekind = 6, base_addr = 0x7f80bfb70010
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
(4006,13) =  52186.1
(4007,13) =  52187.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
 array 4a get returned
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
 array 4a get returned
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 4a get returned
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 4a get returned
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4b create returned
 array 4b create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 3, typekind = 6, base_addr = 0x4e9370
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  6.9483e-310
( 2, 1, 1) =  6.9483e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  8.1
( 9, 1, 1) =  9.1
(10, 1, 1) =  10.1
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
 array 4b create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 3, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  6.94677e-310
( 2, 1, 1) =  6.94677e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  8.1
( 9, 1, 1) =  9.1
(10, 1, 1) =  10.1
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
 array 4c failed create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 3, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  6.94229e-310
( 2, 1, 1) =  6.94229e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  8.1
( 9, 1, 1) =  9.1
(10, 1, 1) =  10.1
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4d create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 3, typekind = 6, base_addr = 0x4e9370
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.5367e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54436e-317
( 8, 1, 1) =  2.54429e-317
( 9, 1, 1) =  2.54425e-317
(10, 1, 1) =  0
  skipping to end ...
( 1, 3,40) =  1191.1
( 2, 3,40) =  1192.1
( 3, 3,40) =  1193.1
( 4, 3,40) =  1194.1
( 5, 3,40) =  1195.1
( 6, 3,40) =  1196.1
( 7, 3,40) =  1197.1
( 8, 3,40) =  1198.1
( 9, 3,40) =  1199.1
(10, 3,40) =  1200.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4d create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 3, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.53596e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54362e-317
( 8, 1, 1) =  2.54355e-317
( 9, 1, 1) =  2.54351e-317
(10, 1, 1) =  0
  skipping to end ...
( 1, 3,40) =  1191.1
( 2, 3,40) =  1192.1
( 3, 3,40) =  1193.1
( 4, 3,40) =  1194.1
( 5, 3,40) =  1195.1
( 6, 3,40) =  1196.1
( 7, 3,40) =  1197.1
( 8, 3,40) =  1198.1
( 9, 3,40) =  1199.1
(10, 3,40) =  1200.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
 array 4d create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 3, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.53596e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54362e-317
( 8, 1, 1) =  2.54355e-317
( 9, 1, 1) =  2.54351e-317
(10, 1, 1) =  0
  skipping to end ...
( 1, 3,40) =  1191.1
( 2, 3,40) =  1192.1
( 3, 3,40) =  1193.1
( 4, 3,40) =  1194.1
( 5, 3,40) =  1195.1
( 6, 3,40) =  1196.1
( 7, 3,40) =  1197.1
( 8, 3,40) =  1198.1
( 9, 3,40) =  1199.1
(10, 3,40) =  1200.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
 array 4e create returned
 array 4e create returned
LocalArrayPrint: Array at address 0x4e8030:
            rank = 3, typekind = 6, base_addr = 0x4e9370
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.5367e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54436e-317
( 8, 1, 1) =  2.54429e-317
( 9, 1, 1) =  2.54425e-317
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  1311.1
( 3, 3,40) =  1312.1
( 4, 3,40) =  1313.1
( 5, 3,40) =  1314.1
( 6, 3,40) =  1315.1
( 7, 3,40) =  1316.1
( 8, 3,40) =  1317.1
( 9, 3,40) =  1318.1
(10, 3,40) =  1319.1
(11, 3,40) =  1320.1
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
 array 4e create returned
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 3, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.53596e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54362e-317
( 8, 1, 1) =  2.54355e-317
( 9, 1, 1) =  2.54351e-317
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  1311.1
( 3, 3,40) =  1312.1
( 4, 3,40) =  1313.1
( 5, 3,40) =  1314.1
( 6, 3,40) =  1315.1
( 7, 3,40) =  1316.1
( 8, 3,40) =  1317.1
( 9, 3,40) =  1318.1
(10, 3,40) =  1319.1
(11, 3,40) =  1320.1
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
LocalArrayPrint: Array at address 0x4e7a50:
            rank = 3, typekind = 6, base_addr = 0x4e8d90
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.53596e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54362e-317
( 8, 1, 1) =  2.54355e-317
( 9, 1, 1) =  2.54351e-317
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  1311.1
( 3, 3,40) =  1312.1
( 4, 3,40) =  1313.1
( 5, 3,40) =  1314.1
( 6, 3,40) =  1315.1
( 7, 3,40) =  1316.1
( 8, 3,40) =  1317.1
( 9, 3,40) =  1318.1
(10, 3,40) =  1319.1
(11, 3,40) =  1320.1
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
 array 1f create returned
 array 1f destroy returned
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 array 2c destroy returned
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
 array 4a create returned
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
 array 4a get returned
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4b create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 3, typekind = 6, base_addr = 0x4e8c80
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  6.92635e-310
( 2, 1, 1) =  6.92635e-310
( 3, 1, 1) =  0
( 4, 1, 1) =  0
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  8.1
( 9, 1, 1) =  9.1
(10, 1, 1) =  10.1
  skipping to end ...
(24, 8,160) =  0
(25, 8,160) =  0
(26, 8,160) =  0
(27, 8,160) =  0
(28, 8,160) =  0
(29, 8,160) =  0
(30, 8,160) =  0
(31, 8,160) =  0
(32, 8,160) =  0
(33, 8,160) =  0
 array 4b print returned
 array 4b destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4d create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 3, typekind = 6, base_addr = 0x4e8c80
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.53582e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54349e-317
( 8, 1, 1) =  2.54341e-317
( 9, 1, 1) =  2.54337e-317
(10, 1, 1) =  0
  skipping to end ...
( 1, 3,40) =  1191.1
( 2, 3,40) =  1192.1
( 3, 3,40) =  1193.1
( 4, 3,40) =  1194.1
( 5, 3,40) =  1195.1
( 6, 3,40) =  1196.1
( 7, 3,40) =  1197.1
( 8, 3,40) =  1198.1
( 9, 3,40) =  1199.1
(10, 3,40) =  1200.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
 array 4e create returned
LocalArrayPrint: Array at address 0x4e7940:
            rank = 3, typekind = 6, base_addr = 0x4e8c80
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  2.53582e-317
( 2, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  2.02567e-322
( 5, 1, 1) =  0
( 6, 1, 1) =  6.1
( 7, 1, 1) =  2.54349e-317
( 8, 1, 1) =  2.54341e-317
( 9, 1, 1) =  2.54337e-317
(10, 1, 1) =  0
  skipping to end ...
( 2, 3,40) =  1311.1
( 3, 3,40) =  1312.1
( 4, 3,40) =  1313.1
( 5, 3,40) =  1314.1
( 6, 3,40) =  1315.1
( 7, 3,40) =  1316.1
( 8, 3,40) =  1317.1
( 9, 3,40) =  1318.1
(10, 3,40) =  1319.1
(11, 3,40) =  1320.1
 array 4e print returned
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
  PET           3  Test Elapsed Time    4.1280000000000001       msec.
  PET           1  Test Elapsed Time    4.1589999999999998       msec.
  PET           0  Test Elapsed Time    4.1920000000000011       msec.
  PET           2  Test Elapsed Time    4.4249999999999980       msec.
