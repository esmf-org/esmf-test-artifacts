2025-05-07 21:14:22
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  Beginning Test, file ESMF_LocalArrayUTest.F90, line 59
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  NUMBER_OF_PROCESSORS           4
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 72
  PASS  Testing LocalArray IsCreated for uncreated object, ESMF_LocalArrayUTest.F90, line 80
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 97
 isESMFAllocated =  F
 isESMFAllocated =  F
 isESMFAllocated =  F
 isESMFAllocated =  F
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_REFERENCE, ESMF_LocalArrayUTest.F90, line 105
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 112
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Testing LocalArray IsCreated for created object, ESMF_LocalArrayUTest.F90, line 120
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 131
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 139
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
  PASS  Testing LocalArray IsCreated for destroyed object, ESMF_LocalArrayUTest.F90, line 147
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
 first 10 intptr data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 168
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArray equality before assignment Test, ESMF_LocalArrayUTest.F90, line 175
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArray assignment and equality Test, ESMF_LocalArrayUTest.F90, line 184
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArrayDestroy Test, ESMF_LocalArrayUTest.F90, line 191
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  LocalArray equality after destroy Test, ESMF_LocalArrayUTest.F90, line 199
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  LocalArray non-equality after destroy Test, ESMF_LocalArrayUTest.F90, line 207
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR without counts, lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 214
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Creating a LocalArray from TKR with counts and without lbounds, ubounds, ESMF_LocalArrayUTest.F90, line 223
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 230
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Creating a LocalArray from TKR with counts and lbounds and without ubounds, ESMF_LocalArrayUTest.F90, line 240
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 247
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with counts and ubounds and without lbounds, ESMF_LocalArrayUTest.F90, line 257
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 264
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 275
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 282
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Creating a LocalArray from TKR with mis-matching counts, lbounds and ubounds, ESMF_LocalArrayUTest.F90, line 293
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Creating a LocalArray from TKR with rank that does not match bounds, ESMF_LocalArrayUTest.F90, line 304
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
  PASS  Creating a LocalArray from TKR without counts, ESMF_LocalArrayUTest.F90, line 314
LocalArrayPrint: Array at address 0x13261a550:
LocalArrayPrint: Array at address 0x126e1a180:
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
            rank = 1, typekind = 3, base_addr = 0x6000008faeb0
            dim[0] = 10  
            rank = 1, typekind = 3, base_addr = 0x600002a894a0
  PASS  Creating a LocalArray as a Copy of existing LocalArray, ESMF_LocalArrayUTest.F90, line 321
            dim[0] = 10  
  Integer, *4, Dim 1, Data values:
  Integer, *4, Dim 1, Data values:
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 328
(-5) =  0
(-4) =  0
(-5) =  0
(-4) =  0
(-3) =  0
(-3) =  0
(-2) =  0
(-2) =  0
(-1) =  0
(-1) =  0
( 0) =  0
( 0) =  0
( 1) =  0
LocalArrayPrint: Array at address 0x147104830:
LocalArrayPrint: Array at address 0x141804080:
( 1) =  0
            rank = 1, typekind = 3, base_addr = 0x600002408270
            rank = 1, typekind = 3, base_addr = 0x600003990030
( 2) =  0
( 3) =  0
( 2) =  0
( 3) =  0
            dim[0] = 10  
            dim[0] = 10  
( 4) =  0
( 4) =  0
  Integer, *4, Dim 1, Data values:
(-5) =  0
  Integer, *4, Dim 1, Data values:
(-5) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
(-4) =  0
(-4) =  0
(-3) =  0
(-2) =  0
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
(-3) =  0
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
(-1) =  0
(-2) =  0
( 0) =  0
(-1) =  0
( 1) =  0
( 0) =  0
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
( 2) =  0
( 1) =  0
( 2) =  0
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
( 3) =  0
( 3) =  0
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
( 4) =  0
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
( 4) =  0
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Printing LocalArray Copy after original LocalArray destroy, ESMF_LocalArrayUTest.F90, line 335
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Local Array Copy Destroy Test, ESMF_LocalArrayUTest.F90, line 342
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
 array 1b create returned
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
LocalArrayPrint: Array at address 0x126e19e50:
  PASS  Creating a LocalArray from unassociated Fortran pointer with docpy argument, ESMF_LocalArrayUTest.F90, line 350
            rank = 1, typekind = 3, base_addr = 0x14003e000
 array 1b create returned
LocalArrayPrint: Array at address 0x122605a20:
            dim[0] = 516  
  Integer, *4, Dim 1, Data values:
( 5) =  55
( 6) =  66
            rank = 1, typekind = 3, base_addr = 0x132823400
            dim[0] = 516  
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  Integer, *4, Dim 1, Data values:
( 7) =  77
( 5) =  55
( 8) =  88
  PASS  Validate a non-set ArraySpec, ESMF_LocalArrayUTest.F90, line 359
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
( 6) =  66
( 7) =  77
( 9) =  99
(10) =  110
(11) =  121
( 8) =  88
  PASS  Initializing an Array Spec of rank 3 Test, ESMF_LocalArrayUTest.F90, line 367
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
(12) =  132
( 9) =  99
(10) =  110
(13) =  143
  PASS  Validate an ArraySpec, ESMF_LocalArrayUTest.F90, line 375
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
(11) =  121
(12) =  132
(14) =  154
  skipping to end ...
(13) =  143
(14) =  154
(511) =  5621
(512) =  5632
 array 1b create returned
  PASS  Creating a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 382
  skipping to end ...
LocalArrayPrint: Array at address 0x1471041e0:
(513) =  5643
(511) =  5621
(514) =  5654
            rank = 1, typekind = 3, base_addr = 0x15000b000
(512) =  5632
(515) =  5665
            dim[0] = 516  
(516) =  5676
(517) =  5687
 array 1b create returned
(513) =  5643
(514) =  5654
  Integer, *4, Dim 1, Data values:
(518) =  5698
(515) =  5665
LocalArrayPrint: Array at address 0x141804080:
( 5) =  55
            rank = 1, typekind = 3, base_addr = 0x142816e00
(516) =  5676
(519) =  5709
( 6) =  66
            dim[0] = 516  
(520) =  5720
(517) =  5687
  Integer, *4, Dim 1, Data values:
( 7) =  77
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
(518) =  5698
( 5) =  55
( 8) =  88
(519) =  5709
 array 1b print returned
( 6) =  66
( 9) =  99
(520) =  5720
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
( 7) =  77
(10) =  110
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
(11) =  121
( 8) =  88
 array 1b get returned
(12) =  132
( 9) =  99
 real lb, ub =            5         520   lib return lb, ub =            5         520
 array 1b print returned
(10) =  110
(13) =  143
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
(11) =  121
(14) =  154
  skipping to end ...
(12) =  132
 array 1b getbounds returned
 array 1b get returned
(511) =  5621
(13) =  143
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 real lb, ub =            5         520   lib return lb, ub =            5         520
(14) =  154
(512) =  5632
(513) =  5643
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
  skipping to end ...
 array 1b get returned
(514) =  5654
(515) =  5665
(511) =  5621
(512) =  5632
 array 1b getbounds returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
(513) =  5643
(516) =  5676
(514) =  5654
(517) =  5687
 array 1b get returned
 array 1b destroy returned
(518) =  5698
(515) =  5665
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
(519) =  5709
(516) =  5676
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1c create returned
LocalArrayPrint: Array at address 0x126e19e50:
(520) =  5720
(517) =  5687
(518) =  5698
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1b destroy returned
            rank = 1, typekind = 3, base_addr = 0x14004a800
            dim[0] = 835  
(519) =  5709
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
(520) =  5720
  Integer, *4, Dim 1, Data values:
( 1) =  1
 array 1b print returned
  PASS  Printing a Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 390
 array 1c create returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
( 2) =  2
LocalArrayPrint: Array at address 0x122605760:
( 3) =  3
 array 1b print returned
( 4) =  4
            rank = 1, typekind = 3, base_addr = 0x122810400
            dim[0] = 835  
 array 1b get returned
( 5) =  5
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 398
 real lb, ub =            5         520   lib return lb, ub =            5         520
( 6) =  6
  Integer, *4, Dim 1, Data values:
( 7) =  7
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
( 1) =  1
( 2) =  2
( 8) =  8
 array 1b get returned
( 3) =  3
( 9) =  9
 real lb, ub =            5         520   lib return lb, ub =            5         520
( 4) =  4
(10) =  10
( 5) =  5
  skipping to end ...
 array 1b getbounds returned
  PASS  Getting lower and upper index bounds, ESMF_LocalArrayUTest.F90, line 410
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
(826) =  826
( 6) =  6
 array 1b getbounds returned
( 7) =  7
(827) =  827
 array 1b get returned
  PASS  Compare Local Array Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 425
( 8) =  8
( 9) =  9
(828) =  828
(829) =  829
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
(830) =  830
(10) =  10
  skipping to end ...
(831) =  831
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b get returned
(832) =  832
(826) =  826
 first 10 intptr2 data =           55          66          77          88          99         110         121         132         143         154         165
(833) =  833
(827) =  827
(834) =  834
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 434
 array 1b destroy returned
(835) =  835
 array 1c print returned
(828) =  828
(829) =  829
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
(830) =  830
(831) =  831
 array 1b destroy returned
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
 array 1c create returned
LocalArrayPrint: Array at address 0x1471041e0:
(832) =  832
  PASS  Creating Local Array Based on existing pointer Test, ESMF_LocalArrayUTest.F90, line 455
(833) =  833
            rank = 1, typekind = 3, base_addr = 0x15000ba00
(834) =  834
            dim[0] = 835  
 array 1c create returned
(835) =  835
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
LocalArrayPrint: Array at address 0x141804080:
  Integer, *4, Dim 1, Data values:
 array 1c print returned
( 1) =  1
            rank = 1, typekind = 3, base_addr = 0x14200ba00
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
( 2) =  2
            dim[0] = 835  
  Integer, *4, Dim 1, Data values:
( 3) =  3
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
 array 1c destroy returned
( 4) =  4
( 1) =  1
( 5) =  5
( 2) =  2
( 3) =  3
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
( 6) =  6
( 4) =  4
( 5) =  5
( 7) =  7
( 8) =  8
 array 1c destroy returned
 array 1c re-destroy returned
( 9) =  9
( 6) =  6
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
(10) =  10
( 7) =  7
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
( 8) =  8
  skipping to end ...
 array 1d create returned
(826) =  826
( 9) =  9
LocalArrayPrint: Array at address 0x126e19e50:
 array 1c re-destroy returned
(827) =  827
(10) =  10
            rank = 1, typekind = 3, base_addr = 0x14004e000
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
(828) =  828
  skipping to end ...
            dim[0] = 1022  
(826) =  826
(827) =  827
(829) =  829
(830) =  830
 array 1d create returned
  Integer, *4, Dim 1, Data values:
LocalArrayPrint: Array at address 0x122605760:
( 1) =  1
(831) =  831
(828) =  828
( 2) =  2
            rank = 1, typekind = 3, base_addr = 0x12280dc00
(832) =  832
(829) =  829
( 3) =  3
            dim[0] = 1022  
(830) =  830
(833) =  833
( 4) =  4
  Integer, *4, Dim 1, Data values:
( 1) =  1
(831) =  831
( 5) =  5
(834) =  834
(832) =  832
(835) =  835
( 2) =  2
( 6) =  6
 array 1c print returned
(833) =  833
(834) =  834
( 3) =  3
( 7) =  7
( 8) =  8
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
( 4) =  4
(835) =  835
( 9) =  9
(10) =  10
( 5) =  5
( 6) =  6
 array 1c print returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  skipping to end ...
( 7) =  7
  PASS  Getting Local Array Data Test, ESMF_LocalArrayUTest.F90, line 466
(1013) =  1013
( 8) =  8
(1014) =  1014
(1015) =  1015
( 9) =  9
(10) =  10
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
(1016) =  1016
(1017) =  1017
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 479
  skipping to end ...
 array 1c destroy returned
(1013) =  1013
(1014) =  1014
(1018) =  1018
(1019) =  1019
(1020) =  1020
(1021) =  1021
  PASS  Local Array Destroy Test, ESMF_LocalArrayUTest.F90, line 486
(1015) =  1015
(1016) =  1016
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
(1022) =  1022
(1017) =  1017
(1018) =  1018
 array 1d print returned
 array 1c destroy returned
 array 1c re-destroy returned
(1019) =  1019
(1020) =  1020
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
  PASS  Local Array Destroy a destroyed Array Test, ESMF_LocalArrayUTest.F90, line 494
(1021) =  1021
(1022) =  1022
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 array 1d print returned
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
 array 1c re-destroy returned
 array 1d create returned
 array 1d destroy returned
  PASS  Creating Local Array Based on allocated pointer Test, ESMF_LocalArrayUTest.F90, line 515
LocalArrayPrint: Array at address 0x1471041e0:
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
            rank = 1, typekind = 3, base_addr = 0x15000f200
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 array 1d create returned
LocalArrayPrint: Array at address 0x141804080:
            dim[0] = 1022  
  Integer, *4, Dim 1, Data values:
 Creating array2
 array 1d destroy returned
( 1) =  1
            rank = 1, typekind = 3, base_addr = 0x142009200
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
( 2) =  2
            dim[0] = 1022  
 Creating array2
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
  Integer, *4, Dim 1, Data values:
( 3) =  3
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
( 1) =  1
( 4) =  4
 array 2a create returned
( 2) =  2
( 5) =  5
LocalArrayPrint: Array at address 0x126e19e50:
 array 2a create returned
( 6) =  6
LocalArrayPrint: Array at address 0x122605760:
            rank = 2, typekind = 6, base_addr = 0x140024600
( 3) =  3
( 7) =  7
            rank = 2, typekind = 6, base_addr = 0x122814000
            dim[0] = 51  dim[1] = 31  
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
( 4) =  4
( 5) =  5
( 8) =  8
( 9) =  9
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
( 6) =  6
(10) =  10
  skipping to end ...
( 4, 7) =  304.1
( 5, 7) =  305.1
( 3, 7) =  303.1
( 4, 7) =  304.1
( 7) =  7
( 8) =  8
( 6, 7) =  306.1
( 7, 7) =  307.1
( 5, 7) =  305.1
( 6, 7) =  306.1
(1013) =  1013
( 9) =  9
(1014) =  1014
(10) =  10
( 7, 7) =  307.1
( 8, 7) =  308.1
(1015) =  1015
  skipping to end ...
( 8, 7) =  308.1
( 9, 7) =  309.1
(1016) =  1016
(1013) =  1013
( 9, 7) =  309.1
(10, 7) =  310.1
(1014) =  1014
(1015) =  1015
(11, 7) =  311.1
(12, 7) =  312.1
(1017) =  1017
(1018) =  1018
(10, 7) =  310.1
(11, 7) =  311.1
  skipping to end ...
(1019) =  1019
(1016) =  1016
(1017) =  1017
(12, 7) =  312.1
  skipping to end ...
(44,37) =  1844.1
(1020) =  1020
(45,37) =  1845.1
(1021) =  1021
(44,37) =  1844.1
(1018) =  1018
(46,37) =  1846.1
(1022) =  1022
(45,37) =  1845.1
(1019) =  1019
(47,37) =  1847.1
 array 1d print returned
(46,37) =  1846.1
(47,37) =  1847.1
(1020) =  1020
(1021) =  1021
(48,37) =  1848.1
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
(48,37) =  1848.1
(49,37) =  1849.1
(1022) =  1022
 array 1d print returned
(50,37) =  1850.1
(49,37) =  1849.1
(50,37) =  1850.1
(51,37) =  1851.1
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
(52,37) =  1852.1
(53,37) =  1853.1
  PASS  Getting Local Array with Integer 1D Data Test, ESMF_LocalArrayUTest.F90, line 526
(51,37) =  1851.1
(52,37) =  1852.1
(53,37) =  1853.1
 array 2a print returned
 array 2a print returned
 array 1d destroy returned
  PASS  Compare Local Array Data Integer 1D Test, ESMF_LocalArrayUTest.F90, line 540
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 array 2a get returned
 array 2a get returned
 array 1d destroy returned
 bounds:            3           7          53          37
 bounds:            3           7          53          37
 Creating array2
 partial print of realptr data =    303.10000610351562        304.10000610351562        305.10000610351562        306.10000610351562        353.10000610351562        354.10000610351562        355.10000610351562        356.10000610351562        403.10000610351562        404.10000610351562        405.10000610351562        406.10000610351562     
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 Creating array2
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
  PASS  Creating Local Array with 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 569
 array 2a create returned
 array 2a destroy returned
LocalArrayPrint: Array at address 0x1471041e0:
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2a create returned
 array 2a destroy returned
            rank = 2, typekind = 6, base_addr = 0x150010600
LocalArrayPrint: Array at address 0x141804080:
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
            rank = 2, typekind = 6, base_addr = 0x14200c800
            dim[0] = 51  dim[1] = 31  
 array 2b create returned
            dim[0] = 51  dim[1] = 31  
  Real, *8, Dim 2, Data values:
 array 2b create returned
 array 2b get returned
  Real, *8, Dim 2, Data values:
( 3, 7) =  303.1
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
( 3, 7) =  303.1
( 4, 7) =  304.1
( 5, 7) =  305.1
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
( 4, 7) =  304.1
( 6, 7) =  306.1
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
( 5, 7) =  305.1
LocalArrayPrint: Array at address 0x122605760:
            rank = 2, typekind = 6, base_addr = 0x12280dc00
( 7, 7) =  307.1
( 6, 7) =  306.1
LocalArrayPrint: Array at address 0x126e19e50:
( 8, 7) =  308.1
( 7, 7) =  307.1
            dim[0] = 15  dim[1] = 13  
            rank = 2, typekind = 6, base_addr = 0x14000c000
( 8, 7) =  308.1
( 9, 7) =  309.1
            dim[0] = 15  dim[1] = 13  
  Real, *8, Dim 2, Data values:
  Real, *8, Dim 2, Data values:
(10, 7) =  310.1
( 9, 7) =  309.1
( 1, 1) =  1.1
( 1, 1) =  1.1
(10, 7) =  310.1
(11, 7) =  311.1
(12, 7) =  312.1
( 2, 1) =  2.1
( 2, 1) =  2.1
( 3, 1) =  3.1
(11, 7) =  311.1
( 3, 1) =  3.1
(12, 7) =  312.1
  skipping to end ...
( 4, 1) =  4.1
( 4, 1) =  4.1
  skipping to end ...
(44,37) =  1844.1
( 5, 1) =  5.1
( 5, 1) =  5.1
(44,37) =  1844.1
(45,37) =  1845.1
(46,37) =  1846.1
( 6, 1) =  6.1
( 6, 1) =  6.1
(45,37) =  1845.1
( 7, 1) =  7.1
( 7, 1) =  7.1
(47,37) =  1847.1
(46,37) =  1846.1
( 8, 1) =  8.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(48,37) =  1848.1
(47,37) =  1847.1
( 9, 1) =  9.1
(49,37) =  1849.1
(48,37) =  1848.1
(10, 1) =  10.1
(10, 1) =  10.1
(49,37) =  1849.1
(50,37) =  1850.1
  skipping to end ...
  skipping to end ...
(50,37) =  1850.1
(51,37) =  1851.1
( 6,13) =  186.1
( 6,13) =  186.1
(52,37) =  1852.1
( 7,13) =  187.1
(51,37) =  1851.1
( 7,13) =  187.1
(53,37) =  1853.1
( 8,13) =  188.1
(52,37) =  1852.1
( 8,13) =  188.1
 array 2a print returned
( 9,13) =  189.1
(10,13) =  190.1
(53,37) =  1853.1
( 9,13) =  189.1
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
(10,13) =  190.1
(11,13) =  191.1
 array 2a print returned
(12,13) =  192.1
(11,13) =  191.1
 array 2a get returned
(13,13) =  193.1
(12,13) =  192.1
 realptr data changed after nocopy set, now =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000     
(13,13) =  193.1
(14,13) =  194.1
 bounds:            3           7          53          37
(14,13) =  194.1
(15,13) =  195.1
(15,13) =  195.1
 array 2b print returned
 array 2a get returned
 bounds:            3           7          53          37
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
 array 2b destroy returned
 array 2b print returned
 partial print of realptr2 data =    306.00000000000000        308.00000000000000        310.00000000000000        312.00000000000000        314.00000000000000        356.00000000000000        358.00000000000000        360.00000000000000        362.00000000000000        364.00000000000000        406.00000000000000        408.00000000000000        410.00000000000000        412.00000000000000        414.00000000000000     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2b destroy returned
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 604
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2a destroy returned
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 629
 array 2b create returned
 array 2b get returned
 array 2b create returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
 array 2b get returned
 partial print of realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        16.100000381469727        17.100000381469727        18.100000381469727        31.100000381469727        32.099998474121094        33.099998474121094     
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 652
LocalArrayPrint: Array at address 0x1471041e0:
            rank = 2, typekind = 6, base_addr = 0x15000f200
            dim[0] = 15  dim[1] = 13  
LocalArrayPrint: Array at address 0x141804080:
            rank = 2, typekind = 6, base_addr = 0x14200ba00
  Real, *8, Dim 2, Data values:
            dim[0] = 15  dim[1] = 13  
( 1, 1) =  1.1
  Real, *8, Dim 2, Data values:
( 1, 1) =  1.1
( 2, 1) =  2.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 5, 1) =  5.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 9, 1) =  9.1
(10, 1) =  10.1
(10, 1) =  10.1
  skipping to end ...
  skipping to end ...
( 6,13) =  186.1
( 6,13) =  186.1
( 7,13) =  187.1
( 7,13) =  187.1
( 8,13) =  188.1
( 8,13) =  188.1
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
( 9,13) =  189.1
( 9,13) =  189.1
(10,13) =  190.1
(10,13) =  190.1
 array 2c create returned
(11,13) =  191.1
(11,13) =  191.1
LocalArrayPrint: Array at address 0x126e19e50:
(12,13) =  192.1
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
(12,13) =  192.1
(13,13) =  193.1
            rank = 2, typekind = 6, base_addr = 0x128270000
            dim[0] = 4015  dim[1] = 13  
(13,13) =  193.1
(14,13) =  194.1
(14,13) =  194.1
  Real, *8, Dim 2, Data values:
 array 2c create returned
(15,13) =  195.1
(15,13) =  195.1
LocalArrayPrint: Array at address 0x122605760:
( 1, 1) =  1.1
 array 2b print returned
 array 2b print returned
            rank = 2, typekind = 6, base_addr = 0x118070000
( 2, 1) =  2.1
 array 2b destroy returned
 array 2b destroy returned
            dim[0] = 4015  dim[1] = 13  
  Real, *8, Dim 2, Data values:
( 3, 1) =  3.1
( 4, 1) =  4.1
( 1, 1) =  1.1
( 5, 1) =  5.1
( 2, 1) =  2.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
( 3, 1) =  3.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 9, 1) =  9.1
(10, 1) =  10.1
  skipping to end ...
( 6, 1) =  6.1
( 7, 1) =  7.1
( 8, 1) =  8.1
(4006,13) =  52186.1
( 9, 1) =  9.1
(4007,13) =  52187.1
(10, 1) =  10.1
(4008,13) =  52188.1
  skipping to end ...
(4006,13) =  52186.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4011,13) =  52191.1
(4007,13) =  52187.1
(4012,13) =  52192.1
(4013,13) =  52193.1
(4008,13) =  52188.1
(4009,13) =  52189.1
(4010,13) =  52190.1
(4014,13) =  52194.1
(4015,13) =  52195.1
(4011,13) =  52191.1
 array 2c print returned
(4012,13) =  52192.1
(4013,13) =  52193.1
(4014,13) =  52194.1
(4015,13) =  52195.1
 array 2c print returned
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
 isESMFAllocated =  T
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
  PASS  Creating Local Array with 2D Real Data based on an existing F90 pointer Test, ESMF_LocalArrayUTest.F90, line 681
 array 2c create returned
 array 2c get returned
LocalArrayPrint: Array at address 0x1471041e0:
 array 2c get returned
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
            rank = 2, typekind = 6, base_addr = 0x118070000
            dim[0] = 4015  dim[1] = 13  
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 array 2c create returned
LocalArrayPrint: Array at address 0x141804080:
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
  Real, *8, Dim 2, Data values:
            rank = 2, typekind = 6, base_addr = 0x118070000
( 1, 1) =  1.1
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
            dim[0] = 4015  dim[1] = 13  
( 2, 1) =  2.1
 array 2c destroy returned
  Real, *8, Dim 2, Data values:
 array 2c destroy returned
( 3, 1) =  3.1
( 1, 1) =  1.1
( 4, 1) =  4.1
( 5, 1) =  5.1
( 2, 1) =  2.1
( 3, 1) =  3.1
( 6, 1) =  6.1
( 7, 1) =  7.1
( 4, 1) =  4.1
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
( 5, 1) =  5.1
( 6, 1) =  6.1
( 8, 1) =  8.1
( 9, 1) =  9.1
 array 4a create returned
 array 4a create returned
( 7, 1) =  7.1
(10, 1) =  10.1
( 8, 1) =  8.1
( 9, 1) =  9.1
  skipping to end ...
(4006,13) =  52186.1
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
(10, 1) =  10.1
(4007,13) =  52187.1
  skipping to end ...
(4008,13) =  52188.1
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
(4009,13) =  52189.1
(4006,13) =  52186.1
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
(4010,13) =  52190.1
(4011,13) =  52191.1
(4007,13) =  52187.1
 array 4a get returned
(4008,13) =  52188.1
(4009,13) =  52189.1
 array 4a get returned
(4012,13) =  52192.1
(4013,13) =  52193.1
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
(4010,13) =  52190.1
(4011,13) =  52191.1
(4014,13) =  52194.1
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
(4015,13) =  52195.1
(4012,13) =  52192.1
(4013,13) =  52193.1
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 2c print returned
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
(4014,13) =  52194.1
 array 4a get returned
(4015,13) =  52195.1
 array 2c print returned
 array 4a get returned
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
 array 4a print returned
 array 4a print returned
 array 4a destroy returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4b create returned
 array 4b create returned
LocalArrayPrint: Array at address 0x122605760:
LocalArrayPrint: Array at address 0x126e19e50:
            rank = 3, typekind = 6, base_addr = 0x118070000
            rank = 3, typekind = 6, base_addr = 0x128270000
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  1.1
  Real, *8, Dim 3, Data values:
( 2, 1, 1) =  2.1
( 3, 1, 1) =  3.1
( 1, 1, 1) =  1.1
( 2, 1, 1) =  2.1
( 3, 1, 1) =  3.1
( 4, 1, 1) =  4.1
( 4, 1, 1) =  4.1
( 5, 1, 1) =  5.1
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 array 2c get returned
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  7.1
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
( 8, 1, 1) =  8.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  8.1
 realptr data changed after datacopyflag set, now =    2.0000000000000000        4.0000000000000000        6.0000000000000000        4017.0000000000000        4019.0000000000000        4021.0000000000000        8032.0000000000000        8034.0000000000000        8036.0000000000000     
 isESMFAllocated =  T
( 9, 1, 1) =  9.1
 array 2c get returned
( 9, 1, 1) =  9.1
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
(10, 1, 1) =  10.1
  skipping to end ...
(10, 1, 1) =  10.1
  skipping to end ...
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 isESMFAllocated =  T
(24, 8,160) =  42231.1
(25, 8,160) =  42232.1
(24, 8,160) =  42231.1
(25, 8,160) =  42232.1
  PASS  Testing LocalArray is allocated internally or not for docpy ESMF_DATACOPY_VALUE, ESMF_LocalArrayUTest.F90, line 704
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
(26, 8,160) =  42233.1
(26, 8,160) =  42233.1
(27, 8,160) =  42234.1
(28, 8,160) =  42235.1
(27, 8,160) =  42234.1
(28, 8,160) =  42235.1
 array 2c get returned
  PASS  Getting Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 711
(29, 8,160) =  42236.1
(30, 8,160) =  42237.1
(29, 8,160) =  42236.1
(30, 8,160) =  42237.1
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
(31, 8,160) =  42238.1
(31, 8,160) =  42238.1
 array 2c get returned
(32, 8,160) =  42239.1
(33, 8,160) =  42240.1
(32, 8,160) =  42239.1
(33, 8,160) =  42240.1
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 realptr2 data =    1.1000000238418579        2.0999999046325684        3.0999999046325684        4016.1000976562500        4017.1000976562500        4018.1000976562500        8031.1000976562500        8032.1000976562500        8033.1000976562500     
 array 4b print returned
 array 4b print returned
 array 4b destroy returned
 array 4b destroy returned
  PASS  Compare Local Array 2D Real Data Test, ESMF_LocalArrayUTest.F90, line 729
 array 2c destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
 array 2c destroy returned
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
 array 4c failed create returned
 array 4c failed create returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
  PASS  Creating a Local Array 3D DATACOPY_VALUE Real Data Test, ESMF_LocalArrayUTest.F90, line 757
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4a create returned
 array 4d create returned
LocalArrayPrint: Array at address 0x122605760:
 array 4a create returned
 array 4d create returned
LocalArrayPrint: Array at address 0x126e19e50:
            rank = 3, typekind = 6, base_addr = 0x122814000
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
            rank = 3, typekind = 6, base_addr = 0x140024600
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  308
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
  PASS  Getting Local Array 3D Real Data with wrong dimension array Test, ESMF_LocalArrayUTest.F90, line 766
( 1, 1, 1) =  0
( 3, 1, 1) =  0
( 2, 1, 1) =  2.1
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
( 3, 1, 1) =  0
( 4, 1, 1) =  4.1
( 4, 1, 1) =  312
( 5, 1, 1) =  314
( 5, 1, 1) =  5.1
( 6, 1, 1) =  316
  PASS  Getting Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 776
( 7, 1, 1) =  318
( 6, 1, 1) =  6.1
 array 4a get returned
( 7, 1, 1) =  7.1
( 8, 1, 1) =  320
 array 4a get returned
( 8, 1, 1) =  8.1
( 9, 1, 1) =  322
(10, 1, 1) =  324
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
( 9, 1, 1) =  9.1
  PASS  Compare Local Array 3D Real Data without allocating array size Test, ESMF_LocalArrayUTest.F90, line 797
  skipping to end ...
( 1, 3,40) =  1490
(10, 1, 1) =  10.1
  skipping to end ...
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
( 1, 3,40) =  1191.1
( 2, 3,40) =  1192.1
( 2, 3,40) =  1492
( 3, 3,40) =  1193.1
( 4, 3,40) =  1194.1
( 3, 3,40) =  1494
( 4, 3,40) =  1496
  PASS  Getting Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 806
 array 4a get returned
( 5, 3,40) =  1498
( 5, 3,40) =  1195.1
 array 4a get returned
( 6, 3,40) =  1500
( 6, 3,40) =  1196.1
( 7, 3,40) =  1502
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
( 7, 3,40) =  1197.1
( 8, 3,40) =  1198.1
  PASS  Compare Local Array 3D Real Data Test, ESMF_LocalArrayUTest.F90, line 827
( 8, 3,40) =  1504
( 9, 3,40) =  1199.1
(10, 3,40) =  1200.1
( 9, 3,40) =  1506
(10, 3,40) =  1508
 array 4a print returned
 array 4a destroy returned
 array 4a print returned
 array 4d print returned
 array 4d print returned
 array 4a destroy returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data Test, ESMF_LocalArrayUTest.F90, line 852
 array 4b create returned
 array 4e create returned
 array 4e create returned
 array 4b create returned
LocalArrayPrint: Array at address 0x122605760:
LocalArrayPrint: Array at address 0x1471041e0:
LocalArrayPrint: Array at address 0x126e19e50:
LocalArrayPrint: Array at address 0x141804080:
            rank = 3, typekind = 6, base_addr = 0x122816600
            rank = 3, typekind = 6, base_addr = 0x118070000
            rank = 3, typekind = 6, base_addr = 0x140026c00
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
            rank = 3, typekind = 6, base_addr = 0x118070000
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
            dim[0] = 33  dim[1] = 8  dim[2] = 160  
  Real, *8, Dim 3, Data values:
  Real, *8, Dim 3, Data values:
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 1, 1, 1) =  1.1
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  1.1
( 1, 1, 1) =  0
( 2, 1, 1) =  1218.1
( 2, 1, 1) =  1544
( 3, 1, 1) =  0
( 2, 1, 1) =  2.1
( 2, 1, 1) =  2.1
( 3, 1, 1) =  3.1
( 4, 1, 1) =  1548
( 3, 1, 1) =  0
( 3, 1, 1) =  3.1
( 4, 1, 1) =  4.1
( 4, 1, 1) =  1220.1
( 5, 1, 1) =  1550
( 4, 1, 1) =  4.1
( 5, 1, 1) =  5.1
( 6, 1, 1) =  1552
( 5, 1, 1) =  1221.1
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  1554
( 6, 1, 1) =  1222.1
( 7, 1, 1) =  7.1
( 6, 1, 1) =  6.1
( 7, 1, 1) =  1223.1
( 8, 1, 1) =  1556
( 8, 1, 1) =  8.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  1224.1
( 9, 1, 1) =  1506
( 9, 1, 1) =  9.1
(10, 1, 1) =  10.1
( 9, 1, 1) =  1225.1
(10, 1, 1) =  1226.1
(10, 1, 1) =  1508
  skipping to end ...
( 8, 1, 1) =  8.1
( 9, 1, 1) =  9.1
  skipping to end ...
( 2, 3,40) =  927.1
( 3, 3,40) =  928.1
(10, 1, 1) =  10.1
  skipping to end ...
( 2, 3,40) =  799.1
  skipping to end ...
(24, 8,160) =  42231.1
( 3, 3,40) =  800.1
( 4, 3,40) =  929.1
(24, 8,160) =  42231.1
(25, 8,160) =  42232.1
( 4, 3,40) =  801.1
( 5, 3,40) =  930.1
(26, 8,160) =  42233.1
(25, 8,160) =  42232.1
( 6, 3,40) =  931.1
( 5, 3,40) =  802.1
(27, 8,160) =  42234.1
(26, 8,160) =  42233.1
( 7, 3,40) =  932.1
( 6, 3,40) =  803.1
(27, 8,160) =  42234.1
(28, 8,160) =  42235.1
( 7, 3,40) =  804.1
( 8, 3,40) =  933.1
(28, 8,160) =  42235.1
(29, 8,160) =  42236.1
( 8, 3,40) =  805.1
( 9, 3,40) =  934.1
(29, 8,160) =  42236.1
( 9, 3,40) =  806.1
(30, 8,160) =  42237.1
(10, 3,40) =  935.1
(30, 8,160) =  42237.1
(10, 3,40) =  807.1
(11, 3,40) =  936.1
(31, 8,160) =  42238.1
(31, 8,160) =  42238.1
 array 4e print returned
(11, 3,40) =  808.1
 array 4e print returned
(32, 8,160) =  42239.1
(32, 8,160) =  42239.1
(33, 8,160) =  42240.1
 array 4e destroy returned
(33, 8,160) =  42240.1
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
 array 4b print returned
 array 4b print returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
 array 4b destroy returned
 array 4b destroy returned
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with deallocated array Test, ESMF_LocalArrayUTest.F90, line 877
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
 array 4c failed create returned
 array 4c failed create returned
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 903
 array 4d create returned
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
 array 4d create returned
LocalArrayPrint: Array at address 0x1471041e0:
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
LocalArrayPrint: Array at address 0x141804080:
            rank = 3, typekind = 6, base_addr = 0x15000f200
            rank = 3, typekind = 6, base_addr = 0x14200ba00
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
            dim[0] = 10  dim[1] = 3  dim[2] = 40  
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  Real, *8, Dim 3, Data values:
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
( 1, 1, 1) =  0
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
( 2, 1, 1) =  2.1
( 2, 1, 1) =  2.1
( 3, 1, 1) =  0
( 3, 1, 1) =  0
( 4, 1, 1) =  4.1
( 4, 1, 1) =  4.1
( 5, 1, 1) =  5.1
( 5, 1, 1) =  5.1
( 6, 1, 1) =  6.1
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
( 6, 1, 1) =  6.1
( 7, 1, 1) =  7.1
( 7, 1, 1) =  7.1
( 8, 1, 1) =  8.1
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
( 9, 1, 1) =  9.1
( 8, 1, 1) =  8.1
(10, 1, 1) =  10.1
( 9, 1, 1) =  9.1
  skipping to end ...
(10, 1, 1) =  10.1
( 1, 3,40) =  935.1
  skipping to end ...
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
( 2, 3,40) =  936.1
( 1, 3,40) =  935.1
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
( 3, 3,40) =  937.1
( 2, 3,40) =  936.1
( 3, 3,40) =  937.1
( 4, 3,40) =  938.1
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
( 4, 3,40) =  938.1
( 5, 3,40) =  939.1
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
( 5, 3,40) =  939.1
( 6, 3,40) =  940.1
 array 1f create returned
( 6, 3,40) =  940.1
( 7, 3,40) =  941.1
( 8, 3,40) =  942.1
 array 1f destroy returned
 array 1f create returned
( 7, 3,40) =  941.1
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
 array 1f destroy returned
( 8, 3,40) =  942.1
( 9, 3,40) =  943.1
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
( 9, 3,40) =  943.1
(10, 3,40) =  944.1
 array 4d print returned
(10, 3,40) =  944.1
 array 4d print returned
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
  PASS  Creating a Local Array 3D DATACOPY_REFERENCE Real Data with an allocated array Test, ESMF_LocalArrayUTest.F90, line 926
 array 4e create returned
 array 4e create returned
LocalArrayPrint: Array at address 0x1471041e0:
            rank = 3, typekind = 6, base_addr = 0x150011800
LocalArrayPrint: Array at address 0x141804080:
            rank = 3, typekind = 6, base_addr = 0x14200e000
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  962.1
( 3, 1, 1) =  0
            dim[0] = 11  dim[1] = 3  dim[2] = 40  
  Real, *8, Dim 3, Data values:
( 1, 1, 1) =  0
( 2, 1, 1) =  962.1
( 3, 1, 1) =  0
( 4, 1, 1) =  964.1
( 4, 1, 1) =  964.1
( 5, 1, 1) =  965.1
( 5, 1, 1) =  965.1
( 6, 1, 1) =  966.1
( 6, 1, 1) =  966.1
( 7, 1, 1) =  967.1
( 7, 1, 1) =  967.1
( 8, 1, 1) =  968.1
( 8, 1, 1) =  968.1
( 9, 1, 1) =  969.1
( 9, 1, 1) =  969.1
(10, 1, 1) =  970.1
  skipping to end ...
(10, 1, 1) =  970.1
  skipping to end ...
( 2, 3,40) =  479.1
( 3, 3,40) =  480.1
( 4, 3,40) =  481.1
( 5, 3,40) =  482.1
( 2, 3,40) =  287.1
( 3, 3,40) =  288.1
( 4, 3,40) =  289.1
( 6, 3,40) =  483.1
( 5, 3,40) =  290.1
( 7, 3,40) =  484.1
( 8, 3,40) =  485.1
( 9, 3,40) =  486.1
(10, 3,40) =  487.1
(11, 3,40) =  488.1
( 6, 3,40) =  291.1
( 7, 3,40) =  292.1
( 8, 3,40) =  293.1
( 9, 3,40) =  294.1
(10, 3,40) =  295.1
 array 4e print returned
(11, 3,40) =  296.1
 array 4e destroy returned
 array 4e print returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
 array 4e destroy returned
  PASS  Initializing an Array Spec of rank 2 Test, ESMF_LocalArrayUTest.F90, line 947
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Creating an Array Spec Test, ESMF_LocalArrayUTest.F90, line 959
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec rank and verify Test, ESMF_LocalArrayUTest.F90, line 966
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Get Spec kind and verify Test, ESMF_LocalArrayUTest.F90, line 973
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Initializing an Array Spec of rank 10 Test, ESMF_LocalArrayUTest.F90, line 984
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Creating an Array from a Spec with rank of 10 Test, ESMF_LocalArrayUTest.F90, line 991
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 5 Test, ESMF_LocalArrayUTest.F90, line 999
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
  PASS  Creating an Array from a Spec with rank of 5 Test, ESMF_LocalArrayUTest.F90, line 1009
  PASS  Initializing an Array Spec of rank 4 Test, ESMF_LocalArrayUTest.F90, line 1019
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
  PASS  Creating an Array from a Spec with rank of 4 Test, ESMF_LocalArrayUTest.F90, line 1026
 array 1f create returned
 array 1f destroy returned
  PASS  Initializing an Array with data type integer Test, ESMF_LocalArrayUTest.F90, line 1049
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
 array 1f create returned
 array 1f destroy returned
  Ending Test, file ESMF_LocalArrayUTest.F90, line 1060
  PET           1  Test Elapsed Time    8.2210000000000054       msec.
  PET           0  Test Elapsed Time    8.9960000000000040       msec.
  PET           2  Test Elapsed Time    8.9930000000000003       msec.
  PET           3  Test Elapsed Time    8.2530000000000108       msec.
